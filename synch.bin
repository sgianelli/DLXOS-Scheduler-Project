; Compiled by GCC
.text
	.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lb	r2,3(r30)
	addi	r31,r0,#0
	andi	r1,r2,#0x00ff
	seqi	r1,r1,#32
	bnez	r1,L6
	nop	; not filled.
	addi	r1,r2,#-9
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#1
	beqz	r1,L5
	nop	; not filled.
L6:
	addi	r31,r0,#1
L5:
	add	r1,r0,r31
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
	.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lb	r31,3(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	bnez	r1,L12
	nop	; not filled.
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#5
	bnez	r1,L12
	nop	; not filled.
	andi	r1,r31,#0x00ff
	snei	r1,r1,#65
	bnez	r1,L11
	nop	; not filled.
L12:
	addi	r2,r0,#1
L11:
	add	r1,r0,r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
	.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#15
	sw	(r29),r2
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
	.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#0
	sw	(r29),r2
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
	.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	lw	r2,(r30)
	sw	(r29),r2
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
	.align 2
.proc _QueueLinkInit
.global _QueueLinkInit
_QueueLinkInit:
;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	lw	r2,4(r30)
	addi	r31,r0,#0
	sw	(r1),r31
	sw	12(r1),r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLinkInit
	.align 2
.proc _QueueNext
.global _QueueNext
_QueueNext:
;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#8	; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueNext
	.align 2
.proc _QueuePrev
.global _QueuePrev
_QueuePrev:
;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#8	; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueuePrev
	.align 2
.proc _QueueFirst
.global _QueueFirst
_QueueFirst:
;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#8	; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueFirst
	.align 2
.proc _QueueLast
.global _QueueLast
_QueueLast:
;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#8	; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLast
	.align 2
.proc _QueueInsertAfter
.global _QueueInsertAfter
_QueueInsertAfter:
;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r2,4(r30)
	lw	r1,8(r30)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertAfter
	.align 2
.proc _QueueInsertFirst
.global _QueueInsertFirst
_QueueInsertFirst:
;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	sw	8(r1),r3
	sw	4(r1),r3
	lw	r31,(r3)
	sw	(r1),r31
	sw	(r3),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertFirst
	.align 2
.proc _QueueInsertLast
.global _QueueInsertLast
_QueueInsertLast:
;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	lw	r2,4(r3)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertLast
	.align 2
.proc _QueueRemove
.global _QueueRemove
_QueueRemove:
;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	lw	r1,8(r31)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L44
	nop	; not filled.
	lw	r1,4(r31)
	lw	r3,(r31)
	sw	(r1),r3
	lw	r1,(r31)
	lw	r3,4(r31)
	sw	4(r1),r3
	lw	r2,8(r31)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L44:
	addi	r3,r0,#0
	sw	(r31),r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueRemove
	.align 2
.proc _QueueLength
.global _QueueLength
_QueueLength:
;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#8	; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLength
	.align 2
.proc _QueueEmpty
.global _QueueEmpty
_QueueEmpty:
;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#8	; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	seqi	r1,r1,#0
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueEmpty
.data
	.align 2
LC0:
	.ascii "Entering SynchModuleInit\n\000"
	.align 2
LC1:
	.ascii "Leaving SynchModuleInit\n\000"
.text
	.align 2
.proc _SynchModuleInit
.global _SynchModuleInit
_SynchModuleInit:
;  Function 'SynchModuleInit'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r3,r0,#112
	sw	4(r29),r3
	jal	_dindex
	nop	; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L53
	nop	; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r3,r0,#43
	sw	4(r29),r3
	jal	_dindex
	nop	; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L52
	nop	; not filled.
L53:
	addi	r29,r29,#-8
	lhi	r3,((LC0)>>16)&0xffff
	addui	r3,r3,(LC0)&0xffff
	sw	(r29),r3
	jal	_printf
	nop	; not filled.
	addi	r29,r29,#8
L52:
	lhi	r31,((_sems)>>16)&0xffff
	addui	r31,r31,(_sems)&0xffff
	addi	r2,r31,#1260
L57:
	addi	r3,r0,#0
	sw	16(r31),r3
	addi	r31,r31,#20
	sle	r1,r31,r2
	bnez	r1,L57
	nop	; not filled.
	lhi	r31,((_locks)>>16)&0xffff
	addui	r31,r31,(_locks)&0xffff
	addi	r2,r31,#1764
L62:
	addi	r3,r0,#0
	sw	24(r31),r3
	addi	r3,r0,#-1
	sw	20(r31),r3
	addi	r31,r31,#28
	sle	r1,r31,r2
	bnez	r1,L62
	nop	; not filled.
	addi	r2,r0,#0
	lhi	r31,((_conds)>>16)&0xffff
	addui	r31,r31,(_conds)&0xffff
L67:
	addi	r3,r0,#0
	sw	28(r31),r3
	sw	24(r31),r3
	addi	r31,r31,#32
	addi	r2,r2,#1
	slei	r1,r2,#31
	bnez	r1,L67
	nop	; not filled.
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r3,r0,#112
	sw	4(r29),r3
	jal	_dindex
	nop	; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L70
	nop	; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r3,r0,#43
	sw	4(r29),r3
	jal	_dindex
	nop	; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L69
	nop	; not filled.
L70:
	addi	r29,r29,#-8
	lhi	r3,((LC1)>>16)&0xffff
	addui	r3,r3,(LC1)&0xffff
	sw	(r29),r3
	jal	_printf
	nop	; not filled.
	addi	r29,r29,#8
L69:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SynchModuleInit
	.align 2
.proc _SemInit
.global _SemInit
_SemInit:
;  Function 'SemInit'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	lw	r3,4(r30)
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_QueueInit
	nop	; not filled.
	sw	12(r2),r3
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemInit
	.align 2
.proc _SemCreate
.global _SemCreate
_SemCreate:
;  Function 'SemCreate'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop	; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r3,r0,#0
	lhi	r31,((_sems)>>16)&0xffff
	addui	r31,r31,(_sems)&0xffff
L89:
	add	r2,r0,r31
	lw	r1,16(r31)
	snei	r1,r1,#0
	beqz	r1,L96
	nop	; not filled.
	addi	r31,r2,#20
	addi	r3,r3,#1
	slei	r1,r3,#63
	bnez	r1,L89
	nop	; not filled.
L87:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	seqi	r1,r3,#64
	bnez	r1,L93
	nop	; not filled.
	slli	r1,r3,#0x2
	add	r1,r1,r3
	slli	r1,r1,#0x2
	lhi	r5,((_sems)>>16)&0xffff
	addui	r5,r5,(_sems)&0xffff
	add	r2,r1,r5
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_QueueInit
	nop	; not filled.
	lw	r5,(r30)
	sw	12(r2),r5
	addi	r29,r29,#8
	add	r1,r0,r3
	j	L95
	nop	; not filled.
L96:
	addi	r5,r0,#1
	sw	16(r31),r5
	j	L87
	nop	; not filled.
L93:
	addi	r1,r0,#-1
L95:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemCreate
.data
	.align 2
LC2:
	.ascii "Old interrupt value was 0x%x.\n\000"
	.align 2
LC3:
	.ascii "Proc 0x%x waiting on sem 0x%x, count=%d.\n\000"
	.align 2
LC4:
	.ascii "Suspending current proc (0x%x).\n\000"
.text
	.align 2
.proc _SemWait
.global _SemWait
_SemWait:
;  Function 'SemWait'; 0 bytes of locals, 6 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	lw	r4,(r30)
	addi	r29,r29,#-8
	addi	r7,r0,#15
	sw	(r29),r7
	jal	_SetIntrs
	nop	; not filled.
	add	r6,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r7,r0,#73
	sw	4(r29),r7
	jal	_dindex
	nop	; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L100
	nop	; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop	; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L99
	nop	; not filled.
L100:
	addi	r29,r29,#-8
	lhi	r7,((LC2)>>16)&0xffff
	addui	r7,r7,(LC2)&0xffff
	sw	(r29),r7
	sw	4(r29),r6
	jal	_printf
	nop	; not filled.
	addi	r29,r29,#8
L99:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r7,r0,#115
	sw	4(r29),r7
	jal	_dindex
	nop	; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L102
	nop	; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop	; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L101
	nop	; not filled.
L102:
	addi	r29,r29,#-16
	lhi	r7,((LC3)>>16)&0xffff
	addui	r7,r7,(LC3)&0xffff
	sw	(r29),r7
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	4(r29),r1
	sw	8(r29),r4
	lw	r7,12(r4)
	sw	12(r29),r7
	jal	_printf
	nop	; not filled.
	addi	r29,r29,#16
L101:
	lw	r1,12(r4)
	addi	r1,r1,#-1
	sw	12(r4),r1
	slti	r1,r1,#0
	beqz	r1,L103
	nop	; not filled.
	jal	_QueueAllocLink
	nop	; not filled.
	add	r2,r0,r1
	lhi	r5,((_currentPCB)>>16)&0xffff
	addui	r5,r5,(_currentPCB)&0xffff
	lw	r1,(r5)
	addi	r7,r0,#0
	sw	(r2),r7
	sw	12(r2),r1
	addi	r29,r29,#-8
	lhi	r3,((_debugstr)>>16)&0xffff
	addui	r3,r3,(_debugstr)&0xffff
	sw	(r29),r3
	addi	r7,r0,#115
	sw	4(r29),r7
	jal	_dindex
	nop	; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L106
	nop	; not filled.
	addi	r29,r29,#-8
	sw	(r29),r3
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop	; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L105
	nop	; not filled.
L106:
	addi	r29,r29,#-8
	lhi	r7,((LC4)>>16)&0xffff
	addui	r7,r7,(LC4)&0xffff
	sw	(r29),r7
	lw	r1,(r5)
	sw	4(r29),r1
	jal	_printf
	nop	; not filled.
	addi	r29,r29,#8
L105:
	lw	r1,4(r4)
	sw	8(r2),r4
	sw	4(r2),r1
	lw	r7,(r1)
	sw	(r2),r7
	sw	(r1),r2
	lw	r1,(r2)
	sw	4(r1),r2
	lw	r1,8(r4)
	addi	r1,r1,#1
	sw	8(r4),r1
	jal	_ProcessSleep
	nop	; not filled.
L103:
	addi	r29,r29,#-8
	sw	(r29),r6
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemWait
	.align 2
.proc _SemHandleWait
.global _SemHandleWait
_SemHandleWait:
;  Function 'SemHandleWait'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lw	r31,(r30)
	sleui	r1,r31,#63
	beqz	r1,L116
	nop	; not filled.
	slli	r1,r31,#0x2
	add	r1,r1,r31
	slli	r1,r1,#0x2
	lhi	r2,((_sems)>>16)&0xffff
	addui	r2,r2,(_sems)&0xffff
	add	r31,r1,r2
	lw	r1,16(r31)
	snei	r1,r1,#0
	beqz	r1,L117
	nop	; not filled.
	addi	r29,r29,#-8
	sw	(r29),r31
	jal	_SemWait
	nop	; not filled.
	addi	r1,r0,#0
	addi	r29,r29,#8
	j	L115
	nop	; not filled.
L117:
	addi	r1,r0,#1
	j	L115
	nop	; not filled.
L116:
	addi	r1,r0,#1
L115:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemHandleWait
.data
	.align 2
LC5:
	.ascii "Signalling on sem 0x%x, count=%d.\n\000"
	.align 2
LC6:
	.ascii "Waking up PCB 0x%x.\n\000"
.text
	.align 2
.proc _SemSignal
.global _SemSignal
_SemSignal:
;  Function 'SemSignal'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r2,(r30)
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop	; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r3,((_debugstr)>>16)&0xffff
	addui	r3,r3,(_debugstr)&0xffff
	sw	(r29),r3
	addi	r5,r0,#115
	sw	4(r29),r5
	jal	_dindex
	nop	; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L123
	nop	; not filled.
	addi	r29,r29,#-8
	sw	(r29),r3
	addi	r5,r0,#43
	sw	4(r29),r5
	jal	_dindex
	nop	; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L122
	nop	; not filled.
L123:
	addi	r29,r29,#-16
	lhi	r5,((LC5)>>16)&0xffff
	addui	r5,r5,(LC5)&0xffff
	sw	(r29),r5
	sw	4(r29),r2
	lw	r5,12(r2)
	sw	8(r29),r5
	jal	_printf
	nop	; not filled.
	addi	r29,r29,#16
L122:
	lw	r1,12(r2)
	addi	r1,r1,#1
	sw	12(r2),r1
	slei	r1,r1,#0
	beqz	r1,L124
	nop	; not filled.
	lw	r3,(r2)
	lw	r1,8(r3)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L127
	nop	; not filled.
	lw	r1,4(r3)
	lw	r5,(r3)
	sw	(r1),r5
	lw	r1,(r3)
	lw	r5,4(r3)
	sw	4(r1),r5
	lw	r2,8(r3)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L127:
	addi	r5,r0,#0
	sw	(r3),r5
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r5,r0,#115
	sw	4(r29),r5
	jal	_dindex
	nop	; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L129
	nop	; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r5,r0,#43
	sw	4(r29),r5
	jal	_dindex
	nop	; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L128
	nop	; not filled.
L129:
	addi	r29,r29,#-8
	lhi	r5,((LC6)>>16)&0xffff
	addui	r5,r5,(LC6)&0xffff
	sw	(r29),r5
	lw	r1,12(r3)
	sw	4(r29),r1
	jal	_printf
	nop	; not filled.
	addi	r29,r29,#8
L128:
	addi	r29,r29,#-8
	lw	r5,12(r3)
	sw	(r29),r5
	jal	_ProcessWakeup
	nop	; not filled.
	sw	(r29),r3
	jal	_QueueFreeLink
	nop	; not filled.
	addi	r29,r29,#8
L124:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemSignal
	.align 2
.proc _SemHandleSignal
.global _SemHandleSignal
_SemHandleSignal:
;  Function 'SemHandleSignal'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lw	r31,(r30)
	sleui	r1,r31,#63
	beqz	r1,L136
	nop	; not filled.
	slli	r1,r31,#0x2
	add	r1,r1,r31
	slli	r1,r1,#0x2
	lhi	r2,((_sems)>>16)&0xffff
	addui	r2,r2,(_sems)&0xffff
	add	r31,r1,r2
	lw	r1,16(r31)
	snei	r1,r1,#0
	beqz	r1,L137
	nop	; not filled.
	addi	r29,r29,#-8
	sw	(r29),r31
	jal	_SemSignal
	nop	; not filled.
	addi	r1,r0,#0
	addi	r29,r29,#8
	j	L135
	nop	; not filled.
L137:
	addi	r1,r0,#1
	j	L135
	nop	; not filled.
L136:
	addi	r1,r0,#1
L135:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemHandleSignal
	.align 2
.proc _LockInit
.global _LockInit
_LockInit:
;  Function 'LockInit'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r2,(r30)
	addi	r29,r29,#-8
	addi	r4,r0,#15
	sw	(r29),r4
	jal	_SetIntrs
	nop	; not filled.
	add	r3,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_QueueInit
	nop	; not filled.
	addi	r4,r0,#1
	sw	12(r2),r4
	addi	r29,r29,#8
	addi	r4,r0,#-1
	sw	20(r2),r4
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockInit
	.align 2
.proc _LockCreate
.global _LockCreate
_LockCreate:
;  Function 'LockCreate'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop	; not filled.
	add	r31,r0,r1
	addi	r29,r29,#8
	addi	r4,r0,#0
	lhi	r3,((_locks)>>16)&0xffff
	addui	r3,r3,(_locks)&0xffff
L153:
	add	r2,r0,r3
	lw	r1,24(r3)
	snei	r1,r1,#0
	beqz	r1,L163
	nop	; not filled.
	addi	r3,r2,#28
	addi	r4,r4,#1
	slei	r1,r4,#63
	bnez	r1,L153
	nop	; not filled.
L151:
	addi	r29,r29,#-8
	sw	(r29),r31
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	seqi	r1,r4,#64
	bnez	r1,L157
	nop	; not filled.
	slli	r1,r4,#0x3
	sub	r1,r1,r4
	slli	r1,r1,#0x2
	lhi	r5,((_locks)>>16)&0xffff
	addui	r5,r5,(_locks)&0xffff
	add	r2,r1,r5
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop	; not filled.
	add	r3,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_QueueInit
	nop	; not filled.
	addi	r5,r0,#1
	sw	12(r2),r5
	addi	r29,r29,#8
	addi	r5,r0,#-1
	sw	20(r2),r5
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	add	r1,r0,r4
	j	L162
	nop	; not filled.
L163:
	addi	r5,r0,#1
	sw	24(r3),r5
	j	L151
	nop	; not filled.
L157:
	addi	r1,r0,#-1
L162:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockCreate
	.align 2
.proc _LockAcquire
.global _LockAcquire
_LockAcquire:
;  Function 'LockAcquire'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r3,(r30)
	addi	r29,r29,#-8
	addi	r6,r0,#15
	sw	(r29),r6
	jal	_SetIntrs
	nop	; not filled.
	add	r5,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r4,((_currentPCB)>>16)&0xffff
	addui	r4,r4,(_currentPCB)&0xffff
	lw	r6,(r4)
	sw	(r29),r6
	jal	_findpid
	nop	; not filled.
	lw	r2,20(r3)
	addi	r29,r29,#8
	sne	r1,r2,r1
	beqz	r1,L170
	nop	; not filled.
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SemWait
	nop	; not filled.
	lw	r4,(r4)
	sw	(r29),r4
	jal	_findpid
	nop	; not filled.
	sw	20(r3),r1
	addi	r29,r29,#8
L170:
	addi	r29,r29,#-8
	sw	(r29),r5
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockAcquire
	.align 2
.proc _LockHandleAcquire
.global _LockHandleAcquire
_LockHandleAcquire:
;  Function 'LockHandleAcquire'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r2,(r30)
	sleui	r1,r2,#63
	beqz	r1,L181
	nop	; not filled.
	slli	r1,r2,#0x3
	sub	r1,r1,r2
	slli	r1,r1,#0x2
	lhi	r6,((_locks)>>16)&0xffff
	addui	r6,r6,(_locks)&0xffff
	add	r3,r1,r6
	lw	r1,24(r3)
	snei	r1,r1,#0
	beqz	r1,L181
	nop	; not filled.
	addi	r29,r29,#-8
	addi	r6,r0,#15
	sw	(r29),r6
	jal	_SetIntrs
	nop	; not filled.
	add	r5,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r4,((_currentPCB)>>16)&0xffff
	addui	r4,r4,(_currentPCB)&0xffff
	lw	r6,(r4)
	sw	(r29),r6
	jal	_findpid
	nop	; not filled.
	lw	r2,20(r3)
	addi	r29,r29,#8
	sne	r1,r2,r1
	beqz	r1,L185
	nop	; not filled.
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SemWait
	nop	; not filled.
	lw	r4,(r4)
	sw	(r29),r4
	jal	_findpid
	nop	; not filled.
	sw	20(r3),r1
	addi	r29,r29,#8
L185:
	addi	r29,r29,#-8
	sw	(r29),r5
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	addi	r1,r0,#0
	j	L188
	nop	; not filled.
L181:
	addi	r1,r0,#1
L188:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockHandleAcquire
	.align 2
.proc _LockRelease
.global _LockRelease
_LockRelease:
;  Function 'LockRelease'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r3,(r30)
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop	; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	jal	_findpid
	nop	; not filled.
	lw	r2,20(r3)
	addi	r29,r29,#8
	seq	r1,r2,r1
	beqz	r1,L195
	nop	; not filled.
	addi	r5,r0,#-1
	sw	20(r3),r5
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SemSignal
	nop	; not filled.
	addi	r29,r29,#8
L195:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockRelease
	.align 2
.proc _LockHandleRelease
.global _LockHandleRelease
_LockHandleRelease:
;  Function 'LockHandleRelease'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r2,(r30)
	sleui	r1,r2,#63
	beqz	r1,L206
	nop	; not filled.
	slli	r1,r2,#0x3
	sub	r1,r1,r2
	slli	r1,r1,#0x2
	lhi	r5,((_locks)>>16)&0xffff
	addui	r5,r5,(_locks)&0xffff
	add	r3,r1,r5
	lw	r1,24(r3)
	snei	r1,r1,#0
	beqz	r1,L206
	nop	; not filled.
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop	; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	jal	_findpid
	nop	; not filled.
	lw	r2,20(r3)
	addi	r29,r29,#8
	seq	r1,r2,r1
	beqz	r1,L210
	nop	; not filled.
	addi	r5,r0,#-1
	sw	20(r3),r5
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SemSignal
	nop	; not filled.
	addi	r29,r29,#8
L210:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	addi	r1,r0,#0
	j	L213
	nop	; not filled.
L206:
	addi	r1,r0,#1
L213:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockHandleRelease
	.align 2
.proc _CondInit
.global _CondInit
_CondInit:
;  Function 'CondInit'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r2,(r30)
	lw	r3,4(r30)
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop	; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r1,r2,#4
	addi	r29,r29,#-8
	sw	(r29),r1
	jal	_QueueInit
	nop	; not filled.
	addi	r5,r0,#0
	sw	16(r2),r5
	addi	r29,r29,#8
	sw	(r2),r3
	sw	24(r2),r5
	addi	r5,r0,#1
	sw	28(r2),r5
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondInit
	.align 2
.proc _CondCreate
.global _CondCreate
_CondCreate:
;  Function 'CondCreate'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r3,(r30)
	sgtui	r1,r3,#64
	bnez	r1,L233
	nop	; not filled.
	slli	r1,r3,#0x3
	sub	r1,r1,r3
	slli	r1,r1,#0x2
	lhi	r6,((_locks)>>16)&0xffff
	addui	r6,r6,(_locks)&0xffff
	add	r1,r1,r6
	lw	r1,24(r1)
	snei	r1,r1,#1
	beqz	r1,L224
	nop	; not filled.
	j	L233
	nop	; not filled.
L239:
	addi	r6,r0,#1
	sw	28(r2),r6
	j	L227
	nop	; not filled.
L224:
	addi	r29,r29,#-8
	addi	r6,r0,#15
	sw	(r29),r6
	jal	_SetIntrs
	nop	; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r5,r0,#0
	lhi	r2,((_conds)>>16)&0xffff
	addui	r2,r2,(_conds)&0xffff
L229:
	lw	r1,28(r2)
	snei	r1,r1,#0
	beqz	r1,L239
	nop	; not filled.
	addi	r2,r2,#32
	addi	r5,r5,#1
	slei	r1,r5,#31
	bnez	r1,L229
	nop	; not filled.
L227:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	seqi	r1,r5,#32
	bnez	r1,L233
	nop	; not filled.
	slli	r2,r5,#0x5
	lhi	r6,((_conds)>>16)&0xffff
	addui	r6,r6,(_conds)&0xffff
	add	r2,r2,r6
	slli	r1,r3,#0x3
	sub	r1,r1,r3
	slli	r1,r1,#0x2
	lhi	r6,((_locks)>>16)&0xffff
	addui	r6,r6,(_locks)&0xffff
	add	r3,r1,r6
	addi	r29,r29,#-8
	addi	r6,r0,#15
	sw	(r29),r6
	jal	_SetIntrs
	nop	; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r1,r2,#4
	addi	r29,r29,#-8
	sw	(r29),r1
	jal	_QueueInit
	nop	; not filled.
	addi	r6,r0,#0
	sw	16(r2),r6
	addi	r29,r29,#8
	sw	(r2),r3
	sw	24(r2),r6
	addi	r6,r0,#1
	sw	28(r2),r6
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	add	r1,r0,r5
	j	L238
	nop	; not filled.
L233:
	addi	r1,r0,#-1
L238:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondCreate
	.align 2
.proc _CondWait
.global _CondWait
_CondWait:
;  Function 'CondWait'; 0 bytes of locals, 7 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	lw	r4,(r30)
	addi	r29,r29,#-8
	addi	r8,r0,#15
	sw	(r29),r8
	jal	_SetIntrs
	nop	; not filled.
	add	r7,r0,r1
	addi	r29,r29,#8
	lw	r1,24(r4)
	addi	r1,r1,#1
	sw	24(r4),r1
	lw	r3,(r4)
	addi	r29,r29,#-8
	sw	(r29),r8
	jal	_SetIntrs
	nop	; not filled.
	add	r5,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r6,((_currentPCB)>>16)&0xffff
	addui	r6,r6,(_currentPCB)&0xffff
	lw	r8,(r6)
	sw	(r29),r8
	jal	_findpid
	nop	; not filled.
	lw	r2,20(r3)
	addi	r29,r29,#8
	seq	r1,r2,r1
	beqz	r1,L244
	nop	; not filled.
	addi	r8,r0,#-1
	sw	20(r3),r8
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SemSignal
	nop	; not filled.
	addi	r29,r29,#8
L244:
	addi	r29,r29,#-8
	sw	(r29),r5
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	addi	r29,r29,#-8
	addi	r1,r4,#4
	sw	(r29),r1
	jal	_SemWait
	nop	; not filled.
	lw	r3,(r4)
	addi	r29,r29,#8
	addi	r29,r29,#-8
	addi	r8,r0,#15
	sw	(r29),r8
	jal	_SetIntrs
	nop	; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lw	r8,(r6)
	sw	(r29),r8
	jal	_findpid
	nop	; not filled.
	lw	r2,20(r3)
	addi	r29,r29,#8
	sne	r1,r2,r1
	beqz	r1,L248
	nop	; not filled.
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SemWait
	nop	; not filled.
	lw	r6,(r6)
	sw	(r29),r6
	jal	_findpid
	nop	; not filled.
	sw	20(r3),r1
	addi	r29,r29,#8
L248:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	addi	r29,r29,#-8
	sw	(r29),r7
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondWait
	.align 2
.proc _CondHandleWait
.global _CondHandleWait
_CondHandleWait:
;  Function 'CondHandleWait'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r2,(r30)
	sleui	r1,r2,#31
	beqz	r1,L256
	nop	; not filled.
	slli	r1,r2,#0x5
	lhi	r4,((_conds)>>16)&0xffff
	addui	r4,r4,(_conds)&0xffff
	add	r3,r1,r4
	lw	r1,28(r3)
	snei	r1,r1,#0
	beqz	r1,L257
	nop	; not filled.
	lw	r2,(r3)
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	jal	_findpid
	nop	; not filled.
	lw	r2,20(r2)
	addi	r29,r29,#8
	seq	r1,r2,r1
	beqz	r1,L257
	nop	; not filled.
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_CondWait
	nop	; not filled.
	addi	r1,r0,#0
	addi	r29,r29,#8
	j	L255
	nop	; not filled.
L257:
	addi	r1,r0,#1
	j	L255
	nop	; not filled.
L256:
	addi	r1,r0,#1
L255:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondHandleWait
	.align 2
.proc _CondSignal
.global _CondSignal
_CondSignal:
;  Function 'CondSignal'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r2,(r30)
	addi	r29,r29,#-8
	addi	r4,r0,#15
	sw	(r29),r4
	jal	_SetIntrs
	nop	; not filled.
	add	r3,r0,r1
	addi	r29,r29,#8
	lw	r31,24(r2)
	snei	r1,r31,#0
	beqz	r1,L266
	nop	; not filled.
	addi	r1,r31,#-1
	sw	24(r2),r1
	addi	r29,r29,#-8
	addi	r1,r2,#4
	sw	(r29),r1
	jal	_SemSignal
	nop	; not filled.
	addi	r29,r29,#8
L266:
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondSignal
	.align 2
.proc _CondHandleSignal
.global _CondHandleSignal
_CondHandleSignal:
;  Function 'CondHandleSignal'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r2,(r30)
	sleui	r1,r2,#31
	beqz	r1,L277
	nop	; not filled.
	slli	r1,r2,#0x5
	lhi	r5,((_conds)>>16)&0xffff
	addui	r5,r5,(_conds)&0xffff
	add	r3,r1,r5
	lw	r1,28(r3)
	snei	r1,r1,#0
	beqz	r1,L277
	nop	; not filled.
	lw	r2,(r3)
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	jal	_findpid
	nop	; not filled.
	lw	r2,20(r2)
	addi	r29,r29,#8
	seq	r1,r2,r1
	beqz	r1,L277
	nop	; not filled.
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop	; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	lw	r2,24(r3)
	snei	r1,r2,#0
	beqz	r1,L282
	nop	; not filled.
	addi	r1,r2,#-1
	sw	24(r3),r1
	addi	r29,r29,#-8
	addi	r1,r3,#4
	sw	(r29),r1
	jal	_SemSignal
	nop	; not filled.
	addi	r29,r29,#8
L282:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	addi	r1,r0,#0
	j	L284
	nop	; not filled.
L277:
	addi	r1,r0,#1
L284:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondHandleSignal
	.align 2
.proc _CondBroadcast
.global _CondBroadcast
_CondBroadcast:
;  Function 'CondBroadcast'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r4,(r30)
	addi	r29,r29,#-8
	addi	r6,r0,#15
	sw	(r29),r6
	jal	_SetIntrs
	nop	; not filled.
	add	r5,r0,r1
	addi	r29,r29,#8
	addi	r2,r0,#0
	lw	r1,24(r4)
	sltu	r1,r2,r1
	beqz	r1,L296
	nop	; not filled.
	addi	r3,r4,#4
L298:
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SemSignal
	nop	; not filled.
	addi	r29,r29,#8
	addi	r2,r2,#1
	lw	r1,24(r4)
	sltu	r1,r2,r1
	bnez	r1,L298
	nop	; not filled.
L296:
	addi	r6,r0,#0
	sw	24(r4),r6
	addi	r29,r29,#-8
	sw	(r29),r5
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondBroadcast
	.align 2
.proc _CondHandleBroadcast
.global _CondHandleBroadcast
_CondHandleBroadcast:
;  Function 'CondHandleBroadcast'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r2,(r30)
	sleui	r1,r2,#31
	beqz	r1,L302
	nop	; not filled.
	slli	r1,r2,#0x5
	lhi	r6,((_conds)>>16)&0xffff
	addui	r6,r6,(_conds)&0xffff
	add	r3,r1,r6
	lw	r1,28(r3)
	snei	r1,r1,#0
	beqz	r1,L302
	nop	; not filled.
	lw	r2,(r3)
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	jal	_findpid
	nop	; not filled.
	lw	r2,20(r2)
	addi	r29,r29,#8
	sne	r1,r2,r1
	beqz	r1,L302
	nop	; not filled.
	addi	r29,r29,#-8
	addi	r6,r0,#15
	sw	(r29),r6
	jal	_SetIntrs
	nop	; not filled.
	add	r5,r0,r1
	addi	r29,r29,#8
	addi	r2,r0,#0
	lw	r1,24(r3)
	sltu	r1,r2,r1
	beqz	r1,L308
	nop	; not filled.
	addi	r4,r3,#4
L310:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SemSignal
	nop	; not filled.
	addi	r29,r29,#8
	addi	r2,r2,#1
	lw	r1,24(r3)
	sltu	r1,r2,r1
	bnez	r1,L310
	nop	; not filled.
L308:
	addi	r6,r0,#0
	sw	24(r3),r6
	addi	r29,r29,#-8
	sw	(r29),r5
	jal	_SetIntrs
	nop	; not filled.
	addi	r29,r29,#8
	addi	r1,r0,#0
	j	L313
	nop	; not filled.
L302:
	addi	r1,r0,#1
L313:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondHandleBroadcast
.data
	.align 2
_sems:
	.space 1280
	.align 2
_locks:
	.space 1792
	.align 2
_conds:
	.space 1024
