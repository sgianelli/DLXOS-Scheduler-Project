 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 20480
    3                      ; Data size: 0
    4                      ; Text size: 2616
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x2000
    8                      ; Compiled by GCC
    9  00002000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _main
   12  00001000          	.global _main
   13  00001000          	_main:
   14                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0008	subui	r29,r29,#8; alloc local storage
   19  00001010  0c000a1c	jal	___main
   20  00001014  54000000	nop; not filled.
   21  00001018          	L7_LF0:
   22  00001018  0bfffffc	j	L7_LF0
   23  0000101c  54000000	nop; not filled.
   24  00001020  0c000a00	jal	_exit
   25  00001024  54000000	nop
   26  00001028          	.endproc _main
   27                      ; Compiled by GCC
   29  00001028          	.align 2
   30  00001028          	.proc _isspace
   31  00001028          	.global _isspace
   32  00001028          	_isspace:
   33                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   34  00001028  afbefffc	sw	-4(r29),r30; push fp
   35  0000102c  001df020	add	r30,r0,r29; fp = sp
   36  00001030  afbffff8	sw	-8(r29),r31; push ret addr
   37  00001034  2fbd0010	subui	r29,r29,#16; alloc local storage
   38  00001038  afa20000	sw	0(r29),r2
   39  0000103c  83c20003	lb	r2,3(r30)
   40  00001040  201f0000	addi	r31,r0,#0
   41  00001044  304100ff	andi	r1,r2,#0x00ff
   42  00001048  60210020	seqi	r1,r1,#32
   43  0000104c  14200018	bnez	r1,L6_LF1
   44  00001050  54000000	nop; not filled.
   45  00001054  2041fff7	addi	r1,r2,#-9
   46  00001058  302100ff	andi	r1,r1,#0x00ff
   47  0000105c  70210001	sleui	r1,r1,#1
   48  00001060  10200008	beqz	r1,L5_LF1
   49  00001064  54000000	nop; not filled.
   50  00001068          	L6_LF1:
   51  00001068  201f0001	addi	r31,r0,#1
   52  0000106c          	L5_LF1:
   53  0000106c  001f0820	add	r1,r0,r31
   54  00001070  8fa20000	lw	r2,0(r29)
   55  00001074  8fdffff8	lw	r31,-8(r30)
   56  00001078  001ee820	add	r29,r0,r30
   57  0000107c  8fdefffc	lw	r30,-4(r30)
   58  00001080  4be00000	jr	r31
   59  00001084  54000000	nop
   60  00001088          	.endproc _isspace
   61  00001088          	.align 2
   62  00001088          	.proc _isxdigit
   63  00001088          	.global _isxdigit
   64  00001088          	_isxdigit:
   65                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   66  00001088  afbefffc	sw	-4(r29),r30; push fp
   67  0000108c  001df020	add	r30,r0,r29; fp = sp
   68  00001090  afbffff8	sw	-8(r29),r31; push ret addr
   69  00001094  2fbd0010	subui	r29,r29,#16; alloc local storage
   70  00001098  afa20000	sw	0(r29),r2
   71  0000109c  83df0003	lb	r31,3(r30)
   72  000010a0  20020000	addi	r2,r0,#0
   73  000010a4  23e1ffd0	addi	r1,r31,#-48
   74  000010a8  302100ff	andi	r1,r1,#0x00ff
   75  000010ac  70210009	sleui	r1,r1,#9
   76  000010b0  14200028	bnez	r1,L12_LF1
   77  000010b4  54000000	nop; not filled.
   78  000010b8  23e1ff9f	addi	r1,r31,#-97
   79  000010bc  302100ff	andi	r1,r1,#0x00ff
   80  000010c0  70210005	sleui	r1,r1,#5
   81  000010c4  14200014	bnez	r1,L12_LF1
   82  000010c8  54000000	nop; not filled.
   83  000010cc  33e100ff	andi	r1,r31,#0x00ff
   84  000010d0  64210041	snei	r1,r1,#65
   85  000010d4  14200008	bnez	r1,L11_LF1
   86  000010d8  54000000	nop; not filled.
   87  000010dc          	L12_LF1:
   88  000010dc  20020001	addi	r2,r0,#1
   89  000010e0          	L11_LF1:
   90  000010e0  00020820	add	r1,r0,r2
   91  000010e4  8fa20000	lw	r2,0(r29)
   92  000010e8  8fdffff8	lw	r31,-8(r30)
   93  000010ec  001ee820	add	r29,r0,r30
   94  000010f0  8fdefffc	lw	r30,-4(r30)
   95  000010f4  4be00000	jr	r31
   96  000010f8  54000000	nop
   97  000010fc          	.endproc _isxdigit
   98  000010fc          	.align 2
   99  000010fc          	.proc _dstrcpy
  100  000010fc          	.global _dstrcpy
  101  000010fc          	_dstrcpy:
  102                      ;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
  103  000010fc  afbefffc	sw	-4(r29),r30; push fp
  104  00001100  001df020	add	r30,r0,r29; fp = sp
  105  00001104  afbffff8	sw	-8(r29),r31; push ret addr
  106  00001108  2fbd0010	subui	r29,r29,#16; alloc local storage
  107  0000110c  afa20000	sw	0(r29),r2
  108  00001110  afa30004	sw	4(r29),r3
  109  00001114  8fdf0000	lw	r31,(r30)
  110  00001118  8fc20004	lw	r2,4(r30)
  111  0000111c  001f1820	add	r3,r0,r31
  112  00001120          	L19_LF1:
  113  00001120  80410000	lb	r1,(r2)
  114  00001124  a3e10000	sb	(r31),r1
  115  00001128  20420001	addi	r2,r2,#1
  116  0000112c  23ff0001	addi	r31,r31,#1
  117  00001130  302100ff	andi	r1,r1,#0x00ff
  118  00001134  64210000	snei	r1,r1,#0
  119  00001138  1420ffe4	bnez	r1,L19_LF1
  120  0000113c  54000000	nop; not filled.
  121  00001140  00030820	add	r1,r0,r3
  122  00001144  8fa20000	lw	r2,0(r29)
  123  00001148  8fa30004	lw	r3,4(r29)
  124  0000114c  8fdffff8	lw	r31,-8(r30)
  125  00001150  001ee820	add	r29,r0,r30
  126  00001154  8fdefffc	lw	r30,-4(r30)
  127  00001158  4be00000	jr	r31
  128  0000115c  54000000	nop
  129  00001160          	.endproc _dstrcpy
  130  00001160          	.align 2
  131  00001160          	.proc _dstrncpy
  132  00001160          	.global _dstrncpy
  133  00001160          	_dstrncpy:
  134                      ;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
  135  00001160  afbefffc	sw	-4(r29),r30; push fp
  136  00001164  001df020	add	r30,r0,r29; fp = sp
  137  00001168  afbffff8	sw	-8(r29),r31; push ret addr
  138  0000116c  2fbd0018	subui	r29,r29,#24; alloc local storage
  139  00001170  afa20000	sw	0(r29),r2
  140  00001174  afa30004	sw	4(r29),r3
  141  00001178  afa40008	sw	8(r29),r4
  142  0000117c  8fc20000	lw	r2,(r30)
  143  00001180  8fc30004	lw	r3,4(r30)
  144  00001184  8fdf0008	lw	r31,8(r30)
  145  00001188  00022020	add	r4,r0,r2
  146  0000118c  08000024	j	L37_LF1
  147  00001190  54000000	nop; not filled.
  148  00001194          	L34_LF1:
  149  00001194  80610000	lb	r1,(r3)
  150  00001198  a0410000	sb	(r2),r1
  151  0000119c  20630001	addi	r3,r3,#1
  152  000011a0  20420001	addi	r2,r2,#1
  153  000011a4  302100ff	andi	r1,r1,#0x00ff
  154  000011a8  64210000	snei	r1,r1,#0
  155  000011ac  10200018	beqz	r1,L32_LF1
  156  000011b0  54000000	nop; not filled.
  157  000011b4          	L37_LF1:
  158  000011b4  001f0820	add	r1,r0,r31
  159  000011b8  23ffffff	addi	r31,r31,#-1
  160  000011bc  70210000	slei	r1,r1,#0
  161  000011c0  1020ffd0	beqz	r1,L34_LF1
  162  000011c4  54000000	nop; not filled.
  163  000011c8          	L32_LF1:
  164  000011c8  00040820	add	r1,r0,r4
  165  000011cc  8fa20000	lw	r2,0(r29)
  166  000011d0  8fa30004	lw	r3,4(r29)
  167  000011d4  8fa40008	lw	r4,8(r29)
  168  000011d8  8fdffff8	lw	r31,-8(r30)
  169  000011dc  001ee820	add	r29,r0,r30
  170  000011e0  8fdefffc	lw	r30,-4(r30)
  171  000011e4  4be00000	jr	r31
  172  000011e8  54000000	nop
  173  000011ec          	.endproc _dstrncpy
  174  000011ec          	.align 2
  175  000011ec          	.proc _dstrcat
  176  000011ec          	.global _dstrcat
  177  000011ec          	_dstrcat:
  178                      ;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
  179  000011ec  afbefffc	sw	-4(r29),r30; push fp
  180  000011f0  001df020	add	r30,r0,r29; fp = sp
  181  000011f4  afbffff8	sw	-8(r29),r31; push ret addr
  182  000011f8  2fbd0010	subui	r29,r29,#16; alloc local storage
  183  000011fc  afa20000	sw	0(r29),r2
  184  00001200  afa30004	sw	4(r29),r3
  185  00001204  8fdf0000	lw	r31,(r30)
  186  00001208  001f1820	add	r3,r0,r31
  187  0000120c  90610000	lbu	r1,(r3)
  188  00001210  64210000	snei	r1,r1,#0
  189  00001214  10200018	beqz	r1,L50_LF1
  190  00001218  54000000	nop; not filled.
  191  0000121c          	L51_LF1:
  192  0000121c  23ff0001	addi	r31,r31,#1
  193  00001220  93e10000	lbu	r1,(r31)
  194  00001224  64210000	snei	r1,r1,#0
  195  00001228  1420fff0	bnez	r1,L51_LF1
  196  0000122c  54000000	nop; not filled.
  197  00001230          	L50_LF1:
  198  00001230  001f1020	add	r2,r0,r31
  199  00001234  8fdf0004	lw	r31,4(r30)
  200  00001238          	L54_LF1:
  201  00001238  83e10000	lb	r1,(r31)
  202  0000123c  a0410000	sb	(r2),r1
  203  00001240  23ff0001	addi	r31,r31,#1
  204  00001244  20420001	addi	r2,r2,#1
  205  00001248  302100ff	andi	r1,r1,#0x00ff
  206  0000124c  64210000	snei	r1,r1,#0
  207  00001250  1420ffe4	bnez	r1,L54_LF1
  208  00001254  54000000	nop; not filled.
  209  00001258  00030820	add	r1,r0,r3
  210  0000125c  8fa20000	lw	r2,0(r29)
  211  00001260  8fa30004	lw	r3,4(r29)
  212  00001264  8fdffff8	lw	r31,-8(r30)
  213  00001268  001ee820	add	r29,r0,r30
  214  0000126c  8fdefffc	lw	r30,-4(r30)
  215  00001270  4be00000	jr	r31
  216  00001274  54000000	nop
  217  00001278          	.endproc _dstrcat
  218  00001278          	.align 2
  219  00001278          	.proc _dstrncmp
  220  00001278          	.global _dstrncmp
  221  00001278          	_dstrncmp:
  222                      ;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
  223  00001278  afbefffc	sw	-4(r29),r30; push fp
  224  0000127c  001df020	add	r30,r0,r29; fp = sp
  225  00001280  afbffff8	sw	-8(r29),r31; push ret addr
  226  00001284  2fbd0018	subui	r29,r29,#24; alloc local storage
  227  00001288  afa20000	sw	0(r29),r2
  228  0000128c  afa30004	sw	4(r29),r3
  229  00001290  afa40008	sw	8(r29),r4
  230  00001294  afa5000c	sw	12(r29),r5
  231  00001298  8fc30000	lw	r3,(r30)
  232  0000129c  8fc40004	lw	r4,4(r30)
  233  000012a0  8fc50008	lw	r5,8(r30)
  234  000012a4  20020000	addi	r2,r0,#0
  235  000012a8  0045082a	slt	r1,r2,r5
  236  000012ac  1020003c	beqz	r1,L73_LF1
  237  000012b0  54000000	nop; not filled.
  238  000012b4          	L75_LF1:
  239  000012b4  909f0000	lbu	r31,(r4)
  240  000012b8  67e10000	snei	r1,r31,#0
  241  000012bc  10200038	beqz	r1,L86_LF1
  242  000012c0  54000000	nop; not filled.
  243  000012c4  90610000	lbu	r1,(r3)
  244  000012c8  003f0829	sne	r1,r1,r31
  245  000012cc  1420001c	bnez	r1,L73_LF1
  246  000012d0  54000000	nop; not filled.
  247  000012d4  20630001	addi	r3,r3,#1
  248  000012d8  20840001	addi	r4,r4,#1
  249  000012dc  20420001	addi	r2,r2,#1
  250  000012e0  0045082a	slt	r1,r2,r5
  251  000012e4  1420ffcc	bnez	r1,L75_LF1
  252  000012e8  54000000	nop; not filled.
  253  000012ec          	L73_LF1:
  254  000012ec  00450828	seq	r1,r2,r5
  255  000012f0  10200010	beqz	r1,L80_LF1
  256  000012f4  54000000	nop; not filled.
  257  000012f8          	L86_LF1:
  258  000012f8  20010000	addi	r1,r0,#0
  259  000012fc  08000028	j	L84_LF1
  260  00001300  54000000	nop; not filled.
  261  00001304          	L80_LF1:
  262  00001304  907f0000	lbu	r31,(r3)
  263  00001308  90830000	lbu	r3,(r4)
  264  0000130c  03e30822	sub	r1,r31,r3
  265  00001310  74210000	sgei	r1,r1,#0
  266  00001314  2002ffff	addi	r2,r0,#-1
  267  00001318  10200008	beqz	r1,L82_LF1
  268  0000131c  54000000	nop; not filled.
  269  00001320  03e31029	sne	r2,r31,r3
  270  00001324          	L82_LF1:
  271  00001324  00020820	add	r1,r0,r2
  272  00001328          	L84_LF1:
  273  00001328  8fa20000	lw	r2,0(r29)
  274  0000132c  8fa30004	lw	r3,4(r29)
  275  00001330  8fa40008	lw	r4,8(r29)
  276  00001334  8fa5000c	lw	r5,12(r29)
  277  00001338  8fdffff8	lw	r31,-8(r30)
  278  0000133c  001ee820	add	r29,r0,r30
  279  00001340  8fdefffc	lw	r30,-4(r30)
  280  00001344  4be00000	jr	r31
  281  00001348  54000000	nop
  282  0000134c          	.endproc _dstrncmp
  283  0000134c          	.align 2
  284  0000134c          	.proc _dstrlen
  285  0000134c          	.global _dstrlen
  286  0000134c          	_dstrlen:
  287                      ;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
  288  0000134c  afbefffc	sw	-4(r29),r30; push fp
  289  00001350  001df020	add	r30,r0,r29; fp = sp
  290  00001354  afbffff8	sw	-8(r29),r31; push ret addr
  291  00001358  2fbd0010	subui	r29,r29,#16; alloc local storage
  292  0000135c  afa20000	sw	0(r29),r2
  293  00001360  8fdf0000	lw	r31,(r30)
  294  00001364  20020000	addi	r2,r0,#0
  295  00001368  08000008	j	L97_LF1
  296  0000136c  54000000	nop; not filled.
  297  00001370          	L95_LF1:
  298  00001370  20420001	addi	r2,r2,#1
  299  00001374          	L97_LF1:
  300  00001374  93e10000	lbu	r1,(r31)
  301  00001378  23ff0001	addi	r31,r31,#1
  302  0000137c  64210000	snei	r1,r1,#0
  303  00001380  1420ffec	bnez	r1,L95_LF1
  304  00001384  54000000	nop; not filled.
  305  00001388  00020820	add	r1,r0,r2
  306  0000138c  8fa20000	lw	r2,0(r29)
  307  00001390  8fdffff8	lw	r31,-8(r30)
  308  00001394  001ee820	add	r29,r0,r30
  309  00001398  8fdefffc	lw	r30,-4(r30)
  310  0000139c  4be00000	jr	r31
  311  000013a0  54000000	nop
  312  000013a4          	.endproc _dstrlen
  313  000013a4          	.align 2
  314  000013a4          	.proc _dstrstr
  315  000013a4          	.global _dstrstr
  316  000013a4          	_dstrstr:
  317                      ;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
  318  000013a4  afbefffc	sw	-4(r29),r30; push fp
  319  000013a8  001df020	add	r30,r0,r29; fp = sp
  320  000013ac  afbffff8	sw	-8(r29),r31; push ret addr
  321  000013b0  2fbd0020	subui	r29,r29,#32; alloc local storage
  322  000013b4  afa20000	sw	0(r29),r2
  323  000013b8  afa30004	sw	4(r29),r3
  324  000013bc  afa40008	sw	8(r29),r4
  325  000013c0  afa5000c	sw	12(r29),r5
  326  000013c4  afa60010	sw	16(r29),r6
  327  000013c8  afa70014	sw	20(r29),r7
  328  000013cc  8fc50000	lw	r5,(r30)
  329  000013d0  8fc70004	lw	r7,4(r30)
  330  000013d4  20030000	addi	r3,r0,#0
  331  000013d8  90e10000	lbu	r1,(r7)
  332  000013dc  20e20001	addi	r2,r7,#1
  333  000013e0  64210000	snei	r1,r1,#0
  334  000013e4  1020001c	beqz	r1,L125_LF1
  335  000013e8  54000000	nop; not filled.
  336  000013ec          	L126_LF1:
  337  000013ec  20630001	addi	r3,r3,#1
  338  000013f0  90410000	lbu	r1,(r2)
  339  000013f4  20420001	addi	r2,r2,#1
  340  000013f8  64210000	snei	r1,r1,#0
  341  000013fc  1420ffec	bnez	r1,L126_LF1
  342  00001400  54000000	nop; not filled.
  343  00001404          	L125_LF1:
  344  00001404  00033020	add	r6,r0,r3
  345  00001408  080000ac	j	L149_LF1
  346  0000140c  54000000	nop; not filled.
  347  00001410          	L130_LF1:
  348  00001410  00051820	add	r3,r0,r5
  349  00001414  00072020	add	r4,r0,r7
  350  00001418  20020000	addi	r2,r0,#0
  351  0000141c  0046082a	slt	r1,r2,r6
  352  00001420  1020003c	beqz	r1,L134_LF1
  353  00001424  54000000	nop; not filled.
  354  00001428          	L136_LF1:
  355  00001428  909f0000	lbu	r31,(r4)
  356  0000142c  67e10000	snei	r1,r31,#0
  357  00001430  10200038	beqz	r1,L150_LF1
  358  00001434  54000000	nop; not filled.
  359  00001438  90610000	lbu	r1,(r3)
  360  0000143c  003f0829	sne	r1,r1,r31
  361  00001440  1420001c	bnez	r1,L134_LF1
  362  00001444  54000000	nop; not filled.
  363  00001448  20630001	addi	r3,r3,#1
  364  0000144c  20840001	addi	r4,r4,#1
  365  00001450  20420001	addi	r2,r2,#1
  366  00001454  0046082a	slt	r1,r2,r6
  367  00001458  1420ffcc	bnez	r1,L136_LF1
  368  0000145c  54000000	nop; not filled.
  369  00001460          	L134_LF1:
  370  00001460  00460828	seq	r1,r2,r6
  371  00001464  10200010	beqz	r1,L141_LF1
  372  00001468  54000000	nop; not filled.
  373  0000146c          	L150_LF1:
  374  0000146c  20010000	addi	r1,r0,#0
  375  00001470  08000028	j	L132_LF1
  376  00001474  54000000	nop; not filled.
  377  00001478          	L141_LF1:
  378  00001478  90630000	lbu	r3,(r3)
  379  0000147c  90820000	lbu	r2,(r4)
  380  00001480  00620822	sub	r1,r3,r2
  381  00001484  74210000	sgei	r1,r1,#0
  382  00001488  201fffff	addi	r31,r0,#-1
  383  0000148c  10200008	beqz	r1,L143_LF1
  384  00001490  54000000	nop; not filled.
  385  00001494  0062f829	sne	r31,r3,r2
  386  00001498          	L143_LF1:
  387  00001498  001f0820	add	r1,r0,r31
  388  0000149c          	L132_LF1:
  389  0000149c  64210000	snei	r1,r1,#0
  390  000014a0  14200010	bnez	r1,L131_LF1
  391  000014a4  54000000	nop; not filled.
  392  000014a8  00050820	add	r1,r0,r5
  393  000014ac  0800001c	j	L146_LF1
  394  000014b0  54000000	nop; not filled.
  395  000014b4          	L131_LF1:
  396  000014b4  20a50001	addi	r5,r5,#1
  397  000014b8          	L149_LF1:
  398  000014b8  90a10000	lbu	r1,(r5)
  399  000014bc  64210000	snei	r1,r1,#0
  400  000014c0  1420ff4c	bnez	r1,L130_LF1
  401  000014c4  54000000	nop; not filled.
  402  000014c8  20010000	addi	r1,r0,#0
  403  000014cc          	L146_LF1:
  404  000014cc  8fa20000	lw	r2,0(r29)
  405  000014d0  8fa30004	lw	r3,4(r29)
  406  000014d4  8fa40008	lw	r4,8(r29)
  407  000014d8  8fa5000c	lw	r5,12(r29)
  408  000014dc  8fa60010	lw	r6,16(r29)
  409  000014e0  8fa70014	lw	r7,20(r29)
  410  000014e4  8fdffff8	lw	r31,-8(r30)
  411  000014e8  001ee820	add	r29,r0,r30
  412  000014ec  8fdefffc	lw	r30,-4(r30)
  413  000014f0  4be00000	jr	r31
  414  000014f4  54000000	nop
  415  000014f8          	.endproc _dstrstr
  416  000014f8          	.align 2
  417  000014f8          	.proc _dmindex
  418  000014f8          	.global _dmindex
  419  000014f8          	_dmindex:
  420                      ;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
  421  000014f8  afbefffc	sw	-4(r29),r30; push fp
  422  000014fc  001df020	add	r30,r0,r29; fp = sp
  423  00001500  afbffff8	sw	-8(r29),r31; push ret addr
  424  00001504  2fbd0020	subui	r29,r29,#32; alloc local storage
  425  00001508  afa20000	sw	0(r29),r2
  426  0000150c  afa30004	sw	4(r29),r3
  427  00001510  afa40008	sw	8(r29),r4
  428  00001514  afa5000c	sw	12(r29),r5
  429  00001518  afa60010	sw	16(r29),r6
  430  0000151c  8fc40000	lw	r4,(r30)
  431  00001520  8fc60004	lw	r6,4(r30)
  432  00001524  90810000	lbu	r1,(r4)
  433  00001528  64210000	snei	r1,r1,#0
  434  0000152c  10200060	beqz	r1,L164_LF1
  435  00001530  54000000	nop; not filled.
  436  00001534  00012820	add	r5,r0,r1
  437  00001538          	L165_LF1:
  438  00001538  00061020	add	r2,r0,r6
  439  0000153c  80df0000	lb	r31,(r6)
  440  00001540  33e100ff	andi	r1,r31,#0x00ff
  441  00001544  64210000	snei	r1,r1,#0
  442  00001548  1020003c	beqz	r1,L163_LF1
  443  0000154c  54000000	nop; not filled.
  444  00001550  90830000	lbu	r3,(r4)
  445  00001554          	L169_LF1:
  446  00001554  33e100ff	andi	r1,r31,#0x00ff
  447  00001558  00610828	seq	r1,r3,r1
  448  0000155c  10200010	beqz	r1,L168_LF1
  449  00001560  54000000	nop; not filled.
  450  00001564  00040820	add	r1,r0,r4
  451  00001568  08000028	j	L173_LF1
  452  0000156c  54000000	nop; not filled.
  453  00001570          	L168_LF1:
  454  00001570  20420001	addi	r2,r2,#1
  455  00001574  805f0000	lb	r31,(r2)
  456  00001578  33e100ff	andi	r1,r31,#0x00ff
  457  0000157c  64210000	snei	r1,r1,#0
  458  00001580  1420ffd0	bnez	r1,L169_LF1
  459  00001584  54000000	nop; not filled.
  460  00001588          	L163_LF1:
  461  00001588  14a0ffac	bnez	r5,L165_LF1
  462  0000158c  54000000	nop; not filled.
  463  00001590          	L164_LF1:
  464  00001590  20010000	addi	r1,r0,#0
  465  00001594          	L173_LF1:
  466  00001594  8fa20000	lw	r2,0(r29)
  467  00001598  8fa30004	lw	r3,4(r29)
  468  0000159c  8fa40008	lw	r4,8(r29)
  469  000015a0  8fa5000c	lw	r5,12(r29)
  470  000015a4  8fa60010	lw	r6,16(r29)
  471  000015a8  8fdffff8	lw	r31,-8(r30)
  472  000015ac  001ee820	add	r29,r0,r30
  473  000015b0  8fdefffc	lw	r30,-4(r30)
  474  000015b4  4be00000	jr	r31
  475  000015b8  54000000	nop
  476  000015bc          	.endproc _dmindex
  477  000015bc          	.align 2
  478  000015bc          	.proc _dindex
  479  000015bc          	.global _dindex
  480  000015bc          	_dindex:
  481                      ;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
  482  000015bc  afbefffc	sw	-4(r29),r30; push fp
  483  000015c0  001df020	add	r30,r0,r29; fp = sp
  484  000015c4  afbffff8	sw	-8(r29),r31; push ret addr
  485  000015c8  2fbd0010	subui	r29,r29,#16; alloc local storage
  486  000015cc  afa20000	sw	0(r29),r2
  487  000015d0  afa30004	sw	4(r29),r3
  488  000015d4  8fc20000	lw	r2,(r30)
  489  000015d8  8fc30004	lw	r3,4(r30)
  490  000015dc  08000024	j	L187_LF1
  491  000015e0  54000000	nop; not filled.
  492  000015e4          	L183_LF1:
  493  000015e4  33e100ff	andi	r1,r31,#0x00ff
  494  000015e8  00230828	seq	r1,r1,r3
  495  000015ec  10200010	beqz	r1,L184_LF1
  496  000015f0  54000000	nop; not filled.
  497  000015f4  00020820	add	r1,r0,r2
  498  000015f8  08000020	j	L186_LF1
  499  000015fc  54000000	nop; not filled.
  500  00001600          	L184_LF1:
  501  00001600  20420001	addi	r2,r2,#1
  502  00001604          	L187_LF1:
  503  00001604  805f0000	lb	r31,(r2)
  504  00001608  33e100ff	andi	r1,r31,#0x00ff
  505  0000160c  64210000	snei	r1,r1,#0
  506  00001610  1420ffd0	bnez	r1,L183_LF1
  507  00001614  54000000	nop; not filled.
  508  00001618  20010000	addi	r1,r0,#0
  509  0000161c          	L186_LF1:
  510  0000161c  8fa20000	lw	r2,0(r29)
  511  00001620  8fa30004	lw	r3,4(r29)
  512  00001624  8fdffff8	lw	r31,-8(r30)
  513  00001628  001ee820	add	r29,r0,r30
  514  0000162c  8fdefffc	lw	r30,-4(r30)
  515  00001630  4be00000	jr	r31
  516  00001634  54000000	nop
  517  00001638          	.endproc _dindex
  518  00001638          	.align 2
  519  00001638          	.proc _ditoa
  520  00001638          	.global _ditoa
  521  00001638          	_ditoa:
  522                      ;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
  523  00001638  afbefffc	sw	-4(r29),r30; push fp
  524  0000163c  001df020	add	r30,r0,r29; fp = sp
  525  00001640  afbffff8	sw	-8(r29),r31; push ret addr
  526  00001644  2fbd0020	subui	r29,r29,#32; alloc local storage
  527  00001648  afa20000	sw	0(r29),r2
  528  0000164c  afa30004	sw	4(r29),r3
  529  00001650  afa40008	sw	8(r29),r4
  530  00001654  afa5000c	sw	12(r29),r5
  531  00001658  afa60010	sw	16(r29),r6
  532  0000165c  8fc30000	lw	r3,(r30)
  533  00001660  8fc40004	lw	r4,4(r30)
  534  00001664  68610000	slti	r1,r3,#0
  535  00001668  10200010	beqz	r1,L203_LF1
  536  0000166c  54000000	nop; not filled.
  537  00001670  2006002d	addi	r6,r0,(#0x2d)&0xff
  538  00001674  08000014	j	L216_LF1
  539  00001678  54000000	nop; not filled.
  540  0000167c          	L203_LF1:
  541  0000167c  64610000	snei	r1,r3,#0
  542  00001680  14200018	bnez	r1,L205_LF1
  543  00001684  54000000	nop; not filled.
  544  00001688  20060030	addi	r6,r0,(#0x30)&0xff
  545  0000168c          	L216_LF1:
  546  0000168c  a0860000	sb	(r4),r6
  547  00001690  20840001	addi	r4,r4,#1
  548  00001694  0800007c	j	L204_LF1
  549  00001698  54000000	nop; not filled.
  550  0000169c          	L205_LF1:
  551  0000169c  201f0001	addi	r31,r0,#1
  552  000016a0  03e3082c	sle	r1,r31,r3
  553  000016a4  1020001c	beqz	r1,L208_LF1
  554  000016a8  54000000	nop; not filled.
  555  000016ac          	L209_LF1:
  556  000016ac  53e10002	slli	r1,r31,#0x2
  557  000016b0  003f0820	add	r1,r1,r31
  558  000016b4  503f0001	slli	r31,r1,#0x1
  559  000016b8  03e3082c	sle	r1,r31,r3
  560  000016bc  1420ffec	bnez	r1,L209_LF1
  561  000016c0  54000000	nop; not filled.
  562  000016c4          	L208_LF1:
  563  000016c4  2005000a	addi	r5,r0,#10
  564  000016c8          	L212_LF1:
  565  000016c8  03e00035	movi2fp	f0,r31
  566  000016cc  00a00835	movi2fp	f1,r5
  567  000016d0  0401000f	div	f0,f0,f1
  568  000016d4  0000f834	movfp2i	r31,f0
  569  000016d8  00600035	movi2fp	f0,r3
  570  000016dc  03e00835	movi2fp	f1,r31
  571  000016e0  0401000f	div	f0,f0,f1
  572  000016e4  00001034	movfp2i	r2,f0
  573  000016e8  20410030	addi	r1,r2,#48
  574  000016ec  a0810000	sb	(r4),r1
  575  000016f0  20840001	addi	r4,r4,#1
  576  000016f4  00400035	movi2fp	f0,r2
  577  000016f8  03e00835	movi2fp	f1,r31
  578  000016fc  0401000e	mult	f0,f0,f1
  579  00001700  00000834	movfp2i	r1,f0
  580  00001704  00611822	sub	r3,r3,r1
  581  00001708  6fe10001	sgti	r1,r31,#1
  582  0000170c  1420ffb8	bnez	r1,L212_LF1
  583  00001710  54000000	nop; not filled.
  584  00001714          	L204_LF1:
  585  00001714  20060000	addi	r6,r0,(#0x0)&0xff
  586  00001718  a0860000	sb	(r4),r6
  587  0000171c  8fa20000	lw	r2,0(r29)
  588  00001720  8fa30004	lw	r3,4(r29)
  589  00001724  8fa40008	lw	r4,8(r29)
  590  00001728  8fa5000c	lw	r5,12(r29)
  591  0000172c  8fa60010	lw	r6,16(r29)
  592  00001730  8fdffff8	lw	r31,-8(r30)
  593  00001734  001ee820	add	r29,r0,r30
  594  00001738  8fdefffc	lw	r30,-4(r30)
  595  0000173c  4be00000	jr	r31
  596  00001740  54000000	nop
  597  00001744          	.endproc _ditoa
  598  00001744          	.align 2
  599  00001744          	.proc _dstrtol
  600  00001744          	.global _dstrtol
  601  00001744          	_dstrtol:
  602                      ;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
  603  00001744  afbefffc	sw	-4(r29),r30; push fp
  604  00001748  001df020	add	r30,r0,r29; fp = sp
  605  0000174c  afbffff8	sw	-8(r29),r31; push ret addr
  606  00001750  2fbd0020	subui	r29,r29,#32; alloc local storage
  607  00001754  afa20000	sw	0(r29),r2
  608  00001758  afa30004	sw	4(r29),r3
  609  0000175c  afa40008	sw	8(r29),r4
  610  00001760  afa5000c	sw	12(r29),r5
  611  00001764  afa60010	sw	16(r29),r6
  612  00001768  8fc20000	lw	r2,(r30)
  613  0000176c  8fc50004	lw	r5,4(r30)
  614  00001770  8fc40008	lw	r4,8(r30)
  615  00001774  20030000	addi	r3,r0,#0
  616  00001778  08000008	j	L247_LF1
  617  0000177c  54000000	nop; not filled.
  618  00001780          	L220_LF1:
  619  00001780  20420001	addi	r2,r2,#1
  620  00001784          	L247_LF1:
  621  00001784  805f0000	lb	r31,(r2)
  622  00001788  33e100ff	andi	r1,r31,#0x00ff
  623  0000178c  60210020	seqi	r1,r1,#32
  624  00001790  1420ffec	bnez	r1,L220_LF1
  625  00001794  54000000	nop; not filled.
  626  00001798  23e1fff7	addi	r1,r31,#-9
  627  0000179c  302100ff	andi	r1,r1,#0x00ff
  628  000017a0  70210001	sleui	r1,r1,#1
  629  000017a4  1420ffd8	bnez	r1,L220_LF1
  630  000017a8  54000000	nop; not filled.
  631  000017ac  64a10000	snei	r1,r5,#0
  632  000017b0  10200008	beqz	r1,L222_LF1
  633  000017b4  54000000	nop; not filled.
  634  000017b8  aca20000	sw	(r5),r2
  635  000017bc          	L222_LF1:
  636  000017bc  905f0000	lbu	r31,(r2)
  637  000017c0  67e10000	snei	r1,r31,#0
  638  000017c4  10200090	beqz	r1,L248_LF1
  639  000017c8  54000000	nop; not filled.
  640  000017cc  63e1002d	seqi	r1,r31,#45
  641  000017d0  10200014	beqz	r1,L224_LF1
  642  000017d4  54000000	nop; not filled.
  643  000017d8  2006ffff	addi	r6,r0,#-1
  644  000017dc  20420001	addi	r2,r2,#1
  645  000017e0  08000008	j	L225_LF1
  646  000017e4  54000000	nop; not filled.
  647  000017e8          	L224_LF1:
  648  000017e8  20060001	addi	r6,r0,#1
  649  000017ec          	L225_LF1:
  650  000017ec  64810000	snei	r1,r4,#0
  651  000017f0  14200054	bnez	r1,L226_LF1
  652  000017f4  54000000	nop; not filled.
  653  000017f8  90410000	lbu	r1,(r2)
  654  000017fc  60210030	seqi	r1,r1,#48
  655  00001800  10200040	beqz	r1,L227_LF1
  656  00001804  54000000	nop; not filled.
  657  00001808  20420001	addi	r2,r2,#1
  658  0000180c  905f0000	lbu	r31,(r2)
  659  00001810  63e10078	seqi	r1,r31,#120
  660  00001814  14200010	bnez	r1,L229_LF1
  661  00001818  54000000	nop; not filled.
  662  0000181c  63e10058	seqi	r1,r31,#88
  663  00001820  10200014	beqz	r1,L228_LF1
  664  00001824  54000000	nop; not filled.
  665  00001828          	L229_LF1:
  666  00001828  20040010	addi	r4,r0,#16
  667  0000182c  20420001	addi	r2,r2,#1
  668  00001830  08000014	j	L226_LF1
  669  00001834  54000000	nop; not filled.
  670  00001838          	L228_LF1:
  671  00001838  20040008	addi	r4,r0,#8
  672  0000183c  08000008	j	L226_LF1
  673  00001840  54000000	nop; not filled.
  674  00001844          	L227_LF1:
  675  00001844  2004000a	addi	r4,r0,#10
  676  00001848          	L226_LF1:
  677  00001848  2081ffff	addi	r1,r4,#-1
  678  0000184c  6c21000f	sgtui	r1,r1,#15
  679  00001850  10200010	beqz	r1,L233_LF1
  680  00001854  54000000	nop; not filled.
  681  00001858          	L248_LF1:
  682  00001858  00030820	add	r1,r0,r3
  683  0000185c  080000c4	j	L245_LF1
  684  00001860  54000000	nop; not filled.
  685  00001864          	L233_LF1:
  686  00001864  805f0000	lb	r31,(r2)
  687  00001868  23e1ffd0	addi	r1,r31,#-48
  688  0000186c  302100ff	andi	r1,r1,#0x00ff
  689  00001870  70210009	sleui	r1,r1,#9
  690  00001874  10200014	beqz	r1,L236_LF1
  691  00001878  54000000	nop; not filled.
  692  0000187c  33e100ff	andi	r1,r31,#0x00ff
  693  00001880  2021ffd0	addi	r1,r1,#-48
  694  00001884  08000050	j	L237_LF1
  695  00001888  54000000	nop; not filled.
  696  0000188c          	L236_LF1:
  697  0000188c  23e1ff9f	addi	r1,r31,#-97
  698  00001890  302100ff	andi	r1,r1,#0x00ff
  699  00001894  70210019	sleui	r1,r1,#25
  700  00001898  10200014	beqz	r1,L238_LF1
  701  0000189c  54000000	nop; not filled.
  702  000018a0  33e100ff	andi	r1,r31,#0x00ff
  703  000018a4  2021ffa9	addi	r1,r1,#-87
  704  000018a8  0800002c	j	L237_LF1
  705  000018ac  54000000	nop; not filled.
  706  000018b0          	L238_LF1:
  707  000018b0  23e1ffbf	addi	r1,r31,#-65
  708  000018b4  302100ff	andi	r1,r1,#0x00ff
  709  000018b8  70210019	sleui	r1,r1,#25
  710  000018bc  10200014	beqz	r1,L240_LF1
  711  000018c0  54000000	nop; not filled.
  712  000018c4  33e100ff	andi	r1,r31,#0x00ff
  713  000018c8  2021ffc9	addi	r1,r1,#-55
  714  000018cc  08000008	j	L237_LF1
  715  000018d0  54000000	nop; not filled.
  716  000018d4          	L240_LF1:
  717  000018d4  200103e8	addi	r1,r0,#1000
  718  000018d8          	L237_LF1:
  719  000018d8  0024f82a	slt	r31,r1,r4
  720  000018dc  13e00024	beqz	r31,L246_LF1
  721  000018e0  54000000	nop; not filled.
  722  000018e4  00600035	movi2fp	f0,r3
  723  000018e8  00800835	movi2fp	f1,r4
  724  000018ec  0401000e	mult	f0,f0,f1
  725  000018f0  00001834	movfp2i	r3,f0
  726  000018f4  00611820	add	r3,r3,r1
  727  000018f8  20420001	addi	r2,r2,#1
  728  000018fc  17e0ff64	bnez	r31,L233_LF1
  729  00001900  54000000	nop; not filled.
  730  00001904          	L246_LF1:
  731  00001904  64a10000	snei	r1,r5,#0
  732  00001908  10200008	beqz	r1,L244_LF1
  733  0000190c  54000000	nop; not filled.
  734  00001910  aca20000	sw	(r5),r2
  735  00001914          	L244_LF1:
  736  00001914  00600035	movi2fp	f0,r3
  737  00001918  00c00835	movi2fp	f1,r6
  738  0000191c  0401000e	mult	f0,f0,f1
  739  00001920  00000834	movfp2i	r1,f0
  740  00001924          	L245_LF1:
  741  00001924  8fa20000	lw	r2,0(r29)
  742  00001928  8fa30004	lw	r3,4(r29)
  743  0000192c  8fa40008	lw	r4,8(r29)
  744  00001930  8fa5000c	lw	r5,12(r29)
  745  00001934  8fa60010	lw	r6,16(r29)
  746  00001938  8fdffff8	lw	r31,-8(r30)
  747  0000193c  001ee820	add	r29,r0,r30
  748  00001940  8fdefffc	lw	r30,-4(r30)
  749  00001944  4be00000	jr	r31
  750  00001948  54000000	nop
  751  0000194c          	.endproc _dstrtol
  752  0000194c          	.align 2
  753  0000194c          	.proc _bcopy
  754  0000194c          	.global _bcopy
  755  0000194c          	_bcopy:
  756                      ;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
  757  0000194c  afbefffc	sw	-4(r29),r30; push fp
  758  00001950  001df020	add	r30,r0,r29; fp = sp
  759  00001954  afbffff8	sw	-8(r29),r31; push ret addr
  760  00001958  2fbd0018	subui	r29,r29,#24; alloc local storage
  761  0000195c  afa20000	sw	0(r29),r2
  762  00001960  afa30004	sw	4(r29),r3
  763  00001964  afa40008	sw	8(r29),r4
  764  00001968  8fc30000	lw	r3,(r30)
  765  0000196c  8fc20004	lw	r2,4(r30)
  766  00001970  8fdf0008	lw	r31,8(r30)
  767  00001974  08000014	j	L259_LF1
  768  00001978  54000000	nop; not filled.
  769  0000197c          	L257_LF1:
  770  0000197c  80640000	lb	r4,(r3)
  771  00001980  a0440000	sb	(r2),r4
  772  00001984  20630001	addi	r3,r3,#1
  773  00001988  20420001	addi	r2,r2,#1
  774  0000198c          	L259_LF1:
  775  0000198c  001f0820	add	r1,r0,r31
  776  00001990  23ffffff	addi	r31,r31,#-1
  777  00001994  6c210000	sgti	r1,r1,#0
  778  00001998  1420ffe0	bnez	r1,L257_LF1
  779  0000199c  54000000	nop; not filled.
  780  000019a0  8fa20000	lw	r2,0(r29)
  781  000019a4  8fa30004	lw	r3,4(r29)
  782  000019a8  8fa40008	lw	r4,8(r29)
  783  000019ac  8fdffff8	lw	r31,-8(r30)
  784  000019b0  001ee820	add	r29,r0,r30
  785  000019b4  8fdefffc	lw	r30,-4(r30)
  786  000019b8  4be00000	jr	r31
  787  000019bc  54000000	nop
  788  000019c0          	.endproc _bcopy
  789  000019c0          	.align 2
  790  000019c0          	.proc _bzero
  791  000019c0          	.global _bzero
  792  000019c0          	_bzero:
  793                      ;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
  794  000019c0  afbefffc	sw	-4(r29),r30; push fp
  795  000019c4  001df020	add	r30,r0,r29; fp = sp
  796  000019c8  afbffff8	sw	-8(r29),r31; push ret addr
  797  000019cc  2fbd0010	subui	r29,r29,#16; alloc local storage
  798  000019d0  afa20000	sw	0(r29),r2
  799  000019d4  afa30004	sw	4(r29),r3
  800  000019d8  8fc20000	lw	r2,(r30)
  801  000019dc  8fdf0004	lw	r31,4(r30)
  802  000019e0  08000010	j	L270_LF1
  803  000019e4  54000000	nop; not filled.
  804  000019e8          	L268_LF1:
  805  000019e8  20030000	addi	r3,r0,(#0x0)&0xff
  806  000019ec  a0430000	sb	(r2),r3
  807  000019f0  20420001	addi	r2,r2,#1
  808  000019f4          	L270_LF1:
  809  000019f4  001f0820	add	r1,r0,r31
  810  000019f8  23ffffff	addi	r31,r31,#-1
  811  000019fc  6c210000	sgti	r1,r1,#0
  812  00001a00  1420ffe4	bnez	r1,L268_LF1
  813  00001a04  54000000	nop; not filled.
  814  00001a08  8fa20000	lw	r2,0(r29)
  815  00001a0c  8fa30004	lw	r3,4(r29)
  816  00001a10  8fdffff8	lw	r31,-8(r30)
  817  00001a14  001ee820	add	r29,r0,r30
  818  00001a18  8fdefffc	lw	r30,-4(r30)
  819  00001a1c  4be00000	jr	r31
  820  00001a20  54000000	nop
  821  00001a24          	.endproc _bzero
  822                      ;;; Ethan L. Miller, 1999.  Released to the public domain
  823                      ;;;
  824                      ;;; Most of the traps are called in files from libtraps.
  827  00001a24          	.align 2
  828  00001a24          	.proc _exit
  829  00001a24          	.global _exit
  830  00001a24          	_exit:
  831  00001a24  44000300	trap	#0x300
  832  00001a28  4be00000	jr	r31
  833  00001a2c  54000000	nop
  834  00001a30          	.endproc _exit
  836                      ; for the benefit of gcc.
  837  00001a30          	.proc ___main
  838  00001a30          	.global ___main
  839  00001a30          	___main:
  840  00001a30  4be00000	jr	r31
  841  00001a34  54000000	nop
  842  00001a38          	.endproc ___main
  843  00001a38          	.text
  844  00001a38          	.global _etext
  845  00001a38          	_etext:
  846  00001a38          	.align 3
  847  00001a38          	.data
  848  00002000          	.global _edata
  849  00002000          	_edata:
