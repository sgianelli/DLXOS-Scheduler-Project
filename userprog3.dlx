; Linked by DLX-LD.
; MemSize 20480
; Data size: 99
; Text size: 3724
; Stack size: 8192
.text 0x1000
.data 0x2000
; Compiled by GCC

.align 2
LC0_LF0:
.ascii "timer = %d\n\000"
.align 2
LC1_LF0:
.ascii "Setting number = %d\n\000"
.align 2
LC2_LF0:
.ascii "1\000"
.align 2
LC3_LF0:
.ascii "userprog4.dlx.obj\000"
.align 2
LC4_LF0:
.ascii "%c%d\n\000"
.align 2
LC5_LF0:
.ascii "Usage: \000"
.align 2
LC6_LF0:
.ascii " number\n\000"
.align 2
LC7_LF0:
.ascii "argc = %d\n\000"
.text
.align 2
.proc _main
.global _main
_main:
;  Function 'main'; 32 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#40; alloc local storage
	lw	r2,(r30)
	lw	r3,4(r30)
	jal	___main
	nop; not filled.
	seqi	r1,r2,#2
	bnez	r1,L3_LF0
	nop; not filled.
	seqi	r1,r2,#3
	beqz	r1,L35_LF0
	nop; not filled.
	j	L14_LF0
	nop; not filled.
L3_LF0:
	jal	_TimerGet
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r8,((LC0_LF0)>>16)&0xffff
	addui	r8,r8,(LC0_LF0)&0xffff
	sw	(r29),r8
	sw	4(r29),r1
	jal	_Printf
	nop; not filled.
	addi	r29,r29,#-8
	lw	r3,4(r3)
	sw	(r29),r3
	addi	r8,r0,#0
	sw	4(r29),r8
	addi	r8,r0,#10
	sw	8(r29),r8
	jal	_dstrtol
	nop; not filled.
	add	r5,r0,r1
	lhi	r8,((LC1_LF0)>>16)&0xffff
	addui	r8,r8,(LC1_LF0)&0xffff
	sw	(r29),r8
	sw	4(r29),r5
	jal	_Printf
	nop; not filled.
	addi	r3,r0,#0
	addi	r29,r29,#16
L7_LF0:
	addi	r29,r29,#-8
	lhi	r8,((LC2_LF0)>>16)&0xffff
	addui	r8,r8,(LC2_LF0)&0xffff
	sw	(r29),r8
	jal	_Printf
	nop; not filled.
	addi	r29,r29,#8
	addi	r3,r3,#1
	slei	r1,r3,#49
	bnez	r1,L7_LF0
	nop; not filled.
	jal	_TimerGet
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r2,((LC0_LF0)>>16)&0xffff
	addui	r2,r2,(LC0_LF0)&0xffff
	sw	(r29),r2
	sw	4(r29),r1
	jal	_Printf
	nop; not filled.
	addi	r8,r0,#1
	sw	(r29),r8
	jal	_sem_create
	nop; not filled.
	sw	(r29),r1
	addi	r4,r30,#-40
	sw	4(r29),r4
	jal	_ditoa
	nop; not filled.
	jal	_TimerGet
	nop; not filled.
	sw	(r29),r2
	sw	4(r29),r1
	jal	_Printf
	nop; not filled.
	addi	r3,r0,#0
	addi	r29,r29,#8
	slt	r1,r3,r5
	beqz	r1,L10_LF0
	nop; not filled.
	addi	r2,r30,#-24
L12_LF0:
	addi	r29,r29,#-8
	sw	(r29),r3
	sw	4(r29),r2
	jal	_ditoa
	nop; not filled.
	addi	r29,r29,#-16
	sw	(r29),r3
	addi	r8,r0,#0
	sw	4(r29),r8
	lhi	r8,((LC3_LF0)>>16)&0xffff
	addui	r8,r8,(LC3_LF0)&0xffff
	sw	8(r29),r8
	sw	12(r29),r2
	sw	16(r29),r4
	addi	r8,r0,#0
	sw	20(r29),r8
	jal	_process_create
	nop; not filled.
	addi	r29,r29,#24
	addi	r3,r3,#1
	slt	r1,r3,r5
	bnez	r1,L12_LF0
	nop; not filled.
L10_LF0:
	jal	_TimerGet
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r8,((LC0_LF0)>>16)&0xffff
	addui	r8,r8,(LC0_LF0)&0xffff
	sw	(r29),r8
	sw	4(r29),r1
	jal	_Printf
	nop; not filled.
	jal	_yield
	nop; not filled.
	addi	r29,r29,#8
	j	L2_LF0
	nop; not filled.
L14_LF0:
	addi	r29,r29,#-16
	lw	r8,4(r3)
	sw	(r29),r8
	addi	r8,r0,#0
	sw	4(r29),r8
	addi	r8,r0,#10
	sw	8(r29),r8
	jal	_dstrtol
	nop; not filled.
	add	r7,r0,r1
	lw	r3,8(r3)
	sw	(r29),r3
	addi	r8,r0,#0
	sw	4(r29),r8
	addi	r8,r0,#10
	sw	8(r29),r8
	jal	_dstrtol
	nop; not filled.
	add	r4,r0,r1
	addi	r3,r0,#0
	addi	r29,r29,#16
	addui	r5,r0,#49999
	addi	r6,r7,#65
L18_LF0:
	addi	r2,r0,#0
L21_LF0:
	addi	r2,r2,#1
	sle	r1,r2,r5
	bnez	r1,L21_LF0
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r8,((LC4_LF0)>>16)&0xffff
	addui	r8,r8,(LC4_LF0)&0xffff
	sw	(r29),r8
	sw	4(r29),r6
	sw	8(r29),r3
	jal	_Printf
	nop; not filled.
	addi	r29,r29,#16
	addi	r3,r3,#1
	slei	r1,r3,#29
	bnez	r1,L18_LF0
	nop; not filled.
	addi	r3,r0,#0
	addui	r5,r0,#49999
	addi	r6,r7,#65
L28_LF0:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_sem_wait
	nop; not filled.
	addi	r2,r0,#0
	addi	r29,r29,#8
L31_LF0:
	addi	r2,r2,#1
	sle	r1,r2,r5
	bnez	r1,L31_LF0
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r8,((LC4_LF0)>>16)&0xffff
	addui	r8,r8,(LC4_LF0)&0xffff
	sw	(r29),r8
	sw	4(r29),r6
	sw	8(r29),r3
	jal	_Printf
	nop; not filled.
	sw	(r29),r4
	jal	_sem_signal
	nop; not filled.
	addi	r29,r29,#16
	addi	r3,r3,#1
	slei	r1,r3,#29
	beqz	r1,L2_LF0
	nop; not filled.
	j	L28_LF0
	nop; not filled.
L35_LF0:
	addi	r29,r29,#-8
	lhi	r8,((LC5_LF0)>>16)&0xffff
	addui	r8,r8,(LC5_LF0)&0xffff
	sw	(r29),r8
	jal	_Printf
	nop; not filled.
	lw	r3,(r3)
	sw	(r29),r3
	jal	_Printf
	nop; not filled.
	lhi	r8,((LC6_LF0)>>16)&0xffff
	addui	r8,r8,(LC6_LF0)&0xffff
	sw	(r29),r8
	jal	_Printf
	nop; not filled.
	lhi	r8,((LC7_LF0)>>16)&0xffff
	addui	r8,r8,(LC7_LF0)&0xffff
	sw	(r29),r8
	sw	4(r29),r2
	jal	_Printf
	nop; not filled.
	jal	_exit
	nop; not filled.
L2_LF0:
	jal	_exit
	nop
.endproc _main
;;;
;;; Stub functions for DLX traps.
;;;
;;; Ethan L. Miller, 1999.  Released to the public domain.
;;;
;;; The traps such as Open and Close
;;; (note the capital letters) are for use by user programs.  The traps
;;; with names such as open and close (lower case) are for use by the OS.
;;;


.align 2

;;; The following are the traps to be used by user-level programs
;;;

.align 2
.proc _Open
.global _Open
_Open:
;;; Note that trap #0x213 actually causes a trap vector in the OS of
;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
	trap	#0x213
	jr	r31
	nop
.endproc _Open

.proc _Close
.global _Close
_Close:
	trap	#0x214
	jr	r31
	nop
.endproc _Close

.proc _Read
.global _Read
_Read:
	trap	#0x210
	jr	r31
	nop
.endproc _Read

.proc _Write
.global _Write
_Write:
	trap	#0x211
	jr	r31
	nop
.endproc _Write

.proc _Lseek
.global _Lseek
_Lseek:
	trap	#0x212
	jr	r31
	nop
.endproc _Lseek

.proc _Putchar
.global _Putchar
_Putchar:
	trap	#0x280
	jr	r31
	nop
.endproc _Putchar

.proc _Printf
.global _Printf
_Printf:
	trap	#0x201
	jr	r31
	nop
.endproc _Printf

.proc _getpid
.global _getpid
_getpid:
	trap	#0x431
	jr	r31
	nop
.endproc _getpid


.proc _process_create
.global _process_create
_process_create:
	trap	#0x432
	jr	r31
	nop
.endproc _process_create

.proc _shmget
.global _shmget
_shmget:
	trap	#0x440
	jr	r31
	nop
.endproc _shmget

.proc _shmat
.global _shmat
_shmat:
	trap	#0x441
	jr	r31
	nop
.endproc _shmat

.proc _sem_create
.global _sem_create
_sem_create:
	trap	#0x450
	jr	r31
	nop
.endproc _sem_create

.proc _sem_wait
.global _sem_wait
_sem_wait:
	trap	#0x451
	jr	r31
	nop
.endproc _sem_wait

.proc _sem_signal
.global _sem_signal
_sem_signal:
	trap	#0x452
	jr	r31
	nop
.endproc _sem_signal

.proc _lock_create
.global _lock_create
_lock_create:
	trap	#0x453
	jr	r31
	nop
.endproc _lock_create

.proc _lock_acquire
.global _lock_acquire
_lock_acquire:
	trap	#0x454
	jr	r31
	nop
.endproc _lock_acquire

.proc _lock_release
.global _lock_release
_lock_release:
	trap	#0x455
	jr	r31
	nop
.endproc _lock_release

.proc _cond_create
.global _cond_create
_cond_create:
	trap	#0x456
	jr	r31
	nop
.endproc _cond_create

.proc _cond_wait
.global _cond_wait
_cond_wait:
	trap	#0x457
	jr	r31
	nop
.endproc _cond_wait

.proc _cond_signal
.global _cond_signal
_cond_signal:
	trap	#0x458
	jr	r31
	nop
.endproc _cond_signal

.proc _cond_broadcast
.global _cond_broadcast
_cond_broadcast:
	trap	#0x455
	jr	r31
	nop
.endproc _cond_broadcast

.proc _TimerGet
.global _TimerGet
_TimerGet:
	trap	#0x50
	jr	r31
	nop
.endproc _TimerGet

.proc _yield
.global _yield
_yield:
	trap	#0x433
	jr	r31
	nop
.endproc _yield
; Compiled by GCC

.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r2,3(r30)
	addi	r31,r0,#0
	andi	r1,r2,#0x00ff
	seqi	r1,r1,#32
	bnez	r1,L6_LF2
	nop; not filled.
	addi	r1,r2,#-9
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#1
	beqz	r1,L5_LF2
	nop; not filled.
L6_LF2:
	addi	r31,r0,#1
L5_LF2:
	add	r1,r0,r31
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r31,3(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	bnez	r1,L12_LF2
	nop; not filled.
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#5
	bnez	r1,L12_LF2
	nop; not filled.
	andi	r1,r31,#0x00ff
	snei	r1,r1,#65
	bnez	r1,L11_LF2
	nop; not filled.
L12_LF2:
	addi	r2,r0,#1
L11_LF2:
	add	r1,r0,r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
.align 2
.proc _dstrcpy
.global _dstrcpy
_dstrcpy:
;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	lw	r2,4(r30)
	add	r3,r0,r31
L19_LF2:
	lb	r1,(r2)
	sb	(r31),r1
	addi	r2,r2,#1
	addi	r31,r31,#1
	andi	r1,r1,#0x00ff
	snei	r1,r1,#0
	bnez	r1,L19_LF2
	nop; not filled.
	add	r1,r0,r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrcpy
.align 2
.proc _dstrncpy
.global _dstrncpy
_dstrncpy:
;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r2,(r30)
	lw	r3,4(r30)
	lw	r31,8(r30)
	add	r4,r0,r2
	j	L37_LF2
	nop; not filled.
L34_LF2:
	lb	r1,(r3)
	sb	(r2),r1
	addi	r3,r3,#1
	addi	r2,r2,#1
	andi	r1,r1,#0x00ff
	snei	r1,r1,#0
	beqz	r1,L32_LF2
	nop; not filled.
L37_LF2:
	add	r1,r0,r31
	addi	r31,r31,#-1
	slei	r1,r1,#0
	beqz	r1,L34_LF2
	nop; not filled.
L32_LF2:
	add	r1,r0,r4
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrncpy
.align 2
.proc _dstrcat
.global _dstrcat
_dstrcat:
;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	add	r3,r0,r31
	lbu	r1,(r3)
	snei	r1,r1,#0
	beqz	r1,L50_LF2
	nop; not filled.
L51_LF2:
	addi	r31,r31,#1
	lbu	r1,(r31)
	snei	r1,r1,#0
	bnez	r1,L51_LF2
	nop; not filled.
L50_LF2:
	add	r2,r0,r31
	lw	r31,4(r30)
L54_LF2:
	lb	r1,(r31)
	sb	(r2),r1
	addi	r31,r31,#1
	addi	r2,r2,#1
	andi	r1,r1,#0x00ff
	snei	r1,r1,#0
	bnez	r1,L54_LF2
	nop; not filled.
	add	r1,r0,r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrcat
.align 2
.proc _dstrncmp
.global _dstrncmp
_dstrncmp:
;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r3,(r30)
	lw	r4,4(r30)
	lw	r5,8(r30)
	addi	r2,r0,#0
	slt	r1,r2,r5
	beqz	r1,L73_LF2
	nop; not filled.
L75_LF2:
	lbu	r31,(r4)
	snei	r1,r31,#0
	beqz	r1,L86_LF2
	nop; not filled.
	lbu	r1,(r3)
	sne	r1,r1,r31
	bnez	r1,L73_LF2
	nop; not filled.
	addi	r3,r3,#1
	addi	r4,r4,#1
	addi	r2,r2,#1
	slt	r1,r2,r5
	bnez	r1,L75_LF2
	nop; not filled.
L73_LF2:
	seq	r1,r2,r5
	beqz	r1,L80_LF2
	nop; not filled.
L86_LF2:
	addi	r1,r0,#0
	j	L84_LF2
	nop; not filled.
L80_LF2:
	lbu	r31,(r3)
	lbu	r3,(r4)
	sub	r1,r31,r3
	sgei	r1,r1,#0
	addi	r2,r0,#-1
	beqz	r1,L82_LF2
	nop; not filled.
	sne	r2,r31,r3
L82_LF2:
	add	r1,r0,r2
L84_LF2:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrncmp
.align 2
.proc _dstrlen
.global _dstrlen
_dstrlen:
;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lw	r31,(r30)
	addi	r2,r0,#0
	j	L97_LF2
	nop; not filled.
L95_LF2:
	addi	r2,r2,#1
L97_LF2:
	lbu	r1,(r31)
	addi	r31,r31,#1
	snei	r1,r1,#0
	bnez	r1,L95_LF2
	nop; not filled.
	add	r1,r0,r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrlen
.align 2
.proc _dstrstr
.global _dstrstr
_dstrstr:
;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	lw	r5,(r30)
	lw	r7,4(r30)
	addi	r3,r0,#0
	lbu	r1,(r7)
	addi	r2,r7,#1
	snei	r1,r1,#0
	beqz	r1,L125_LF2
	nop; not filled.
L126_LF2:
	addi	r3,r3,#1
	lbu	r1,(r2)
	addi	r2,r2,#1
	snei	r1,r1,#0
	bnez	r1,L126_LF2
	nop; not filled.
L125_LF2:
	add	r6,r0,r3
	j	L149_LF2
	nop; not filled.
L130_LF2:
	add	r3,r0,r5
	add	r4,r0,r7
	addi	r2,r0,#0
	slt	r1,r2,r6
	beqz	r1,L134_LF2
	nop; not filled.
L136_LF2:
	lbu	r31,(r4)
	snei	r1,r31,#0
	beqz	r1,L150_LF2
	nop; not filled.
	lbu	r1,(r3)
	sne	r1,r1,r31
	bnez	r1,L134_LF2
	nop; not filled.
	addi	r3,r3,#1
	addi	r4,r4,#1
	addi	r2,r2,#1
	slt	r1,r2,r6
	bnez	r1,L136_LF2
	nop; not filled.
L134_LF2:
	seq	r1,r2,r6
	beqz	r1,L141_LF2
	nop; not filled.
L150_LF2:
	addi	r1,r0,#0
	j	L132_LF2
	nop; not filled.
L141_LF2:
	lbu	r3,(r3)
	lbu	r2,(r4)
	sub	r1,r3,r2
	sgei	r1,r1,#0
	addi	r31,r0,#-1
	beqz	r1,L143_LF2
	nop; not filled.
	sne	r31,r3,r2
L143_LF2:
	add	r1,r0,r31
L132_LF2:
	snei	r1,r1,#0
	bnez	r1,L131_LF2
	nop; not filled.
	add	r1,r0,r5
	j	L146_LF2
	nop; not filled.
L131_LF2:
	addi	r5,r5,#1
L149_LF2:
	lbu	r1,(r5)
	snei	r1,r1,#0
	bnez	r1,L130_LF2
	nop; not filled.
	addi	r1,r0,#0
L146_LF2:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrstr
.align 2
.proc _dmindex
.global _dmindex
_dmindex:
;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r4,(r30)
	lw	r6,4(r30)
	lbu	r1,(r4)
	snei	r1,r1,#0
	beqz	r1,L164_LF2
	nop; not filled.
	add	r5,r0,r1
L165_LF2:
	add	r2,r0,r6
	lb	r31,(r6)
	andi	r1,r31,#0x00ff
	snei	r1,r1,#0
	beqz	r1,L163_LF2
	nop; not filled.
	lbu	r3,(r4)
L169_LF2:
	andi	r1,r31,#0x00ff
	seq	r1,r3,r1
	beqz	r1,L168_LF2
	nop; not filled.
	add	r1,r0,r4
	j	L173_LF2
	nop; not filled.
L168_LF2:
	addi	r2,r2,#1
	lb	r31,(r2)
	andi	r1,r31,#0x00ff
	snei	r1,r1,#0
	bnez	r1,L169_LF2
	nop; not filled.
L163_LF2:
	bnez	r5,L165_LF2
	nop; not filled.
L164_LF2:
	addi	r1,r0,#0
L173_LF2:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dmindex
.align 2
.proc _dindex
.global _dindex
_dindex:
;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	lw	r3,4(r30)
	j	L187_LF2
	nop; not filled.
L183_LF2:
	andi	r1,r31,#0x00ff
	seq	r1,r1,r3
	beqz	r1,L184_LF2
	nop; not filled.
	add	r1,r0,r2
	j	L186_LF2
	nop; not filled.
L184_LF2:
	addi	r2,r2,#1
L187_LF2:
	lb	r31,(r2)
	andi	r1,r31,#0x00ff
	snei	r1,r1,#0
	bnez	r1,L183_LF2
	nop; not filled.
	addi	r1,r0,#0
L186_LF2:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dindex
.align 2
.proc _ditoa
.global _ditoa
_ditoa:
;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r3,(r30)
	lw	r4,4(r30)
	slti	r1,r3,#0
	beqz	r1,L203_LF2
	nop; not filled.
	addi	r6,r0,(#0x2d)&0xff
	j	L216_LF2
	nop; not filled.
L203_LF2:
	snei	r1,r3,#0
	bnez	r1,L205_LF2
	nop; not filled.
	addi	r6,r0,(#0x30)&0xff
L216_LF2:
	sb	(r4),r6
	addi	r4,r4,#1
	j	L204_LF2
	nop; not filled.
L205_LF2:
	addi	r31,r0,#1
	sle	r1,r31,r3
	beqz	r1,L208_LF2
	nop; not filled.
L209_LF2:
	slli	r1,r31,#0x2
	add	r1,r1,r31
	slli	r31,r1,#0x1
	sle	r1,r31,r3
	bnez	r1,L209_LF2
	nop; not filled.
L208_LF2:
	addi	r5,r0,#10
L212_LF2:
	movi2fp	f0,r31
	movi2fp	f1,r5
	div	f0,f0,f1
	movfp2i	r31,f0
	movi2fp	f0,r3
	movi2fp	f1,r31
	div	f0,f0,f1
	movfp2i	r2,f0
	addi	r1,r2,#48
	sb	(r4),r1
	addi	r4,r4,#1
	movi2fp	f0,r2
	movi2fp	f1,r31
	mult	f0,f0,f1
	movfp2i	r1,f0
	sub	r3,r3,r1
	sgti	r1,r31,#1
	bnez	r1,L212_LF2
	nop; not filled.
L204_LF2:
	addi	r6,r0,(#0x0)&0xff
	sb	(r4),r6
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ditoa
.align 2
.proc _dstrtol
.global _dstrtol
_dstrtol:
;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r2,(r30)
	lw	r5,4(r30)
	lw	r4,8(r30)
	addi	r3,r0,#0
	j	L247_LF2
	nop; not filled.
L220_LF2:
	addi	r2,r2,#1
L247_LF2:
	lb	r31,(r2)
	andi	r1,r31,#0x00ff
	seqi	r1,r1,#32
	bnez	r1,L220_LF2
	nop; not filled.
	addi	r1,r31,#-9
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#1
	bnez	r1,L220_LF2
	nop; not filled.
	snei	r1,r5,#0
	beqz	r1,L222_LF2
	nop; not filled.
	sw	(r5),r2
L222_LF2:
	lbu	r31,(r2)
	snei	r1,r31,#0
	beqz	r1,L248_LF2
	nop; not filled.
	seqi	r1,r31,#45
	beqz	r1,L224_LF2
	nop; not filled.
	addi	r6,r0,#-1
	addi	r2,r2,#1
	j	L225_LF2
	nop; not filled.
L224_LF2:
	addi	r6,r0,#1
L225_LF2:
	snei	r1,r4,#0
	bnez	r1,L226_LF2
	nop; not filled.
	lbu	r1,(r2)
	seqi	r1,r1,#48
	beqz	r1,L227_LF2
	nop; not filled.
	addi	r2,r2,#1
	lbu	r31,(r2)
	seqi	r1,r31,#120
	bnez	r1,L229_LF2
	nop; not filled.
	seqi	r1,r31,#88
	beqz	r1,L228_LF2
	nop; not filled.
L229_LF2:
	addi	r4,r0,#16
	addi	r2,r2,#1
	j	L226_LF2
	nop; not filled.
L228_LF2:
	addi	r4,r0,#8
	j	L226_LF2
	nop; not filled.
L227_LF2:
	addi	r4,r0,#10
L226_LF2:
	addi	r1,r4,#-1
	sgtui	r1,r1,#15
	beqz	r1,L233_LF2
	nop; not filled.
L248_LF2:
	add	r1,r0,r3
	j	L245_LF2
	nop; not filled.
L233_LF2:
	lb	r31,(r2)
	addi	r1,r31,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	beqz	r1,L236_LF2
	nop; not filled.
	andi	r1,r31,#0x00ff
	addi	r1,r1,#-48
	j	L237_LF2
	nop; not filled.
L236_LF2:
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#25
	beqz	r1,L238_LF2
	nop; not filled.
	andi	r1,r31,#0x00ff
	addi	r1,r1,#-87
	j	L237_LF2
	nop; not filled.
L238_LF2:
	addi	r1,r31,#-65
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#25
	beqz	r1,L240_LF2
	nop; not filled.
	andi	r1,r31,#0x00ff
	addi	r1,r1,#-55
	j	L237_LF2
	nop; not filled.
L240_LF2:
	addi	r1,r0,#1000
L237_LF2:
	slt	r31,r1,r4
	beqz	r31,L246_LF2
	nop; not filled.
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	add	r3,r3,r1
	addi	r2,r2,#1
	bnez	r31,L233_LF2
	nop; not filled.
L246_LF2:
	snei	r1,r5,#0
	beqz	r1,L244_LF2
	nop; not filled.
	sw	(r5),r2
L244_LF2:
	movi2fp	f0,r3
	movi2fp	f1,r6
	mult	f0,f0,f1
	movfp2i	r1,f0
L245_LF2:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrtol
.align 2
.proc _bcopy
.global _bcopy
_bcopy:
;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r3,(r30)
	lw	r2,4(r30)
	lw	r31,8(r30)
	j	L259_LF2
	nop; not filled.
L257_LF2:
	lb	r4,(r3)
	sb	(r2),r4
	addi	r3,r3,#1
	addi	r2,r2,#1
L259_LF2:
	add	r1,r0,r31
	addi	r31,r31,#-1
	sgti	r1,r1,#0
	bnez	r1,L257_LF2
	nop; not filled.
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _bcopy
.align 2
.proc _bzero
.global _bzero
_bzero:
;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	lw	r31,4(r30)
	j	L270_LF2
	nop; not filled.
L268_LF2:
	addi	r3,r0,(#0x0)&0xff
	sb	(r2),r3
	addi	r2,r2,#1
L270_LF2:
	add	r1,r0,r31
	addi	r31,r31,#-1
	sgti	r1,r1,#0
	bnez	r1,L268_LF2
	nop; not filled.
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _bzero
;;; Ethan L. Miller, 1999.  Released to the public domain
;;;
;;; Most of the traps are called in files from libtraps.


.align 2
.proc _exit
.global _exit
_exit:
	trap	#0x300
	jr	r31
	nop
.endproc _exit

; for the benefit of gcc.
.proc ___main
.global ___main
___main:
	jr	r31
	nop
.endproc ___main
.text
.global _etext
_etext:
.align 3
.data
.global _edata
_edata:
