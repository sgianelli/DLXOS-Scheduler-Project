 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 20480
    3                      ; Data size: 99
    4                      ; Text size: 3724
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x2000
    8                      ; Compiled by GCC
   10  00002000          	.align 2
   11  00002000          	LC0_LF0:
   12  00002000  74696d65	.ascii "timer = %d\n\000"
   12  00002004  72203d20	
   12  00002008  25640a00	
   13  0000200c          	.align 2
   14  0000200c          	LC1_LF0:
   15  0000200c  53657474	.ascii "Setting number = %d\n\000"
   15  00002010  696e6720	
   15  00002014  6e756d62	
   15  00002018  6572203d	
   15  0000201c  2025640a	
   15  00002020  00      	
   16  00002021          	.align 2
   17  00002024          	LC2_LF0:
   18  00002024  3100    	.ascii "1\000"
   19  00002026          	.align 2
   20  00002028          	LC3_LF0:
   21  00002028  75736572	.ascii "userprog4.dlx.obj\000"
   21  0000202c  70726f67	
   21  00002030  342e646c	
   21  00002034  782e6f62	
   21  00002038  6a00    	
   22  0000203a          	.align 2
   23  0000203c          	LC4_LF0:
   24  0000203c  25632564	.ascii "%c%d\n\000"
   24  00002040  0a00    	
   25  00002042          	.align 2
   26  00002044          	LC5_LF0:
   27  00002044  55736167	.ascii "Usage: \000"
   27  00002048  653a2000	
   28  0000204c          	.align 2
   29  0000204c          	LC6_LF0:
   30  0000204c  206e756d	.ascii " number\n\000"
   30  00002050  6265720a	
   30  00002054  00      	
   31  00002055          	.align 2
   32  00002058          	LC7_LF0:
   33  00002058  61726763	.ascii "argc = %d\n\000"
   33  0000205c  203d2025	
   33  00002060  640a00  	
   34  00002063          	.text
   35  00001000          	.align 2
   36  00001000          	.proc _main
   37  00001000          	.global _main
   38  00001000          	_main:
   39                      ;  Function 'main'; 32 bytes of locals, 0 regs to save.
   40  00001000  afbefffc	sw	-4(r29),r30; push fp
   41  00001004  001df020	add	r30,r0,r29; fp = sp
   42  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   43  0000100c  2fbd0028	subui	r29,r29,#40; alloc local storage
   44  00001010  8fc20000	lw	r2,(r30)
   45  00001014  8fc30004	lw	r3,4(r30)
   46  00001018  0c000e68	jal	___main
   47  0000101c  54000000	nop; not filled.
   48  00001020  60410002	seqi	r1,r2,#2
   49  00001024  14200018	bnez	r1,L3_LF0
   50  00001028  54000000	nop; not filled.
   51  0000102c  60410003	seqi	r1,r2,#3
   52  00001030  102002d0	beqz	r1,L35_LF0
   53  00001034  54000000	nop; not filled.
   54  00001038  080001a8	j	L14_LF0
   55  0000103c  54000000	nop; not filled.
   56  00001040          	L3_LF0:
   57  00001040  0c000420	jal	_TimerGet
   58  00001044  54000000	nop; not filled.
   59  00001048  23bdfff8	addi	r29,r29,#-8
   60  0000104c  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
   61  00001050  25082000	addui	r8,r8,(LC0_LF0)&0xffff
   62  00001054  afa80000	sw	(r29),r8
   63  00001058  afa10004	sw	4(r29),r1
   64  0000105c  0c000350	jal	_Printf
   65  00001060  54000000	nop; not filled.
   66  00001064  23bdfff8	addi	r29,r29,#-8
   67  00001068  8c630004	lw	r3,4(r3)
   68  0000106c  afa30000	sw	(r29),r3
   69  00001070  20080000	addi	r8,r0,#0
   70  00001074  afa80004	sw	4(r29),r8
   71  00001078  2008000a	addi	r8,r0,#10
   72  0000107c  afa80008	sw	8(r29),r8
   73  00001080  0c000b14	jal	_dstrtol
   74  00001084  54000000	nop; not filled.
   75  00001088  00012820	add	r5,r0,r1
   76  0000108c  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
   77  00001090  2508200c	addui	r8,r8,(LC1_LF0)&0xffff
   78  00001094  afa80000	sw	(r29),r8
   79  00001098  afa50004	sw	4(r29),r5
   80  0000109c  0c000310	jal	_Printf
   81  000010a0  54000000	nop; not filled.
   82  000010a4  20030000	addi	r3,r0,#0
   83  000010a8  23bd0010	addi	r29,r29,#16
   84  000010ac          	L7_LF0:
   85  000010ac  23bdfff8	addi	r29,r29,#-8
   86  000010b0  3c080000	lhi	r8,((LC2_LF0)>>16)&0xffff
   87  000010b4  25082024	addui	r8,r8,(LC2_LF0)&0xffff
   88  000010b8  afa80000	sw	(r29),r8
   89  000010bc  0c0002f0	jal	_Printf
   90  000010c0  54000000	nop; not filled.
   91  000010c4  23bd0008	addi	r29,r29,#8
   92  000010c8  20630001	addi	r3,r3,#1
   93  000010cc  70610031	slei	r1,r3,#49
   94  000010d0  1420ffd8	bnez	r1,L7_LF0
   95  000010d4  54000000	nop; not filled.
   96  000010d8  0c000388	jal	_TimerGet
   97  000010dc  54000000	nop; not filled.
   98  000010e0  23bdfff8	addi	r29,r29,#-8
   99  000010e4  3c020000	lhi	r2,((LC0_LF0)>>16)&0xffff
  100  000010e8  24422000	addui	r2,r2,(LC0_LF0)&0xffff
  101  000010ec  afa20000	sw	(r29),r2
  102  000010f0  afa10004	sw	4(r29),r1
  103  000010f4  0c0002b8	jal	_Printf
  104  000010f8  54000000	nop; not filled.
  105  000010fc  20080001	addi	r8,r0,#1
  106  00001100  afa80000	sw	(r29),r8
  107  00001104  0c0002e4	jal	_sem_create
  108  00001108  54000000	nop; not filled.
  109  0000110c  afa10000	sw	(r29),r1
  110  00001110  23c4ffd8	addi	r4,r30,#-40
  111  00001114  afa40004	sw	4(r29),r4
  112  00001118  0c000970	jal	_ditoa
  113  0000111c  54000000	nop; not filled.
  114  00001120  0c000340	jal	_TimerGet
  115  00001124  54000000	nop; not filled.
  116  00001128  afa20000	sw	(r29),r2
  117  0000112c  afa10004	sw	4(r29),r1
  118  00001130  0c00027c	jal	_Printf
  119  00001134  54000000	nop; not filled.
  120  00001138  20030000	addi	r3,r0,#0
  121  0000113c  23bd0008	addi	r29,r29,#8
  122  00001140  0065082a	slt	r1,r3,r5
  123  00001144  10200064	beqz	r1,L10_LF0
  124  00001148  54000000	nop; not filled.
  125  0000114c  23c2ffe8	addi	r2,r30,#-24
  126  00001150          	L12_LF0:
  127  00001150  23bdfff8	addi	r29,r29,#-8
  128  00001154  afa30000	sw	(r29),r3
  129  00001158  afa20004	sw	4(r29),r2
  130  0000115c  0c00092c	jal	_ditoa
  131  00001160  54000000	nop; not filled.
  132  00001164  23bdfff0	addi	r29,r29,#-16
  133  00001168  afa30000	sw	(r29),r3
  134  0000116c  20080000	addi	r8,r0,#0
  135  00001170  afa80004	sw	4(r29),r8
  136  00001174  3c080000	lhi	r8,((LC3_LF0)>>16)&0xffff
  137  00001178  25082028	addui	r8,r8,(LC3_LF0)&0xffff
  138  0000117c  afa80008	sw	8(r29),r8
  139  00001180  afa2000c	sw	12(r29),r2
  140  00001184  afa40010	sw	16(r29),r4
  141  00001188  20080000	addi	r8,r0,#0
  142  0000118c  afa80014	sw	20(r29),r8
  143  00001190  0c000234	jal	_process_create
  144  00001194  54000000	nop; not filled.
  145  00001198  23bd0018	addi	r29,r29,#24
  146  0000119c  20630001	addi	r3,r3,#1
  147  000011a0  0065082a	slt	r1,r3,r5
  148  000011a4  1420ffa8	bnez	r1,L12_LF0
  149  000011a8  54000000	nop; not filled.
  150  000011ac          	L10_LF0:
  151  000011ac  0c0002b4	jal	_TimerGet
  152  000011b0  54000000	nop; not filled.
  153  000011b4  23bdfff8	addi	r29,r29,#-8
  154  000011b8  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
  155  000011bc  25082000	addui	r8,r8,(LC0_LF0)&0xffff
  156  000011c0  afa80000	sw	(r29),r8
  157  000011c4  afa10004	sw	4(r29),r1
  158  000011c8  0c0001e4	jal	_Printf
  159  000011cc  54000000	nop; not filled.
  160  000011d0  0c00029c	jal	_yield
  161  000011d4  54000000	nop; not filled.
  162  000011d8  23bd0008	addi	r29,r29,#8
  163  000011dc  08000180	j	L2_LF0
  164  000011e0  54000000	nop; not filled.
  165  000011e4          	L14_LF0:
  166  000011e4  23bdfff0	addi	r29,r29,#-16
  167  000011e8  8c680004	lw	r8,4(r3)
  168  000011ec  afa80000	sw	(r29),r8
  169  000011f0  20080000	addi	r8,r0,#0
  170  000011f4  afa80004	sw	4(r29),r8
  171  000011f8  2008000a	addi	r8,r0,#10
  172  000011fc  afa80008	sw	8(r29),r8
  173  00001200  0c000994	jal	_dstrtol
  174  00001204  54000000	nop; not filled.
  175  00001208  00013820	add	r7,r0,r1
  176  0000120c  8c630008	lw	r3,8(r3)
  177  00001210  afa30000	sw	(r29),r3
  178  00001214  20080000	addi	r8,r0,#0
  179  00001218  afa80004	sw	4(r29),r8
  180  0000121c  2008000a	addi	r8,r0,#10
  181  00001220  afa80008	sw	8(r29),r8
  182  00001224  0c000970	jal	_dstrtol
  183  00001228  54000000	nop; not filled.
  184  0000122c  00012020	add	r4,r0,r1
  185  00001230  20030000	addi	r3,r0,#0
  186  00001234  23bd0010	addi	r29,r29,#16
  187  00001238  2405c34f	addui	r5,r0,#49999
  188  0000123c  20e60041	addi	r6,r7,#65
  189  00001240          	L18_LF0:
  190  00001240  20020000	addi	r2,r0,#0
  191  00001244          	L21_LF0:
  192  00001244  20420001	addi	r2,r2,#1
  193  00001248  0045082c	sle	r1,r2,r5
  194  0000124c  1420fff4	bnez	r1,L21_LF0
  195  00001250  54000000	nop; not filled.
  196  00001254  23bdfff0	addi	r29,r29,#-16
  197  00001258  3c080000	lhi	r8,((LC4_LF0)>>16)&0xffff
  198  0000125c  2508203c	addui	r8,r8,(LC4_LF0)&0xffff
  199  00001260  afa80000	sw	(r29),r8
  200  00001264  afa60004	sw	4(r29),r6
  201  00001268  afa30008	sw	8(r29),r3
  202  0000126c  0c000140	jal	_Printf
  203  00001270  54000000	nop; not filled.
  204  00001274  23bd0010	addi	r29,r29,#16
  205  00001278  20630001	addi	r3,r3,#1
  206  0000127c  7061001d	slei	r1,r3,#29
  207  00001280  1420ffbc	bnez	r1,L18_LF0
  208  00001284  54000000	nop; not filled.
  209  00001288  20030000	addi	r3,r0,#0
  210  0000128c  2405c34f	addui	r5,r0,#49999
  211  00001290  20e60041	addi	r6,r7,#65
  212  00001294          	L28_LF0:
  213  00001294  23bdfff8	addi	r29,r29,#-8
  214  00001298  afa40000	sw	(r29),r4
  215  0000129c  0c000158	jal	_sem_wait
  216  000012a0  54000000	nop; not filled.
  217  000012a4  20020000	addi	r2,r0,#0
  218  000012a8  23bd0008	addi	r29,r29,#8
  219  000012ac          	L31_LF0:
  220  000012ac  20420001	addi	r2,r2,#1
  221  000012b0  0045082c	sle	r1,r2,r5
  222  000012b4  1420fff4	bnez	r1,L31_LF0
  223  000012b8  54000000	nop; not filled.
  224  000012bc  23bdfff0	addi	r29,r29,#-16
  225  000012c0  3c080000	lhi	r8,((LC4_LF0)>>16)&0xffff
  226  000012c4  2508203c	addui	r8,r8,(LC4_LF0)&0xffff
  227  000012c8  afa80000	sw	(r29),r8
  228  000012cc  afa60004	sw	4(r29),r6
  229  000012d0  afa30008	sw	8(r29),r3
  230  000012d4  0c0000d8	jal	_Printf
  231  000012d8  54000000	nop; not filled.
  232  000012dc  afa40000	sw	(r29),r4
  233  000012e0  0c000120	jal	_sem_signal
  234  000012e4  54000000	nop; not filled.
  235  000012e8  23bd0010	addi	r29,r29,#16
  236  000012ec  20630001	addi	r3,r3,#1
  237  000012f0  7061001d	slei	r1,r3,#29
  238  000012f4  10200068	beqz	r1,L2_LF0
  239  000012f8  54000000	nop; not filled.
  240  000012fc  0bffff94	j	L28_LF0
  241  00001300  54000000	nop; not filled.
  242  00001304          	L35_LF0:
  243  00001304  23bdfff8	addi	r29,r29,#-8
  244  00001308  3c080000	lhi	r8,((LC5_LF0)>>16)&0xffff
  245  0000130c  25082044	addui	r8,r8,(LC5_LF0)&0xffff
  246  00001310  afa80000	sw	(r29),r8
  247  00001314  0c000098	jal	_Printf
  248  00001318  54000000	nop; not filled.
  249  0000131c  8c630000	lw	r3,(r3)
  250  00001320  afa30000	sw	(r29),r3
  251  00001324  0c000088	jal	_Printf
  252  00001328  54000000	nop; not filled.
  253  0000132c  3c080000	lhi	r8,((LC6_LF0)>>16)&0xffff
  254  00001330  2508204c	addui	r8,r8,(LC6_LF0)&0xffff
  255  00001334  afa80000	sw	(r29),r8
  256  00001338  0c000074	jal	_Printf
  257  0000133c  54000000	nop; not filled.
  258  00001340  3c080000	lhi	r8,((LC7_LF0)>>16)&0xffff
  259  00001344  25082058	addui	r8,r8,(LC7_LF0)&0xffff
  260  00001348  afa80000	sw	(r29),r8
  261  0000134c  afa20004	sw	4(r29),r2
  262  00001350  0c00005c	jal	_Printf
  263  00001354  54000000	nop; not filled.
  264  00001358  0c000b1c	jal	_exit
  265  0000135c  54000000	nop; not filled.
  266  00001360          	L2_LF0:
  267  00001360  0c000b14	jal	_exit
  268  00001364  54000000	nop
  269  00001368          	.endproc _main
  270                      ;;;
  271                      ;;; Stub functions for DLX traps.
  272                      ;;;
  273                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  274                      ;;;
  275                      ;;; The traps such as Open and Close
  276                      ;;; (note the capital letters) are for use by user programs.  The traps
  277                      ;;; with names such as open and close (lower case) are for use by the OS.
  278                      ;;;
  281  00001368          	.align 2
  283                      ;;; The following are the traps to be used by user-level programs
  284                      ;;;
  286  00001368          	.align 2
  287  00001368          	.proc _Open
  288  00001368          	.global _Open
  289  00001368          	_Open:
  290                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  291                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  292                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  293  00001368  44000213	trap	#0x213
  294  0000136c  4be00000	jr	r31
  295  00001370  54000000	nop
  296  00001374          	.endproc _Open
  298  00001374          	.proc _Close
  299  00001374          	.global _Close
  300  00001374          	_Close:
  301  00001374  44000214	trap	#0x214
  302  00001378  4be00000	jr	r31
  303  0000137c  54000000	nop
  304  00001380          	.endproc _Close
  306  00001380          	.proc _Read
  307  00001380          	.global _Read
  308  00001380          	_Read:
  309  00001380  44000210	trap	#0x210
  310  00001384  4be00000	jr	r31
  311  00001388  54000000	nop
  312  0000138c          	.endproc _Read
  314  0000138c          	.proc _Write
  315  0000138c          	.global _Write
  316  0000138c          	_Write:
  317  0000138c  44000211	trap	#0x211
  318  00001390  4be00000	jr	r31
  319  00001394  54000000	nop
  320  00001398          	.endproc _Write
  322  00001398          	.proc _Lseek
  323  00001398          	.global _Lseek
  324  00001398          	_Lseek:
  325  00001398  44000212	trap	#0x212
  326  0000139c  4be00000	jr	r31
  327  000013a0  54000000	nop
  328  000013a4          	.endproc _Lseek
  330  000013a4          	.proc _Putchar
  331  000013a4          	.global _Putchar
  332  000013a4          	_Putchar:
  333  000013a4  44000280	trap	#0x280
  334  000013a8  4be00000	jr	r31
  335  000013ac  54000000	nop
  336  000013b0          	.endproc _Putchar
  338  000013b0          	.proc _Printf
  339  000013b0          	.global _Printf
  340  000013b0          	_Printf:
  341  000013b0  44000201	trap	#0x201
  342  000013b4  4be00000	jr	r31
  343  000013b8  54000000	nop
  344  000013bc          	.endproc _Printf
  346  000013bc          	.proc _getpid
  347  000013bc          	.global _getpid
  348  000013bc          	_getpid:
  349  000013bc  44000431	trap	#0x431
  350  000013c0  4be00000	jr	r31
  351  000013c4  54000000	nop
  352  000013c8          	.endproc _getpid
  355  000013c8          	.proc _process_create
  356  000013c8          	.global _process_create
  357  000013c8          	_process_create:
  358  000013c8  44000432	trap	#0x432
  359  000013cc  4be00000	jr	r31
  360  000013d0  54000000	nop
  361  000013d4          	.endproc _process_create
  363  000013d4          	.proc _shmget
  364  000013d4          	.global _shmget
  365  000013d4          	_shmget:
  366  000013d4  44000440	trap	#0x440
  367  000013d8  4be00000	jr	r31
  368  000013dc  54000000	nop
  369  000013e0          	.endproc _shmget
  371  000013e0          	.proc _shmat
  372  000013e0          	.global _shmat
  373  000013e0          	_shmat:
  374  000013e0  44000441	trap	#0x441
  375  000013e4  4be00000	jr	r31
  376  000013e8  54000000	nop
  377  000013ec          	.endproc _shmat
  379  000013ec          	.proc _sem_create
  380  000013ec          	.global _sem_create
  381  000013ec          	_sem_create:
  382  000013ec  44000450	trap	#0x450
  383  000013f0  4be00000	jr	r31
  384  000013f4  54000000	nop
  385  000013f8          	.endproc _sem_create
  387  000013f8          	.proc _sem_wait
  388  000013f8          	.global _sem_wait
  389  000013f8          	_sem_wait:
  390  000013f8  44000451	trap	#0x451
  391  000013fc  4be00000	jr	r31
  392  00001400  54000000	nop
  393  00001404          	.endproc _sem_wait
  395  00001404          	.proc _sem_signal
  396  00001404          	.global _sem_signal
  397  00001404          	_sem_signal:
  398  00001404  44000452	trap	#0x452
  399  00001408  4be00000	jr	r31
  400  0000140c  54000000	nop
  401  00001410          	.endproc _sem_signal
  403  00001410          	.proc _lock_create
  404  00001410          	.global _lock_create
  405  00001410          	_lock_create:
  406  00001410  44000453	trap	#0x453
  407  00001414  4be00000	jr	r31
  408  00001418  54000000	nop
  409  0000141c          	.endproc _lock_create
  411  0000141c          	.proc _lock_acquire
  412  0000141c          	.global _lock_acquire
  413  0000141c          	_lock_acquire:
  414  0000141c  44000454	trap	#0x454
  415  00001420  4be00000	jr	r31
  416  00001424  54000000	nop
  417  00001428          	.endproc _lock_acquire
  419  00001428          	.proc _lock_release
  420  00001428          	.global _lock_release
  421  00001428          	_lock_release:
  422  00001428  44000455	trap	#0x455
  423  0000142c  4be00000	jr	r31
  424  00001430  54000000	nop
  425  00001434          	.endproc _lock_release
  427  00001434          	.proc _cond_create
  428  00001434          	.global _cond_create
  429  00001434          	_cond_create:
  430  00001434  44000456	trap	#0x456
  431  00001438  4be00000	jr	r31
  432  0000143c  54000000	nop
  433  00001440          	.endproc _cond_create
  435  00001440          	.proc _cond_wait
  436  00001440          	.global _cond_wait
  437  00001440          	_cond_wait:
  438  00001440  44000457	trap	#0x457
  439  00001444  4be00000	jr	r31
  440  00001448  54000000	nop
  441  0000144c          	.endproc _cond_wait
  443  0000144c          	.proc _cond_signal
  444  0000144c          	.global _cond_signal
  445  0000144c          	_cond_signal:
  446  0000144c  44000458	trap	#0x458
  447  00001450  4be00000	jr	r31
  448  00001454  54000000	nop
  449  00001458          	.endproc _cond_signal
  451  00001458          	.proc _cond_broadcast
  452  00001458          	.global _cond_broadcast
  453  00001458          	_cond_broadcast:
  454  00001458  44000455	trap	#0x455
  455  0000145c  4be00000	jr	r31
  456  00001460  54000000	nop
  457  00001464          	.endproc _cond_broadcast
  459  00001464          	.proc _TimerGet
  460  00001464          	.global _TimerGet
  461  00001464          	_TimerGet:
  462  00001464  44000050	trap	#0x50
  463  00001468  4be00000	jr	r31
  464  0000146c  54000000	nop
  465  00001470          	.endproc _TimerGet
  467  00001470          	.proc _yield
  468  00001470          	.global _yield
  469  00001470          	_yield:
  470  00001470  44000433	trap	#0x433
  471  00001474  4be00000	jr	r31
  472  00001478  54000000	nop
  473  0000147c          	.endproc _yield
  474                      ; Compiled by GCC
  476  0000147c          	.align 2
  477  0000147c          	.proc _isspace
  478  0000147c          	.global _isspace
  479  0000147c          	_isspace:
  480                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
  481  0000147c  afbefffc	sw	-4(r29),r30; push fp
  482  00001480  001df020	add	r30,r0,r29; fp = sp
  483  00001484  afbffff8	sw	-8(r29),r31; push ret addr
  484  00001488  2fbd0010	subui	r29,r29,#16; alloc local storage
  485  0000148c  afa20000	sw	0(r29),r2
  486  00001490  83c20003	lb	r2,3(r30)
  487  00001494  201f0000	addi	r31,r0,#0
  488  00001498  304100ff	andi	r1,r2,#0x00ff
  489  0000149c  60210020	seqi	r1,r1,#32
  490  000014a0  14200018	bnez	r1,L6_LF2
  491  000014a4  54000000	nop; not filled.
  492  000014a8  2041fff7	addi	r1,r2,#-9
  493  000014ac  302100ff	andi	r1,r1,#0x00ff
  494  000014b0  70210001	sleui	r1,r1,#1
  495  000014b4  10200008	beqz	r1,L5_LF2
  496  000014b8  54000000	nop; not filled.
  497  000014bc          	L6_LF2:
  498  000014bc  201f0001	addi	r31,r0,#1
  499  000014c0          	L5_LF2:
  500  000014c0  001f0820	add	r1,r0,r31
  501  000014c4  8fa20000	lw	r2,0(r29)
  502  000014c8  8fdffff8	lw	r31,-8(r30)
  503  000014cc  001ee820	add	r29,r0,r30
  504  000014d0  8fdefffc	lw	r30,-4(r30)
  505  000014d4  4be00000	jr	r31
  506  000014d8  54000000	nop
  507  000014dc          	.endproc _isspace
  508  000014dc          	.align 2
  509  000014dc          	.proc _isxdigit
  510  000014dc          	.global _isxdigit
  511  000014dc          	_isxdigit:
  512                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
  513  000014dc  afbefffc	sw	-4(r29),r30; push fp
  514  000014e0  001df020	add	r30,r0,r29; fp = sp
  515  000014e4  afbffff8	sw	-8(r29),r31; push ret addr
  516  000014e8  2fbd0010	subui	r29,r29,#16; alloc local storage
  517  000014ec  afa20000	sw	0(r29),r2
  518  000014f0  83df0003	lb	r31,3(r30)
  519  000014f4  20020000	addi	r2,r0,#0
  520  000014f8  23e1ffd0	addi	r1,r31,#-48
  521  000014fc  302100ff	andi	r1,r1,#0x00ff
  522  00001500  70210009	sleui	r1,r1,#9
  523  00001504  14200028	bnez	r1,L12_LF2
  524  00001508  54000000	nop; not filled.
  525  0000150c  23e1ff9f	addi	r1,r31,#-97
  526  00001510  302100ff	andi	r1,r1,#0x00ff
  527  00001514  70210005	sleui	r1,r1,#5
  528  00001518  14200014	bnez	r1,L12_LF2
  529  0000151c  54000000	nop; not filled.
  530  00001520  33e100ff	andi	r1,r31,#0x00ff
  531  00001524  64210041	snei	r1,r1,#65
  532  00001528  14200008	bnez	r1,L11_LF2
  533  0000152c  54000000	nop; not filled.
  534  00001530          	L12_LF2:
  535  00001530  20020001	addi	r2,r0,#1
  536  00001534          	L11_LF2:
  537  00001534  00020820	add	r1,r0,r2
  538  00001538  8fa20000	lw	r2,0(r29)
  539  0000153c  8fdffff8	lw	r31,-8(r30)
  540  00001540  001ee820	add	r29,r0,r30
  541  00001544  8fdefffc	lw	r30,-4(r30)
  542  00001548  4be00000	jr	r31
  543  0000154c  54000000	nop
  544  00001550          	.endproc _isxdigit
  545  00001550          	.align 2
  546  00001550          	.proc _dstrcpy
  547  00001550          	.global _dstrcpy
  548  00001550          	_dstrcpy:
  549                      ;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
  550  00001550  afbefffc	sw	-4(r29),r30; push fp
  551  00001554  001df020	add	r30,r0,r29; fp = sp
  552  00001558  afbffff8	sw	-8(r29),r31; push ret addr
  553  0000155c  2fbd0010	subui	r29,r29,#16; alloc local storage
  554  00001560  afa20000	sw	0(r29),r2
  555  00001564  afa30004	sw	4(r29),r3
  556  00001568  8fdf0000	lw	r31,(r30)
  557  0000156c  8fc20004	lw	r2,4(r30)
  558  00001570  001f1820	add	r3,r0,r31
  559  00001574          	L19_LF2:
  560  00001574  80410000	lb	r1,(r2)
  561  00001578  a3e10000	sb	(r31),r1
  562  0000157c  20420001	addi	r2,r2,#1
  563  00001580  23ff0001	addi	r31,r31,#1
  564  00001584  302100ff	andi	r1,r1,#0x00ff
  565  00001588  64210000	snei	r1,r1,#0
  566  0000158c  1420ffe4	bnez	r1,L19_LF2
  567  00001590  54000000	nop; not filled.
  568  00001594  00030820	add	r1,r0,r3
  569  00001598  8fa20000	lw	r2,0(r29)
  570  0000159c  8fa30004	lw	r3,4(r29)
  571  000015a0  8fdffff8	lw	r31,-8(r30)
  572  000015a4  001ee820	add	r29,r0,r30
  573  000015a8  8fdefffc	lw	r30,-4(r30)
  574  000015ac  4be00000	jr	r31
  575  000015b0  54000000	nop
  576  000015b4          	.endproc _dstrcpy
  577  000015b4          	.align 2
  578  000015b4          	.proc _dstrncpy
  579  000015b4          	.global _dstrncpy
  580  000015b4          	_dstrncpy:
  581                      ;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
  582  000015b4  afbefffc	sw	-4(r29),r30; push fp
  583  000015b8  001df020	add	r30,r0,r29; fp = sp
  584  000015bc  afbffff8	sw	-8(r29),r31; push ret addr
  585  000015c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  586  000015c4  afa20000	sw	0(r29),r2
  587  000015c8  afa30004	sw	4(r29),r3
  588  000015cc  afa40008	sw	8(r29),r4
  589  000015d0  8fc20000	lw	r2,(r30)
  590  000015d4  8fc30004	lw	r3,4(r30)
  591  000015d8  8fdf0008	lw	r31,8(r30)
  592  000015dc  00022020	add	r4,r0,r2
  593  000015e0  08000024	j	L37_LF2
  594  000015e4  54000000	nop; not filled.
  595  000015e8          	L34_LF2:
  596  000015e8  80610000	lb	r1,(r3)
  597  000015ec  a0410000	sb	(r2),r1
  598  000015f0  20630001	addi	r3,r3,#1
  599  000015f4  20420001	addi	r2,r2,#1
  600  000015f8  302100ff	andi	r1,r1,#0x00ff
  601  000015fc  64210000	snei	r1,r1,#0
  602  00001600  10200018	beqz	r1,L32_LF2
  603  00001604  54000000	nop; not filled.
  604  00001608          	L37_LF2:
  605  00001608  001f0820	add	r1,r0,r31
  606  0000160c  23ffffff	addi	r31,r31,#-1
  607  00001610  70210000	slei	r1,r1,#0
  608  00001614  1020ffd0	beqz	r1,L34_LF2
  609  00001618  54000000	nop; not filled.
  610  0000161c          	L32_LF2:
  611  0000161c  00040820	add	r1,r0,r4
  612  00001620  8fa20000	lw	r2,0(r29)
  613  00001624  8fa30004	lw	r3,4(r29)
  614  00001628  8fa40008	lw	r4,8(r29)
  615  0000162c  8fdffff8	lw	r31,-8(r30)
  616  00001630  001ee820	add	r29,r0,r30
  617  00001634  8fdefffc	lw	r30,-4(r30)
  618  00001638  4be00000	jr	r31
  619  0000163c  54000000	nop
  620  00001640          	.endproc _dstrncpy
  621  00001640          	.align 2
  622  00001640          	.proc _dstrcat
  623  00001640          	.global _dstrcat
  624  00001640          	_dstrcat:
  625                      ;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
  626  00001640  afbefffc	sw	-4(r29),r30; push fp
  627  00001644  001df020	add	r30,r0,r29; fp = sp
  628  00001648  afbffff8	sw	-8(r29),r31; push ret addr
  629  0000164c  2fbd0010	subui	r29,r29,#16; alloc local storage
  630  00001650  afa20000	sw	0(r29),r2
  631  00001654  afa30004	sw	4(r29),r3
  632  00001658  8fdf0000	lw	r31,(r30)
  633  0000165c  001f1820	add	r3,r0,r31
  634  00001660  90610000	lbu	r1,(r3)
  635  00001664  64210000	snei	r1,r1,#0
  636  00001668  10200018	beqz	r1,L50_LF2
  637  0000166c  54000000	nop; not filled.
  638  00001670          	L51_LF2:
  639  00001670  23ff0001	addi	r31,r31,#1
  640  00001674  93e10000	lbu	r1,(r31)
  641  00001678  64210000	snei	r1,r1,#0
  642  0000167c  1420fff0	bnez	r1,L51_LF2
  643  00001680  54000000	nop; not filled.
  644  00001684          	L50_LF2:
  645  00001684  001f1020	add	r2,r0,r31
  646  00001688  8fdf0004	lw	r31,4(r30)
  647  0000168c          	L54_LF2:
  648  0000168c  83e10000	lb	r1,(r31)
  649  00001690  a0410000	sb	(r2),r1
  650  00001694  23ff0001	addi	r31,r31,#1
  651  00001698  20420001	addi	r2,r2,#1
  652  0000169c  302100ff	andi	r1,r1,#0x00ff
  653  000016a0  64210000	snei	r1,r1,#0
  654  000016a4  1420ffe4	bnez	r1,L54_LF2
  655  000016a8  54000000	nop; not filled.
  656  000016ac  00030820	add	r1,r0,r3
  657  000016b0  8fa20000	lw	r2,0(r29)
  658  000016b4  8fa30004	lw	r3,4(r29)
  659  000016b8  8fdffff8	lw	r31,-8(r30)
  660  000016bc  001ee820	add	r29,r0,r30
  661  000016c0  8fdefffc	lw	r30,-4(r30)
  662  000016c4  4be00000	jr	r31
  663  000016c8  54000000	nop
  664  000016cc          	.endproc _dstrcat
  665  000016cc          	.align 2
  666  000016cc          	.proc _dstrncmp
  667  000016cc          	.global _dstrncmp
  668  000016cc          	_dstrncmp:
  669                      ;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
  670  000016cc  afbefffc	sw	-4(r29),r30; push fp
  671  000016d0  001df020	add	r30,r0,r29; fp = sp
  672  000016d4  afbffff8	sw	-8(r29),r31; push ret addr
  673  000016d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  674  000016dc  afa20000	sw	0(r29),r2
  675  000016e0  afa30004	sw	4(r29),r3
  676  000016e4  afa40008	sw	8(r29),r4
  677  000016e8  afa5000c	sw	12(r29),r5
  678  000016ec  8fc30000	lw	r3,(r30)
  679  000016f0  8fc40004	lw	r4,4(r30)
  680  000016f4  8fc50008	lw	r5,8(r30)
  681  000016f8  20020000	addi	r2,r0,#0
  682  000016fc  0045082a	slt	r1,r2,r5
  683  00001700  1020003c	beqz	r1,L73_LF2
  684  00001704  54000000	nop; not filled.
  685  00001708          	L75_LF2:
  686  00001708  909f0000	lbu	r31,(r4)
  687  0000170c  67e10000	snei	r1,r31,#0
  688  00001710  10200038	beqz	r1,L86_LF2
  689  00001714  54000000	nop; not filled.
  690  00001718  90610000	lbu	r1,(r3)
  691  0000171c  003f0829	sne	r1,r1,r31
  692  00001720  1420001c	bnez	r1,L73_LF2
  693  00001724  54000000	nop; not filled.
  694  00001728  20630001	addi	r3,r3,#1
  695  0000172c  20840001	addi	r4,r4,#1
  696  00001730  20420001	addi	r2,r2,#1
  697  00001734  0045082a	slt	r1,r2,r5
  698  00001738  1420ffcc	bnez	r1,L75_LF2
  699  0000173c  54000000	nop; not filled.
  700  00001740          	L73_LF2:
  701  00001740  00450828	seq	r1,r2,r5
  702  00001744  10200010	beqz	r1,L80_LF2
  703  00001748  54000000	nop; not filled.
  704  0000174c          	L86_LF2:
  705  0000174c  20010000	addi	r1,r0,#0
  706  00001750  08000028	j	L84_LF2
  707  00001754  54000000	nop; not filled.
  708  00001758          	L80_LF2:
  709  00001758  907f0000	lbu	r31,(r3)
  710  0000175c  90830000	lbu	r3,(r4)
  711  00001760  03e30822	sub	r1,r31,r3
  712  00001764  74210000	sgei	r1,r1,#0
  713  00001768  2002ffff	addi	r2,r0,#-1
  714  0000176c  10200008	beqz	r1,L82_LF2
  715  00001770  54000000	nop; not filled.
  716  00001774  03e31029	sne	r2,r31,r3
  717  00001778          	L82_LF2:
  718  00001778  00020820	add	r1,r0,r2
  719  0000177c          	L84_LF2:
  720  0000177c  8fa20000	lw	r2,0(r29)
  721  00001780  8fa30004	lw	r3,4(r29)
  722  00001784  8fa40008	lw	r4,8(r29)
  723  00001788  8fa5000c	lw	r5,12(r29)
  724  0000178c  8fdffff8	lw	r31,-8(r30)
  725  00001790  001ee820	add	r29,r0,r30
  726  00001794  8fdefffc	lw	r30,-4(r30)
  727  00001798  4be00000	jr	r31
  728  0000179c  54000000	nop
  729  000017a0          	.endproc _dstrncmp
  730  000017a0          	.align 2
  731  000017a0          	.proc _dstrlen
  732  000017a0          	.global _dstrlen
  733  000017a0          	_dstrlen:
  734                      ;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
  735  000017a0  afbefffc	sw	-4(r29),r30; push fp
  736  000017a4  001df020	add	r30,r0,r29; fp = sp
  737  000017a8  afbffff8	sw	-8(r29),r31; push ret addr
  738  000017ac  2fbd0010	subui	r29,r29,#16; alloc local storage
  739  000017b0  afa20000	sw	0(r29),r2
  740  000017b4  8fdf0000	lw	r31,(r30)
  741  000017b8  20020000	addi	r2,r0,#0
  742  000017bc  08000008	j	L97_LF2
  743  000017c0  54000000	nop; not filled.
  744  000017c4          	L95_LF2:
  745  000017c4  20420001	addi	r2,r2,#1
  746  000017c8          	L97_LF2:
  747  000017c8  93e10000	lbu	r1,(r31)
  748  000017cc  23ff0001	addi	r31,r31,#1
  749  000017d0  64210000	snei	r1,r1,#0
  750  000017d4  1420ffec	bnez	r1,L95_LF2
  751  000017d8  54000000	nop; not filled.
  752  000017dc  00020820	add	r1,r0,r2
  753  000017e0  8fa20000	lw	r2,0(r29)
  754  000017e4  8fdffff8	lw	r31,-8(r30)
  755  000017e8  001ee820	add	r29,r0,r30
  756  000017ec  8fdefffc	lw	r30,-4(r30)
  757  000017f0  4be00000	jr	r31
  758  000017f4  54000000	nop
  759  000017f8          	.endproc _dstrlen
  760  000017f8          	.align 2
  761  000017f8          	.proc _dstrstr
  762  000017f8          	.global _dstrstr
  763  000017f8          	_dstrstr:
  764                      ;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
  765  000017f8  afbefffc	sw	-4(r29),r30; push fp
  766  000017fc  001df020	add	r30,r0,r29; fp = sp
  767  00001800  afbffff8	sw	-8(r29),r31; push ret addr
  768  00001804  2fbd0020	subui	r29,r29,#32; alloc local storage
  769  00001808  afa20000	sw	0(r29),r2
  770  0000180c  afa30004	sw	4(r29),r3
  771  00001810  afa40008	sw	8(r29),r4
  772  00001814  afa5000c	sw	12(r29),r5
  773  00001818  afa60010	sw	16(r29),r6
  774  0000181c  afa70014	sw	20(r29),r7
  775  00001820  8fc50000	lw	r5,(r30)
  776  00001824  8fc70004	lw	r7,4(r30)
  777  00001828  20030000	addi	r3,r0,#0
  778  0000182c  90e10000	lbu	r1,(r7)
  779  00001830  20e20001	addi	r2,r7,#1
  780  00001834  64210000	snei	r1,r1,#0
  781  00001838  1020001c	beqz	r1,L125_LF2
  782  0000183c  54000000	nop; not filled.
  783  00001840          	L126_LF2:
  784  00001840  20630001	addi	r3,r3,#1
  785  00001844  90410000	lbu	r1,(r2)
  786  00001848  20420001	addi	r2,r2,#1
  787  0000184c  64210000	snei	r1,r1,#0
  788  00001850  1420ffec	bnez	r1,L126_LF2
  789  00001854  54000000	nop; not filled.
  790  00001858          	L125_LF2:
  791  00001858  00033020	add	r6,r0,r3
  792  0000185c  080000ac	j	L149_LF2
  793  00001860  54000000	nop; not filled.
  794  00001864          	L130_LF2:
  795  00001864  00051820	add	r3,r0,r5
  796  00001868  00072020	add	r4,r0,r7
  797  0000186c  20020000	addi	r2,r0,#0
  798  00001870  0046082a	slt	r1,r2,r6
  799  00001874  1020003c	beqz	r1,L134_LF2
  800  00001878  54000000	nop; not filled.
  801  0000187c          	L136_LF2:
  802  0000187c  909f0000	lbu	r31,(r4)
  803  00001880  67e10000	snei	r1,r31,#0
  804  00001884  10200038	beqz	r1,L150_LF2
  805  00001888  54000000	nop; not filled.
  806  0000188c  90610000	lbu	r1,(r3)
  807  00001890  003f0829	sne	r1,r1,r31
  808  00001894  1420001c	bnez	r1,L134_LF2
  809  00001898  54000000	nop; not filled.
  810  0000189c  20630001	addi	r3,r3,#1
  811  000018a0  20840001	addi	r4,r4,#1
  812  000018a4  20420001	addi	r2,r2,#1
  813  000018a8  0046082a	slt	r1,r2,r6
  814  000018ac  1420ffcc	bnez	r1,L136_LF2
  815  000018b0  54000000	nop; not filled.
  816  000018b4          	L134_LF2:
  817  000018b4  00460828	seq	r1,r2,r6
  818  000018b8  10200010	beqz	r1,L141_LF2
  819  000018bc  54000000	nop; not filled.
  820  000018c0          	L150_LF2:
  821  000018c0  20010000	addi	r1,r0,#0
  822  000018c4  08000028	j	L132_LF2
  823  000018c8  54000000	nop; not filled.
  824  000018cc          	L141_LF2:
  825  000018cc  90630000	lbu	r3,(r3)
  826  000018d0  90820000	lbu	r2,(r4)
  827  000018d4  00620822	sub	r1,r3,r2
  828  000018d8  74210000	sgei	r1,r1,#0
  829  000018dc  201fffff	addi	r31,r0,#-1
  830  000018e0  10200008	beqz	r1,L143_LF2
  831  000018e4  54000000	nop; not filled.
  832  000018e8  0062f829	sne	r31,r3,r2
  833  000018ec          	L143_LF2:
  834  000018ec  001f0820	add	r1,r0,r31
  835  000018f0          	L132_LF2:
  836  000018f0  64210000	snei	r1,r1,#0
  837  000018f4  14200010	bnez	r1,L131_LF2
  838  000018f8  54000000	nop; not filled.
  839  000018fc  00050820	add	r1,r0,r5
  840  00001900  0800001c	j	L146_LF2
  841  00001904  54000000	nop; not filled.
  842  00001908          	L131_LF2:
  843  00001908  20a50001	addi	r5,r5,#1
  844  0000190c          	L149_LF2:
  845  0000190c  90a10000	lbu	r1,(r5)
  846  00001910  64210000	snei	r1,r1,#0
  847  00001914  1420ff4c	bnez	r1,L130_LF2
  848  00001918  54000000	nop; not filled.
  849  0000191c  20010000	addi	r1,r0,#0
  850  00001920          	L146_LF2:
  851  00001920  8fa20000	lw	r2,0(r29)
  852  00001924  8fa30004	lw	r3,4(r29)
  853  00001928  8fa40008	lw	r4,8(r29)
  854  0000192c  8fa5000c	lw	r5,12(r29)
  855  00001930  8fa60010	lw	r6,16(r29)
  856  00001934  8fa70014	lw	r7,20(r29)
  857  00001938  8fdffff8	lw	r31,-8(r30)
  858  0000193c  001ee820	add	r29,r0,r30
  859  00001940  8fdefffc	lw	r30,-4(r30)
  860  00001944  4be00000	jr	r31
  861  00001948  54000000	nop
  862  0000194c          	.endproc _dstrstr
  863  0000194c          	.align 2
  864  0000194c          	.proc _dmindex
  865  0000194c          	.global _dmindex
  866  0000194c          	_dmindex:
  867                      ;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
  868  0000194c  afbefffc	sw	-4(r29),r30; push fp
  869  00001950  001df020	add	r30,r0,r29; fp = sp
  870  00001954  afbffff8	sw	-8(r29),r31; push ret addr
  871  00001958  2fbd0020	subui	r29,r29,#32; alloc local storage
  872  0000195c  afa20000	sw	0(r29),r2
  873  00001960  afa30004	sw	4(r29),r3
  874  00001964  afa40008	sw	8(r29),r4
  875  00001968  afa5000c	sw	12(r29),r5
  876  0000196c  afa60010	sw	16(r29),r6
  877  00001970  8fc40000	lw	r4,(r30)
  878  00001974  8fc60004	lw	r6,4(r30)
  879  00001978  90810000	lbu	r1,(r4)
  880  0000197c  64210000	snei	r1,r1,#0
  881  00001980  10200060	beqz	r1,L164_LF2
  882  00001984  54000000	nop; not filled.
  883  00001988  00012820	add	r5,r0,r1
  884  0000198c          	L165_LF2:
  885  0000198c  00061020	add	r2,r0,r6
  886  00001990  80df0000	lb	r31,(r6)
  887  00001994  33e100ff	andi	r1,r31,#0x00ff
  888  00001998  64210000	snei	r1,r1,#0
  889  0000199c  1020003c	beqz	r1,L163_LF2
  890  000019a0  54000000	nop; not filled.
  891  000019a4  90830000	lbu	r3,(r4)
  892  000019a8          	L169_LF2:
  893  000019a8  33e100ff	andi	r1,r31,#0x00ff
  894  000019ac  00610828	seq	r1,r3,r1
  895  000019b0  10200010	beqz	r1,L168_LF2
  896  000019b4  54000000	nop; not filled.
  897  000019b8  00040820	add	r1,r0,r4
  898  000019bc  08000028	j	L173_LF2
  899  000019c0  54000000	nop; not filled.
  900  000019c4          	L168_LF2:
  901  000019c4  20420001	addi	r2,r2,#1
  902  000019c8  805f0000	lb	r31,(r2)
  903  000019cc  33e100ff	andi	r1,r31,#0x00ff
  904  000019d0  64210000	snei	r1,r1,#0
  905  000019d4  1420ffd0	bnez	r1,L169_LF2
  906  000019d8  54000000	nop; not filled.
  907  000019dc          	L163_LF2:
  908  000019dc  14a0ffac	bnez	r5,L165_LF2
  909  000019e0  54000000	nop; not filled.
  910  000019e4          	L164_LF2:
  911  000019e4  20010000	addi	r1,r0,#0
  912  000019e8          	L173_LF2:
  913  000019e8  8fa20000	lw	r2,0(r29)
  914  000019ec  8fa30004	lw	r3,4(r29)
  915  000019f0  8fa40008	lw	r4,8(r29)
  916  000019f4  8fa5000c	lw	r5,12(r29)
  917  000019f8  8fa60010	lw	r6,16(r29)
  918  000019fc  8fdffff8	lw	r31,-8(r30)
  919  00001a00  001ee820	add	r29,r0,r30
  920  00001a04  8fdefffc	lw	r30,-4(r30)
  921  00001a08  4be00000	jr	r31
  922  00001a0c  54000000	nop
  923  00001a10          	.endproc _dmindex
  924  00001a10          	.align 2
  925  00001a10          	.proc _dindex
  926  00001a10          	.global _dindex
  927  00001a10          	_dindex:
  928                      ;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
  929  00001a10  afbefffc	sw	-4(r29),r30; push fp
  930  00001a14  001df020	add	r30,r0,r29; fp = sp
  931  00001a18  afbffff8	sw	-8(r29),r31; push ret addr
  932  00001a1c  2fbd0010	subui	r29,r29,#16; alloc local storage
  933  00001a20  afa20000	sw	0(r29),r2
  934  00001a24  afa30004	sw	4(r29),r3
  935  00001a28  8fc20000	lw	r2,(r30)
  936  00001a2c  8fc30004	lw	r3,4(r30)
  937  00001a30  08000024	j	L187_LF2
  938  00001a34  54000000	nop; not filled.
  939  00001a38          	L183_LF2:
  940  00001a38  33e100ff	andi	r1,r31,#0x00ff
  941  00001a3c  00230828	seq	r1,r1,r3
  942  00001a40  10200010	beqz	r1,L184_LF2
  943  00001a44  54000000	nop; not filled.
  944  00001a48  00020820	add	r1,r0,r2
  945  00001a4c  08000020	j	L186_LF2
  946  00001a50  54000000	nop; not filled.
  947  00001a54          	L184_LF2:
  948  00001a54  20420001	addi	r2,r2,#1
  949  00001a58          	L187_LF2:
  950  00001a58  805f0000	lb	r31,(r2)
  951  00001a5c  33e100ff	andi	r1,r31,#0x00ff
  952  00001a60  64210000	snei	r1,r1,#0
  953  00001a64  1420ffd0	bnez	r1,L183_LF2
  954  00001a68  54000000	nop; not filled.
  955  00001a6c  20010000	addi	r1,r0,#0
  956  00001a70          	L186_LF2:
  957  00001a70  8fa20000	lw	r2,0(r29)
  958  00001a74  8fa30004	lw	r3,4(r29)
  959  00001a78  8fdffff8	lw	r31,-8(r30)
  960  00001a7c  001ee820	add	r29,r0,r30
  961  00001a80  8fdefffc	lw	r30,-4(r30)
  962  00001a84  4be00000	jr	r31
  963  00001a88  54000000	nop
  964  00001a8c          	.endproc _dindex
  965  00001a8c          	.align 2
  966  00001a8c          	.proc _ditoa
  967  00001a8c          	.global _ditoa
  968  00001a8c          	_ditoa:
  969                      ;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
  970  00001a8c  afbefffc	sw	-4(r29),r30; push fp
  971  00001a90  001df020	add	r30,r0,r29; fp = sp
  972  00001a94  afbffff8	sw	-8(r29),r31; push ret addr
  973  00001a98  2fbd0020	subui	r29,r29,#32; alloc local storage
  974  00001a9c  afa20000	sw	0(r29),r2
  975  00001aa0  afa30004	sw	4(r29),r3
  976  00001aa4  afa40008	sw	8(r29),r4
  977  00001aa8  afa5000c	sw	12(r29),r5
  978  00001aac  afa60010	sw	16(r29),r6
  979  00001ab0  8fc30000	lw	r3,(r30)
  980  00001ab4  8fc40004	lw	r4,4(r30)
  981  00001ab8  68610000	slti	r1,r3,#0
  982  00001abc  10200010	beqz	r1,L203_LF2
  983  00001ac0  54000000	nop; not filled.
  984  00001ac4  2006002d	addi	r6,r0,(#0x2d)&0xff
  985  00001ac8  08000014	j	L216_LF2
  986  00001acc  54000000	nop; not filled.
  987  00001ad0          	L203_LF2:
  988  00001ad0  64610000	snei	r1,r3,#0
  989  00001ad4  14200018	bnez	r1,L205_LF2
  990  00001ad8  54000000	nop; not filled.
  991  00001adc  20060030	addi	r6,r0,(#0x30)&0xff
  992  00001ae0          	L216_LF2:
  993  00001ae0  a0860000	sb	(r4),r6
  994  00001ae4  20840001	addi	r4,r4,#1
  995  00001ae8  0800007c	j	L204_LF2
  996  00001aec  54000000	nop; not filled.
  997  00001af0          	L205_LF2:
  998  00001af0  201f0001	addi	r31,r0,#1
  999  00001af4  03e3082c	sle	r1,r31,r3
 1000  00001af8  1020001c	beqz	r1,L208_LF2
 1001  00001afc  54000000	nop; not filled.
 1002  00001b00          	L209_LF2:
 1003  00001b00  53e10002	slli	r1,r31,#0x2
 1004  00001b04  003f0820	add	r1,r1,r31
 1005  00001b08  503f0001	slli	r31,r1,#0x1
 1006  00001b0c  03e3082c	sle	r1,r31,r3
 1007  00001b10  1420ffec	bnez	r1,L209_LF2
 1008  00001b14  54000000	nop; not filled.
 1009  00001b18          	L208_LF2:
 1010  00001b18  2005000a	addi	r5,r0,#10
 1011  00001b1c          	L212_LF2:
 1012  00001b1c  03e00035	movi2fp	f0,r31
 1013  00001b20  00a00835	movi2fp	f1,r5
 1014  00001b24  0401000f	div	f0,f0,f1
 1015  00001b28  0000f834	movfp2i	r31,f0
 1016  00001b2c  00600035	movi2fp	f0,r3
 1017  00001b30  03e00835	movi2fp	f1,r31
 1018  00001b34  0401000f	div	f0,f0,f1
 1019  00001b38  00001034	movfp2i	r2,f0
 1020  00001b3c  20410030	addi	r1,r2,#48
 1021  00001b40  a0810000	sb	(r4),r1
 1022  00001b44  20840001	addi	r4,r4,#1
 1023  00001b48  00400035	movi2fp	f0,r2
 1024  00001b4c  03e00835	movi2fp	f1,r31
 1025  00001b50  0401000e	mult	f0,f0,f1
 1026  00001b54  00000834	movfp2i	r1,f0
 1027  00001b58  00611822	sub	r3,r3,r1
 1028  00001b5c  6fe10001	sgti	r1,r31,#1
 1029  00001b60  1420ffb8	bnez	r1,L212_LF2
 1030  00001b64  54000000	nop; not filled.
 1031  00001b68          	L204_LF2:
 1032  00001b68  20060000	addi	r6,r0,(#0x0)&0xff
 1033  00001b6c  a0860000	sb	(r4),r6
 1034  00001b70  8fa20000	lw	r2,0(r29)
 1035  00001b74  8fa30004	lw	r3,4(r29)
 1036  00001b78  8fa40008	lw	r4,8(r29)
 1037  00001b7c  8fa5000c	lw	r5,12(r29)
 1038  00001b80  8fa60010	lw	r6,16(r29)
 1039  00001b84  8fdffff8	lw	r31,-8(r30)
 1040  00001b88  001ee820	add	r29,r0,r30
 1041  00001b8c  8fdefffc	lw	r30,-4(r30)
 1042  00001b90  4be00000	jr	r31
 1043  00001b94  54000000	nop
 1044  00001b98          	.endproc _ditoa
 1045  00001b98          	.align 2
 1046  00001b98          	.proc _dstrtol
 1047  00001b98          	.global _dstrtol
 1048  00001b98          	_dstrtol:
 1049                      ;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
 1050  00001b98  afbefffc	sw	-4(r29),r30; push fp
 1051  00001b9c  001df020	add	r30,r0,r29; fp = sp
 1052  00001ba0  afbffff8	sw	-8(r29),r31; push ret addr
 1053  00001ba4  2fbd0020	subui	r29,r29,#32; alloc local storage
 1054  00001ba8  afa20000	sw	0(r29),r2
 1055  00001bac  afa30004	sw	4(r29),r3
 1056  00001bb0  afa40008	sw	8(r29),r4
 1057  00001bb4  afa5000c	sw	12(r29),r5
 1058  00001bb8  afa60010	sw	16(r29),r6
 1059  00001bbc  8fc20000	lw	r2,(r30)
 1060  00001bc0  8fc50004	lw	r5,4(r30)
 1061  00001bc4  8fc40008	lw	r4,8(r30)
 1062  00001bc8  20030000	addi	r3,r0,#0
 1063  00001bcc  08000008	j	L247_LF2
 1064  00001bd0  54000000	nop; not filled.
 1065  00001bd4          	L220_LF2:
 1066  00001bd4  20420001	addi	r2,r2,#1
 1067  00001bd8          	L247_LF2:
 1068  00001bd8  805f0000	lb	r31,(r2)
 1069  00001bdc  33e100ff	andi	r1,r31,#0x00ff
 1070  00001be0  60210020	seqi	r1,r1,#32
 1071  00001be4  1420ffec	bnez	r1,L220_LF2
 1072  00001be8  54000000	nop; not filled.
 1073  00001bec  23e1fff7	addi	r1,r31,#-9
 1074  00001bf0  302100ff	andi	r1,r1,#0x00ff
 1075  00001bf4  70210001	sleui	r1,r1,#1
 1076  00001bf8  1420ffd8	bnez	r1,L220_LF2
 1077  00001bfc  54000000	nop; not filled.
 1078  00001c00  64a10000	snei	r1,r5,#0
 1079  00001c04  10200008	beqz	r1,L222_LF2
 1080  00001c08  54000000	nop; not filled.
 1081  00001c0c  aca20000	sw	(r5),r2
 1082  00001c10          	L222_LF2:
 1083  00001c10  905f0000	lbu	r31,(r2)
 1084  00001c14  67e10000	snei	r1,r31,#0
 1085  00001c18  10200090	beqz	r1,L248_LF2
 1086  00001c1c  54000000	nop; not filled.
 1087  00001c20  63e1002d	seqi	r1,r31,#45
 1088  00001c24  10200014	beqz	r1,L224_LF2
 1089  00001c28  54000000	nop; not filled.
 1090  00001c2c  2006ffff	addi	r6,r0,#-1
 1091  00001c30  20420001	addi	r2,r2,#1
 1092  00001c34  08000008	j	L225_LF2
 1093  00001c38  54000000	nop; not filled.
 1094  00001c3c          	L224_LF2:
 1095  00001c3c  20060001	addi	r6,r0,#1
 1096  00001c40          	L225_LF2:
 1097  00001c40  64810000	snei	r1,r4,#0
 1098  00001c44  14200054	bnez	r1,L226_LF2
 1099  00001c48  54000000	nop; not filled.
 1100  00001c4c  90410000	lbu	r1,(r2)
 1101  00001c50  60210030	seqi	r1,r1,#48
 1102  00001c54  10200040	beqz	r1,L227_LF2
 1103  00001c58  54000000	nop; not filled.
 1104  00001c5c  20420001	addi	r2,r2,#1
 1105  00001c60  905f0000	lbu	r31,(r2)
 1106  00001c64  63e10078	seqi	r1,r31,#120
 1107  00001c68  14200010	bnez	r1,L229_LF2
 1108  00001c6c  54000000	nop; not filled.
 1109  00001c70  63e10058	seqi	r1,r31,#88
 1110  00001c74  10200014	beqz	r1,L228_LF2
 1111  00001c78  54000000	nop; not filled.
 1112  00001c7c          	L229_LF2:
 1113  00001c7c  20040010	addi	r4,r0,#16
 1114  00001c80  20420001	addi	r2,r2,#1
 1115  00001c84  08000014	j	L226_LF2
 1116  00001c88  54000000	nop; not filled.
 1117  00001c8c          	L228_LF2:
 1118  00001c8c  20040008	addi	r4,r0,#8
 1119  00001c90  08000008	j	L226_LF2
 1120  00001c94  54000000	nop; not filled.
 1121  00001c98          	L227_LF2:
 1122  00001c98  2004000a	addi	r4,r0,#10
 1123  00001c9c          	L226_LF2:
 1124  00001c9c  2081ffff	addi	r1,r4,#-1
 1125  00001ca0  6c21000f	sgtui	r1,r1,#15
 1126  00001ca4  10200010	beqz	r1,L233_LF2
 1127  00001ca8  54000000	nop; not filled.
 1128  00001cac          	L248_LF2:
 1129  00001cac  00030820	add	r1,r0,r3
 1130  00001cb0  080000c4	j	L245_LF2
 1131  00001cb4  54000000	nop; not filled.
 1132  00001cb8          	L233_LF2:
 1133  00001cb8  805f0000	lb	r31,(r2)
 1134  00001cbc  23e1ffd0	addi	r1,r31,#-48
 1135  00001cc0  302100ff	andi	r1,r1,#0x00ff
 1136  00001cc4  70210009	sleui	r1,r1,#9
 1137  00001cc8  10200014	beqz	r1,L236_LF2
 1138  00001ccc  54000000	nop; not filled.
 1139  00001cd0  33e100ff	andi	r1,r31,#0x00ff
 1140  00001cd4  2021ffd0	addi	r1,r1,#-48
 1141  00001cd8  08000050	j	L237_LF2
 1142  00001cdc  54000000	nop; not filled.
 1143  00001ce0          	L236_LF2:
 1144  00001ce0  23e1ff9f	addi	r1,r31,#-97
 1145  00001ce4  302100ff	andi	r1,r1,#0x00ff
 1146  00001ce8  70210019	sleui	r1,r1,#25
 1147  00001cec  10200014	beqz	r1,L238_LF2
 1148  00001cf0  54000000	nop; not filled.
 1149  00001cf4  33e100ff	andi	r1,r31,#0x00ff
 1150  00001cf8  2021ffa9	addi	r1,r1,#-87
 1151  00001cfc  0800002c	j	L237_LF2
 1152  00001d00  54000000	nop; not filled.
 1153  00001d04          	L238_LF2:
 1154  00001d04  23e1ffbf	addi	r1,r31,#-65
 1155  00001d08  302100ff	andi	r1,r1,#0x00ff
 1156  00001d0c  70210019	sleui	r1,r1,#25
 1157  00001d10  10200014	beqz	r1,L240_LF2
 1158  00001d14  54000000	nop; not filled.
 1159  00001d18  33e100ff	andi	r1,r31,#0x00ff
 1160  00001d1c  2021ffc9	addi	r1,r1,#-55
 1161  00001d20  08000008	j	L237_LF2
 1162  00001d24  54000000	nop; not filled.
 1163  00001d28          	L240_LF2:
 1164  00001d28  200103e8	addi	r1,r0,#1000
 1165  00001d2c          	L237_LF2:
 1166  00001d2c  0024f82a	slt	r31,r1,r4
 1167  00001d30  13e00024	beqz	r31,L246_LF2
 1168  00001d34  54000000	nop; not filled.
 1169  00001d38  00600035	movi2fp	f0,r3
 1170  00001d3c  00800835	movi2fp	f1,r4
 1171  00001d40  0401000e	mult	f0,f0,f1
 1172  00001d44  00001834	movfp2i	r3,f0
 1173  00001d48  00611820	add	r3,r3,r1
 1174  00001d4c  20420001	addi	r2,r2,#1
 1175  00001d50  17e0ff64	bnez	r31,L233_LF2
 1176  00001d54  54000000	nop; not filled.
 1177  00001d58          	L246_LF2:
 1178  00001d58  64a10000	snei	r1,r5,#0
 1179  00001d5c  10200008	beqz	r1,L244_LF2
 1180  00001d60  54000000	nop; not filled.
 1181  00001d64  aca20000	sw	(r5),r2
 1182  00001d68          	L244_LF2:
 1183  00001d68  00600035	movi2fp	f0,r3
 1184  00001d6c  00c00835	movi2fp	f1,r6
 1185  00001d70  0401000e	mult	f0,f0,f1
 1186  00001d74  00000834	movfp2i	r1,f0
 1187  00001d78          	L245_LF2:
 1188  00001d78  8fa20000	lw	r2,0(r29)
 1189  00001d7c  8fa30004	lw	r3,4(r29)
 1190  00001d80  8fa40008	lw	r4,8(r29)
 1191  00001d84  8fa5000c	lw	r5,12(r29)
 1192  00001d88  8fa60010	lw	r6,16(r29)
 1193  00001d8c  8fdffff8	lw	r31,-8(r30)
 1194  00001d90  001ee820	add	r29,r0,r30
 1195  00001d94  8fdefffc	lw	r30,-4(r30)
 1196  00001d98  4be00000	jr	r31
 1197  00001d9c  54000000	nop
 1198  00001da0          	.endproc _dstrtol
 1199  00001da0          	.align 2
 1200  00001da0          	.proc _bcopy
 1201  00001da0          	.global _bcopy
 1202  00001da0          	_bcopy:
 1203                      ;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
 1204  00001da0  afbefffc	sw	-4(r29),r30; push fp
 1205  00001da4  001df020	add	r30,r0,r29; fp = sp
 1206  00001da8  afbffff8	sw	-8(r29),r31; push ret addr
 1207  00001dac  2fbd0018	subui	r29,r29,#24; alloc local storage
 1208  00001db0  afa20000	sw	0(r29),r2
 1209  00001db4  afa30004	sw	4(r29),r3
 1210  00001db8  afa40008	sw	8(r29),r4
 1211  00001dbc  8fc30000	lw	r3,(r30)
 1212  00001dc0  8fc20004	lw	r2,4(r30)
 1213  00001dc4  8fdf0008	lw	r31,8(r30)
 1214  00001dc8  08000014	j	L259_LF2
 1215  00001dcc  54000000	nop; not filled.
 1216  00001dd0          	L257_LF2:
 1217  00001dd0  80640000	lb	r4,(r3)
 1218  00001dd4  a0440000	sb	(r2),r4
 1219  00001dd8  20630001	addi	r3,r3,#1
 1220  00001ddc  20420001	addi	r2,r2,#1
 1221  00001de0          	L259_LF2:
 1222  00001de0  001f0820	add	r1,r0,r31
 1223  00001de4  23ffffff	addi	r31,r31,#-1
 1224  00001de8  6c210000	sgti	r1,r1,#0
 1225  00001dec  1420ffe0	bnez	r1,L257_LF2
 1226  00001df0  54000000	nop; not filled.
 1227  00001df4  8fa20000	lw	r2,0(r29)
 1228  00001df8  8fa30004	lw	r3,4(r29)
 1229  00001dfc  8fa40008	lw	r4,8(r29)
 1230  00001e00  8fdffff8	lw	r31,-8(r30)
 1231  00001e04  001ee820	add	r29,r0,r30
 1232  00001e08  8fdefffc	lw	r30,-4(r30)
 1233  00001e0c  4be00000	jr	r31
 1234  00001e10  54000000	nop
 1235  00001e14          	.endproc _bcopy
 1236  00001e14          	.align 2
 1237  00001e14          	.proc _bzero
 1238  00001e14          	.global _bzero
 1239  00001e14          	_bzero:
 1240                      ;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
 1241  00001e14  afbefffc	sw	-4(r29),r30; push fp
 1242  00001e18  001df020	add	r30,r0,r29; fp = sp
 1243  00001e1c  afbffff8	sw	-8(r29),r31; push ret addr
 1244  00001e20  2fbd0010	subui	r29,r29,#16; alloc local storage
 1245  00001e24  afa20000	sw	0(r29),r2
 1246  00001e28  afa30004	sw	4(r29),r3
 1247  00001e2c  8fc20000	lw	r2,(r30)
 1248  00001e30  8fdf0004	lw	r31,4(r30)
 1249  00001e34  08000010	j	L270_LF2
 1250  00001e38  54000000	nop; not filled.
 1251  00001e3c          	L268_LF2:
 1252  00001e3c  20030000	addi	r3,r0,(#0x0)&0xff
 1253  00001e40  a0430000	sb	(r2),r3
 1254  00001e44  20420001	addi	r2,r2,#1
 1255  00001e48          	L270_LF2:
 1256  00001e48  001f0820	add	r1,r0,r31
 1257  00001e4c  23ffffff	addi	r31,r31,#-1
 1258  00001e50  6c210000	sgti	r1,r1,#0
 1259  00001e54  1420ffe4	bnez	r1,L268_LF2
 1260  00001e58  54000000	nop; not filled.
 1261  00001e5c  8fa20000	lw	r2,0(r29)
 1262  00001e60  8fa30004	lw	r3,4(r29)
 1263  00001e64  8fdffff8	lw	r31,-8(r30)
 1264  00001e68  001ee820	add	r29,r0,r30
 1265  00001e6c  8fdefffc	lw	r30,-4(r30)
 1266  00001e70  4be00000	jr	r31
 1267  00001e74  54000000	nop
 1268  00001e78          	.endproc _bzero
 1269                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1270                      ;;;
 1271                      ;;; Most of the traps are called in files from libtraps.
 1274  00001e78          	.align 2
 1275  00001e78          	.proc _exit
 1276  00001e78          	.global _exit
 1277  00001e78          	_exit:
 1278  00001e78  44000300	trap	#0x300
 1279  00001e7c  4be00000	jr	r31
 1280  00001e80  54000000	nop
 1281  00001e84          	.endproc _exit
 1283                      ; for the benefit of gcc.
 1284  00001e84          	.proc ___main
 1285  00001e84          	.global ___main
 1286  00001e84          	___main:
 1287  00001e84  4be00000	jr	r31
 1288  00001e88  54000000	nop
 1289  00001e8c          	.endproc ___main
 1290  00001e8c          	.text
 1291  00001e8c          	.global _etext
 1292  00001e8c          	_etext:
 1293  00001e8c          	.align 3
 1294  00001e90          	.data
 1295  00002063          	.global _edata
 1296  00002063          	_edata:
