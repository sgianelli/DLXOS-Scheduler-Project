; Linked by DLX-LD.
; MemSize 106496
; Data size: 38692
; Text size: 49736
; Stack size: 8192
.text 0x1000
.data 0xe000
;;; 
;;; Initialization code for programs running in the DLX simulator.
;;; Copyright (c) 1999 by Ethan Miller
;;; 
;;;

.text
.align 2

;;;----------------------------------------------------------------------
;;; osinit
;;;
;;; This is the first function called by the simulator, even before main.
;;; Since it's called BEFORE any "real" routines, we can use any registers
;;; we want as long as we don't mess up the stack or frame pointers.
;;;
;;; This routine loads the interrupt vector to point to the interrupt
;;; handler later in this file.  It should never return, because _main
;;; should call exitsim() or exit() rather than returning here.
;;; 
;;; After initialization is done, this routine jumps to _main to start the
;;; C code portion of the operating system.
;;;----------------------------------------------------------------------
.proc _osinit
.global _osinit
_osinit:
;; Set up the interrupt handler
	lhi	r1,(_intrhandler>>16)&0xffff
	addui	r1,r1,_intrhandler&0xffff
	movi2s	intrvec,r1
;; Never returns because exitsim is called first
	j	_main
.endproc _osinit

;;;----------------------------------------------------------------------
;;; intrhandler
;;;
;;; Called when an interrupt or trap is received by the CPU.  It stores the
;;; current register set on the system stack.  It then pushes the parameters
;;; to the C interrupt handler onto the stack: the ISR, IAR, and CAUSE
;;; registers along with the original stack pointer.  The C interrupt
;;; handler can then copy arguments from the original stack, performing
;;; user -> system translations if necessary.
;;; 
;;;----------------------------------------------------------------------
.proc _intrhandler
.global _intrhandler
_intrhandler:
;; We can use r31 as scratch space because its value was saved in
;; ir31.  However, we must save the "real" value of r31 on the
;; stack.

;; Always store the registers on the system stack.  This way, we don't
;; have to worry about translating things from user -> system.  We
;; use r31 as the base register because its value was saved in ir31.

;; If this was a user process, load r29 with the current system
;; stack pointer.  If it was a system process, just use the
;; current stack pointer.
	movs2i	r31,isr
	andi	r31,r31,0x40
	bnez	r31,intrSystem_LF0
	lhi	r31,(_currentPCB>>16)&0xffff
	addui	r31,r31,_currentPCB&0xffff
	lw	r31,(r31)
	lw	r31,4(r31)
;; Save the original (user) stack pointer
	sw	-184(r31),r29; we haven't yet bumped SP, and 156-340 = -184
;; Copy the system stack pointer into r29 (current stack pointer)
	ori	r29,r31,0
	beqz	r0,intrSaveReg_LF0; skip over the system part....
intrSystem_LF0:
;; Use the stack pointer we're already using
;; Save r29 because we won't save it later
	sw	-184(r29),r29; we haven't yet bumped SP, and 156-340 = -184
intrSaveReg_LF0:
;; Adjust stack pointer for all the stuff we're going to push.  This
;; is a bit more space than we need currently, but it leaves room
;; for more stuff if needed.
	subui	r29,r29,#340
;; Push all the stuff onto the stack
	sw	44(r29),r1
	sw	48(r29),r2
	sw	52(r29),r3
	sw	56(r29),r4
	sw	60(r29),r5
	sw	64(r29),r6
	sw	68(r29),r7
	sw	72(r29),r8
	sw	76(r29),r9
	sw	80(r29),r10
	sw	84(r29),r11
	sw	88(r29),r12
	sw	92(r29),r13
	sw	96(r29),r14
	sw	100(r29),r15
	sw	104(r29),r16
	sw	108(r29),r17
	sw	112(r29),r18
	sw	116(r29),r19
	sw	120(r29),r20
	sw	124(r29),r21
	sw	128(r29),r22
	sw	132(r29),r23
	sw	136(r29),r24
	sw	140(r29),r25
	sw	144(r29),r26
	sw	148(r29),r27
	sw	152(r29),r28
;; Skip r29 - stored earlier!
	sw	160(r29),r30
;; Load the value of r31 from the special register and then save it
	movs2i	r3,ir31
	sw	164(r29),r3
;; Store the floating-point registers
	sd	168(r29),f0
	sd	176(r29),f2
	sd	184(r29),f4
	sd	192(r29),f6
	sd	200(r29),f8
	sd	208(r29),f10
	sd	216(r29),f12
	sd	224(r29),f14
	sd	232(r29),f16
	sd	240(r29),f18
	sd	248(r29),f20
	sd	256(r29),f22
	sd	264(r29),f24
	sd	272(r29),f26
	sd	280(r29),f28
	sd	288(r29),f30
;; NOTE: we don't save the interrupt vector register because it
;; doesn't change from process to process.
;; NOTE: we don't save the status register because most of the flags
;; are the same from process to process if they're in the interrupt
;; handler.  Of course, we DO save the ISR.
	movs2i	r4,iar
	sw	296(r29),r4
	movs2i	r5,isr
	sw	300(r29),r5
	movs2i	r6,cause
	sw	304(r29),r6
	movs2i	r3,fault
	sw	308(r29),r3
	movs2i	r3,ptbase
	sw	312(r29),r3
	movs2i	r3,ptsize
	sw	316(r29),r3
	movs2i	r3,ptbits
	sw	320(r29),r3

;; Push the interrupt information onto the stack
	sw	0(r29),r6; push CAUSE
	sw	4(r29),r4; push IAR
	sw	8(r29),r5; push ISR
;; Get the original stack pointer
	lw	r1,156(r29)
	sw	12(r29),r1
;; Save the previous interrupt stack frame address in the current frame
	lhi	r1,(_currentPCB>>16)&0xffff
	addui	r1,r1,_currentPCB&0xffff
	lw	r1,(r1)
	lw	r2,0(r1)
	sw	40(r29),r2
;; Save this frame address in the PCB.  This is used so the OS can
;; easily access the current interrupt save frame
	sw	0(r1),r29
;; Call the "real" interrupt handler.  This will possibly switch
;; contexts.  This call never returns; instead, a separate routine
;; (_intrreturn) is called to return from interrupts after restoring
;; the current context.
	j	_dointerrupt
	nop
.endproc _intrhandler

;;;----------------------------------------------------------------------
;;; intrreturn
;;;
;;; Return from an interrupt or trap.  This restores all of the previously
;;; saved registers and then returns to where the program left off.  The
;;; current contents of the registers are destroyed.  This routine uses
;;; the saved interrupt frame pointer, so the stack pointer need not
;;; be correct.  Note, though, that the register contents from the previous
;;; process must have previously been saved - in other words, call this
;;; routine from a trap or interrupt handler.
;;;----------------------------------------------------------------------
.proc _intrreturn
.global _intrreturn
_intrreturn:
;; Disable interrupts - this routine must be atomic, and interrupts
;; may not be currently disabled.  Don't worry about saving registers
;; because we're about to reload them anyway.
	jal	_DisableIntrs
;; Get our interrupt stack frame location and load it into the stack
;; pointer.
	lhi	r1,(_currentPCB>>16)&0xffff
	addui	r1,r1,_currentPCB&0xffff
	lw	r1,0(r1)
	lw	r29,0(r1)
;; Get the previous interrupt stack frame location and make it the
;; current interrupt save frame.
	lw	r2,40(r29)
	sw	0(r1),r2

;; Reload the registers for the new process.  We don't have to
;; load in the exact opposite order as long as we're careful to
;; get the right values back in.
	lw	r3,296(r29)
	movi2s	iar,r3
	lw	r3,300(r29)
	movi2s	isr,r3
	lw	r3,304(r29)
	movi2s	cause,r3
	lw	r3,308(r29)
	movi2s	fault,r3
	lw	r3,312(r29)
	movi2s	ptbase,r3
	lw	r3,316(r29)
	movi2s	ptsize,r3
	lw	r3,320(r29)
	movi2s	ptbits,r3

;; Reload the floating point registers
	ld	f0,168(r29)
	ld	f2,176(r29)
	ld	f4,184(r29)
	ld	f6,192(r29)
	ld	f8,200(r29)
	ld	f10,208(r29)
	ld	f12,216(r29)
	ld	f14,224(r29)
	ld	f16,232(r29)
	ld	f18,240(r29)
	ld	f20,248(r29)
	ld	f22,256(r29)
	ld	f24,264(r29)
	ld	f26,272(r29)
	ld	f28,280(r29)
	ld	f30,288(r29)

;; Reload the integer registers.  We don't reload r0 because it's
;; always 0.  We won't reload r29 here because we're using it as
;; the stack pointer.  The same goes for r1, which we'll use as
;; scratch so we can store r29.
;; Skip r1 - restored later
	lw	r2,48(r29)
	lw	r3,52(r29)
	lw	r4,56(r29)
	lw	r5,60(r29)
	lw	r6,64(r29)
	lw	r7,68(r29)
	lw	r8,72(r29)
	lw	r9,76(r29)
	lw	r10,80(r29)
	lw	r11,84(r29)
	lw	r12,88(r29)
	lw	r13,92(r29)
	lw	r14,96(r29)
	lw	r15,100(r29)
	lw	r16,104(r29)
	lw	r17,108(r29)
	lw	r18,112(r29)
	lw	r19,116(r29)
	lw	r20,120(r29)
	lw	r21,124(r29)
	lw	r22,128(r29)
	lw	r23,132(r29)
	lw	r24,136(r29)
	lw	r25,140(r29)
	lw	r26,144(r29)
	lw	r27,148(r29)
	lw	r28,152(r29)
;; Skip r29 - restored later
	lw	r30,160(r29)
	lw	r31,164(r29)

	addui	r29,r29,#340
;; Save the current value of the stack pointer after adjusting it
;; Note that this will "destroy" the stack values below this interrupt
;; stack frame.  This is exactly what we want!
	sw	4(r1),r29
	ori	r1,r29,#0
	lw	r29,-184(r1); 156-340 = -184
	lw	r1,-296(r1); 44-340 = -296
	rfe
.endproc _intrreturn

;;;----------------------------------------------------------------------
;;; SetIntrs
;;;
;;; This routine sets the interrupt level to the value passed (0 -> all
;;; interrupts enabled; 0xf -> all interrupts disabled).  It returns the
;;; former value for the interrupt flags.
;;;----------------------------------------------------------------------
.proc _SetIntrs
.global _SetIntrs
_SetIntrs:
	subui	r29,r29,#16
	sw	12(r29),r2; save r2
	lw	r2,16(r29); Get the new interrupt level
	andi	r2,r2,#0x0f; Mask off interrupt levels
	movs2i	r1,status
	sw	8(r29),r1; Store the old interrupt values
	andi	r1,r1,#0xfff0; Mask off old interrupt level
	or	r1,r2,r1; OR in new interrupt level
	movi2s	status,r1
	lw	r1,8(r29); Get back the original interrupt level
	andi	r1,r1,#0x0f; Mask off all but interrupt levels
	lw	r2,12(r29); restore r2
	addui	r29,r29,#16; restore stack pointer
	jr	r31
	nop
.endproc _SetIntrs

.proc _CurrentIntrs
.global _CurrentIntrs
_CurrentIntrs:
	movs2i	r1,status
	andi	r1,r1,#0xf
	jr	r31
	nop
.endproc _CurrentIntrs
;;;----------------------------------------------------------------------
;;; _ProcessSleep
;;;
;;; If a context switch from elsewhere in the kernel is desired, take a
;;; trap and call this routine from the trap handler.
;;;----------------------------------------------------------------------
.proc _ProcessSleep
.global _ProcessSleep
_ProcessSleep:
	trap	#0x410; This is a process sleep trap
	nop
	jr	r31
	nop
.endproc _ProcessSleep
;
; Stub functions for DLX traps.
;
; Aaron Sawdey 1996; released to the Public Domain.
;

.align 2
.proc _random
.global _random
_random:
	trap	#0x2020
	jr	r31
	nop
.endproc _random

.proc _srandom
.global _srandom
_srandom:
	trap	#0x2021
	jr	r31
	nop
.endproc _srandom

; I know this is not the right place to put it, but what the heck

.proc _timerget
.global _timerget
_timerget:
	trap	#0x2002
	jr	r31
	nop
.endproc _timerget

; Compiled by GCC

.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r2,3(r30)
	addi	r31,r0,#0
	andi	r1,r2,#0x00ff
	seqi	r1,r1,#32
	bnez	r1,L6_LF2
	nop; not filled.
	addi	r1,r2,#-9
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#1
	beqz	r1,L5_LF2
	nop; not filled.
L6_LF2:
	addi	r31,r0,#1
L5_LF2:
	add	r1,r0,r31
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r31,3(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	bnez	r1,L12_LF2
	nop; not filled.
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#5
	bnez	r1,L12_LF2
	nop; not filled.
	andi	r1,r31,#0x00ff
	snei	r1,r1,#65
	bnez	r1,L11_LF2
	nop; not filled.
L12_LF2:
	addi	r2,r0,#1
L11_LF2:
	add	r1,r0,r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#15
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#0
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	lw	r2,(r30)
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.align 2
.proc _QueueLinkInit
.global _QueueLinkInit
_QueueLinkInit:
;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	lw	r2,4(r30)
	addi	r31,r0,#0
	sw	(r1),r31
	sw	12(r1),r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLinkInit
.align 2
.proc _QueueNext
.global _QueueNext
_QueueNext:
;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueNext
.align 2
.proc _QueuePrev
.global _QueuePrev
_QueuePrev:
;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueuePrev
.align 2
.proc _QueueFirst
.global _QueueFirst
_QueueFirst:
;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueFirst
.align 2
.proc _QueueLast
.global _QueueLast
_QueueLast:
;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLast
.align 2
.proc _QueueInsertAfter
.global _QueueInsertAfter
_QueueInsertAfter:
;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r2,4(r30)
	lw	r1,8(r30)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertAfter
.align 2
.proc _QueueInsertFirst
.global _QueueInsertFirst
_QueueInsertFirst:
;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	sw	8(r1),r3
	sw	4(r1),r3
	lw	r31,(r3)
	sw	(r1),r31
	sw	(r3),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertFirst
.align 2
.proc _QueueInsertLast
.global _QueueInsertLast
_QueueInsertLast:
;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	lw	r2,4(r3)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertLast
.align 2
.proc _QueueRemove
.global _QueueRemove
_QueueRemove:
;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	lw	r1,8(r31)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L44_LF2
	nop; not filled.
	lw	r1,4(r31)
	lw	r3,(r31)
	sw	(r1),r3
	lw	r1,(r31)
	lw	r3,4(r31)
	sw	4(r1),r3
	lw	r2,8(r31)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L44_LF2:
	addi	r3,r0,#0
	sw	(r31),r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueRemove
.align 2
.proc _QueueLength
.global _QueueLength
_QueueLength:
;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLength
.align 2
.proc _QueueEmpty
.global _QueueEmpty
_QueueEmpty:
;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	seqi	r1,r1,#0
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueEmpty
.data
.align 2
LC0_LF2:
.ascii "Entering ProcessModuleInit\n\000"
.align 2
LC1_LF2:
.ascii "Leaving ProcessModuleInit\n\000"
.text
.align 2
.proc _ShareModuleInit
.global _ShareModuleInit
_ShareModuleInit:
;  Function 'ShareModuleInit'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r5,r0,#112
	sw	4(r29),r5
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L64_LF2
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r5,r0,#43
	sw	4(r29),r5
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L63_LF2
	nop; not filled.
L64_LF2:
	addi	r29,r29,#-8
	lhi	r5,((LC0_LF2)>>16)&0xffff
	addui	r5,r5,(LC0_LF2)&0xffff
	sw	(r29),r5
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L63_LF2:
	lhi	r2,((_spages_LF2)>>16)&0xffff
	addui	r2,r2,(_spages_LF2)&0xffff
	addi	r4,r2,#248
L68_LF2:
	addi	r5,r0,#0
	sw	(r2),r5
	add	r31,r0,r2
	add	r3,r0,r2
L72_LF2:
	addi	r1,r31,#4
	addi	r5,r0,#0
	sw	(r1),r5
	add	r31,r0,r1
	sle	r1,r31,r3
	bnez	r1,L72_LF2
	nop; not filled.
	addi	r2,r2,#8
	sle	r1,r2,r4
	bnez	r1,L68_LF2
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r5,r0,#112
	sw	4(r29),r5
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L76_LF2
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r5,r0,#43
	sw	4(r29),r5
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L75_LF2
	nop; not filled.
L76_LF2:
	addi	r29,r29,#-8
	lhi	r5,((LC1_LF2)>>16)&0xffff
	addui	r5,r5,(LC1_LF2)&0xffff
	sw	(r29),r5
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L75_LF2:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ShareModuleInit
.data
.align 2
LC2_LF2:
.ascii "FATAL: couldn\'t allocate memory - no free pages!\n\000"
.text
.align 2
.proc _MemoryCreateSharedPage
.global _MemoryCreateSharedPage
_MemoryCreateSharedPage:
;  Function 'MemoryCreateSharedPage'; 0 bytes of locals, 9 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#48; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	sw	28(r29),r9
	sw	32(r29),r10
	lw	r6,(r30)
	addi	r29,r29,#-8
	sw	(r29),r6
	jal	_findpid
	nop; not filled.
	add	r5,r0,r1
	srli	r8,r5,#0x5
	slli	r1,r8,#0x5
	sub	r5,r5,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	addi	r10,r0,#15
	sw	(r29),r10
	jal	_SetIntrs
	nop; not filled.
	add	r7,r0,r1
	addi	r29,r29,#8
	lw	r1,160(r6)
	seqi	r1,r1,#16
	bnez	r1,L92_LF2
	nop; not filled.
	addi	r3,r0,#0
	lhi	r9,((_spages_LF2)>>16)&0xffff
	addui	r9,r9,(_spages_LF2)&0xffff
	add	r2,r0,r9
L84_LF2:
	lw	r1,(r2)
	snei	r1,r1,#0
	beqz	r1,L82_LF2
	nop; not filled.
	addi	r2,r2,#8
	addi	r3,r3,#1
	slei	r1,r3,#31
	bnez	r1,L84_LF2
	nop; not filled.
L82_LF2:
	seqi	r1,r3,#32
	beqz	r1,L87_LF2
	nop; not filled.
L92_LF2:
	addi	r29,r29,#-8
	sw	(r29),r7
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	addi	r1,r0,#0
	j	L91_LF2
	nop; not filled.
L87_LF2:
	jal	_MemoryAllocPage
	nop; not filled.
	add	r4,r0,r1
	snei	r1,r4,#0
	bnez	r1,L89_LF2
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r10,((LC2_LF2)>>16)&0xffff
	addui	r10,r10,(LC2_LF2)&0xffff
	sw	(r29),r10
	jal	_printf
	nop; not filled.
	jal	_exitsim
	nop; not filled.
	addi	r29,r29,#8
L89_LF2:
	slli	r1,r3,#0x3
	add	r2,r1,r9
	sw	(r2),r4
	slli	r1,r8,#0x2
	add	r2,r1,r2
	addi	r1,r0,#1
	sll	r1,r1,r5
	sw	4(r2),r1
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_MemorySetupPte
	nop; not filled.
	lw	r2,160(r6)
	slli	r2,r2,#0x2
	add	r2,r2,r6
	sw	96(r2),r1
	lw	r1,160(r6)
	addi	r2,r1,#1
	sw	160(r6),r2
	lw	r1,8(r6)
	addui	r1,r1,#65164
	sw	316(r1),r2
	addi	r29,r29,#8
	addi	r29,r29,#-8
	sw	(r29),r7
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	add	r1,r0,r4
L91_LF2:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r9,28(r29)
	lw	r10,32(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryCreateSharedPage
.align 2
.proc _mmap
.global _mmap
_mmap:
;  Function 'mmap'; 0 bytes of locals, 9 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#48; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	sw	28(r29),r9
	sw	32(r29),r10
	lw	r6,(r30)
	lw	r7,4(r30)
	snei	r1,r7,#0
	bnez	r1,L94_LF2
	nop; not filled.
	addi	r1,r0,#0
	j	L115_LF2
	nop; not filled.
L94_LF2:
	lw	r1,8(r6)
	addui	r9,r1,#65164
	addi	r29,r29,#-8
	addi	r10,r0,#15
	sw	(r29),r10
	jal	_SetIntrs
	nop; not filled.
	add	r8,r0,r1
	addi	r29,r29,#8
	addi	r3,r0,#0
	lhi	r2,((_spages_LF2)>>16)&0xffff
	addui	r2,r2,(_spages_LF2)&0xffff
L99_LF2:
	lw	r1,(r2)
	seq	r1,r1,r7
	bnez	r1,L97_LF2
	nop; not filled.
	addi	r2,r2,#8
	addi	r3,r3,#1
	sleui	r1,r3,#31
	bnez	r1,L99_LF2
	nop; not filled.
L97_LF2:
	seqi	r1,r3,#32
	bnez	r1,L116_LF2
	nop; not filled.
	slli	r31,r7,#0x10
	addi	r5,r0,#0
	lw	r4,160(r6)
	slt	r1,r5,r4
	beqz	r1,L105_LF2
	nop; not filled.
	add	r2,r0,r6
L107_LF2:
	lw	r1,96(r2)
	addi	r10,r0,#-8
	and	r1,r1,r10
	seq	r1,r1,r31
	bnez	r1,L105_LF2
	nop; not filled.
	addi	r2,r2,#4
	addi	r5,r5,#1
	slt	r1,r5,r4
	bnez	r1,L107_LF2
	nop; not filled.
L105_LF2:
	lw	r2,160(r6)
	seq	r1,r5,r2
	beqz	r1,L110_LF2
	nop; not filled.
	slei	r1,r2,#15
	bnez	r1,L111_LF2
	nop; not filled.
L116_LF2:
	addi	r29,r29,#-8
	sw	(r29),r8
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	addi	r1,r0,#0
	j	L115_LF2
	nop; not filled.
L111_LF2:
	addi	r29,r29,#-8
	sw	(r29),r7
	jal	_MemorySetupPte
	nop; not filled.
	lw	r2,160(r6)
	slli	r2,r2,#0x2
	add	r2,r2,r6
	sw	96(r2),r1
	lw	r1,160(r6)
	addi	r1,r1,#1
	sw	160(r6),r1
	sw	316(r9),r1
	addi	r29,r29,#8
L110_LF2:
	addi	r29,r29,#-8
	sw	(r29),r6
	jal	_findpid
	nop; not filled.
	add	r2,r0,r1
	srli	r4,r2,#0x5
	slli	r1,r4,#0x5
	sub	r2,r2,r1
	slli	r3,r3,#0x3
	slli	r1,r4,#0x2
	add	r1,r3,r1
	lhi	r10,((_spages_LF2+4)>>16)&0xffff
	addui	r10,r10,(_spages_LF2+4)&0xffff
	add	r3,r1,r10
	addi	r1,r0,#1
	sll	r2,r1,r2
	lw	r1,(r3)
	or	r1,r1,r2
	sw	(r3),r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	sw	(r29),r8
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	slli	r1,r5,#0x10
L115_LF2:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r9,28(r29)
	lw	r10,32(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _mmap
.data
.align 2
LC3_LF2:
.ascii "FATAL: Attempted to free memory page 0\n\000"
.text
.align 2
.proc _MemoryFreeSharedPte
.global _MemoryFreeSharedPte
_MemoryFreeSharedPte:
;  Function 'MemoryFreeSharedPte'; 0 bytes of locals, 9 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#48; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	sw	28(r29),r9
	sw	32(r29),r10
	lw	r8,(r30)
	lw	r2,4(r30)
	addi	r29,r29,#-8
	addi	r10,r0,#15
	sw	(r29),r10
	jal	_SetIntrs
	nop; not filled.
	add	r9,r0,r1
	addi	r29,r29,#8
	slli	r1,r2,#0x2
	add	r1,r1,r8
	lhu	r7,96(r1)
	snei	r1,r7,#0
	bnez	r1,L119_LF2
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r10,((LC3_LF2)>>16)&0xffff
	addui	r10,r10,(LC3_LF2)&0xffff
	sw	(r29),r10
	jal	_printf
	nop; not filled.
	jal	_exitsim
	nop; not filled.
	addi	r29,r29,#8
L119_LF2:
	addi	r4,r0,#0
	lhi	r5,((_spages_LF2)>>16)&0xffff
	addui	r5,r5,(_spages_LF2)&0xffff
	add	r2,r0,r5
L123_LF2:
	lw	r1,(r2)
	seq	r1,r1,r7
	bnez	r1,L121_LF2
	nop; not filled.
	addi	r2,r2,#8
	addi	r4,r4,#1
	slei	r1,r4,#31
	bnez	r1,L123_LF2
	nop; not filled.
L121_LF2:
	seqi	r1,r4,#32
	beqz	r1,L126_LF2
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r9
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L141_LF2
	nop; not filled.
L126_LF2:
	addi	r29,r29,#-8
	sw	(r29),r8
	jal	_findpid
	nop; not filled.
	add	r2,r0,r1
	srli	r3,r1,#0x5
	slli	r1,r3,#0x5
	sub	r2,r2,r1
	slli	r1,r4,#0x3
	add	r4,r1,r5
	slli	r1,r3,#0x2
	add	r1,r1,r4
	addi	r3,r1,#4
	addi	r1,r0,#1
	sll	r1,r1,r2
	addi	r10,r0,#-1
	xor	r2,r1,r10
	lw	r1,(r3)
	and	r1,r1,r2
	sw	(r3),r1
	addi	r29,r29,#8
	addi	r6,r0,#0
	addi	r5,r0,#0
L132_LF2:
	addi	r3,r0,#1
	addi	r2,r0,#0
	lw	r31,4(r4)
L136_LF2:
	and	r1,r31,r3
	snei	r1,r1,#0
	add	r6,r6,r1
	slli	r3,r3,#0x1
	addi	r2,r2,#1
	slei	r1,r2,#31
	bnez	r1,L136_LF2
	nop; not filled.
	addi	r4,r4,#4
	addi	r5,r5,#1
	slei	r1,r5,#0
	bnez	r1,L132_LF2
	nop; not filled.
	lw	r1,160(r8)
	addi	r2,r1,#-1
	sw	160(r8),r2
	lw	r1,8(r8)
	addui	r1,r1,#65164
	sw	316(r1),r2
	snei	r1,r6,#0
	bnez	r1,L139_LF2
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r7
	jal	_MemoryFreePage
	nop; not filled.
	addi	r29,r29,#8
L139_LF2:
	addi	r29,r29,#-8
	sw	(r29),r9
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	add	r1,r0,r6
L141_LF2:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r9,28(r29)
	lw	r10,32(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryFreeSharedPte
.data
.align 2
_spages_LF2:
.space 256
; Compiled by GCC
.text
.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r2,3(r30)
	addi	r31,r0,#0
	andi	r1,r2,#0x00ff
	seqi	r1,r1,#32
	bnez	r1,L6_LF3
	nop; not filled.
	addi	r1,r2,#-9
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#1
	beqz	r1,L5_LF3
	nop; not filled.
L6_LF3:
	addi	r31,r0,#1
L5_LF3:
	add	r1,r0,r31
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r31,3(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	bnez	r1,L12_LF3
	nop; not filled.
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#5
	bnez	r1,L12_LF3
	nop; not filled.
	andi	r1,r31,#0x00ff
	snei	r1,r1,#65
	bnez	r1,L11_LF3
	nop; not filled.
L12_LF3:
	addi	r2,r0,#1
L11_LF3:
	add	r1,r0,r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#15
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#0
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	lw	r2,(r30)
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.align 2
.proc _QueueLinkInit
.global _QueueLinkInit
_QueueLinkInit:
;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	lw	r2,4(r30)
	addi	r31,r0,#0
	sw	(r1),r31
	sw	12(r1),r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLinkInit
.align 2
.proc _QueueNext
.global _QueueNext
_QueueNext:
;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueNext
.align 2
.proc _QueuePrev
.global _QueuePrev
_QueuePrev:
;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueuePrev
.align 2
.proc _QueueFirst
.global _QueueFirst
_QueueFirst:
;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueFirst
.align 2
.proc _QueueLast
.global _QueueLast
_QueueLast:
;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLast
.align 2
.proc _QueueInsertAfter
.global _QueueInsertAfter
_QueueInsertAfter:
;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r2,4(r30)
	lw	r1,8(r30)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertAfter
.align 2
.proc _QueueInsertFirst
.global _QueueInsertFirst
_QueueInsertFirst:
;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	sw	8(r1),r3
	sw	4(r1),r3
	lw	r31,(r3)
	sw	(r1),r31
	sw	(r3),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertFirst
.align 2
.proc _QueueInsertLast
.global _QueueInsertLast
_QueueInsertLast:
;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	lw	r2,4(r3)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertLast
.align 2
.proc _QueueRemove
.global _QueueRemove
_QueueRemove:
;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	lw	r1,8(r31)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L44_LF3
	nop; not filled.
	lw	r1,4(r31)
	lw	r3,(r31)
	sw	(r1),r3
	lw	r1,(r31)
	lw	r3,4(r31)
	sw	4(r1),r3
	lw	r2,8(r31)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L44_LF3:
	addi	r3,r0,#0
	sw	(r31),r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueRemove
.align 2
.proc _QueueLength
.global _QueueLength
_QueueLength:
;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLength
.align 2
.proc _QueueEmpty
.global _QueueEmpty
_QueueEmpty:
;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	seqi	r1,r1,#0
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueEmpty
.data
.align 2
LC0_LF3:
.ascii "Entering SynchModuleInit\n\000"
.align 2
LC1_LF3:
.ascii "Leaving SynchModuleInit\n\000"
.text
.align 2
.proc _SynchModuleInit
.global _SynchModuleInit
_SynchModuleInit:
;  Function 'SynchModuleInit'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r3,r0,#112
	sw	4(r29),r3
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L53_LF3
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r3,r0,#43
	sw	4(r29),r3
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L52_LF3
	nop; not filled.
L53_LF3:
	addi	r29,r29,#-8
	lhi	r3,((LC0_LF3)>>16)&0xffff
	addui	r3,r3,(LC0_LF3)&0xffff
	sw	(r29),r3
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L52_LF3:
	lhi	r31,((_sems_LF3)>>16)&0xffff
	addui	r31,r31,(_sems_LF3)&0xffff
	addi	r2,r31,#1260
L57_LF3:
	addi	r3,r0,#0
	sw	16(r31),r3
	addi	r31,r31,#20
	sle	r1,r31,r2
	bnez	r1,L57_LF3
	nop; not filled.
	lhi	r31,((_locks_LF3)>>16)&0xffff
	addui	r31,r31,(_locks_LF3)&0xffff
	addi	r2,r31,#1764
L62_LF3:
	addi	r3,r0,#0
	sw	24(r31),r3
	addi	r3,r0,#-1
	sw	20(r31),r3
	addi	r31,r31,#28
	sle	r1,r31,r2
	bnez	r1,L62_LF3
	nop; not filled.
	addi	r2,r0,#0
	lhi	r31,((_conds_LF3)>>16)&0xffff
	addui	r31,r31,(_conds_LF3)&0xffff
L67_LF3:
	addi	r3,r0,#0
	sw	28(r31),r3
	sw	24(r31),r3
	addi	r31,r31,#32
	addi	r2,r2,#1
	slei	r1,r2,#31
	bnez	r1,L67_LF3
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r3,r0,#112
	sw	4(r29),r3
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L70_LF3
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r3,r0,#43
	sw	4(r29),r3
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L69_LF3
	nop; not filled.
L70_LF3:
	addi	r29,r29,#-8
	lhi	r3,((LC1_LF3)>>16)&0xffff
	addui	r3,r3,(LC1_LF3)&0xffff
	sw	(r29),r3
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L69_LF3:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SynchModuleInit
.align 2
.proc _SemInit
.global _SemInit
_SemInit:
;  Function 'SemInit'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	lw	r3,4(r30)
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_QueueInit
	nop; not filled.
	sw	12(r2),r3
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemInit
.align 2
.proc _SemCreate
.global _SemCreate
_SemCreate:
;  Function 'SemCreate'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r3,r0,#0
	lhi	r31,((_sems_LF3)>>16)&0xffff
	addui	r31,r31,(_sems_LF3)&0xffff
L89_LF3:
	add	r2,r0,r31
	lw	r1,16(r31)
	snei	r1,r1,#0
	beqz	r1,L96_LF3
	nop; not filled.
	addi	r31,r2,#20
	addi	r3,r3,#1
	slei	r1,r3,#63
	bnez	r1,L89_LF3
	nop; not filled.
L87_LF3:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	seqi	r1,r3,#64
	bnez	r1,L93_LF3
	nop; not filled.
	slli	r1,r3,#0x2
	add	r1,r1,r3
	slli	r1,r1,#0x2
	lhi	r5,((_sems_LF3)>>16)&0xffff
	addui	r5,r5,(_sems_LF3)&0xffff
	add	r2,r1,r5
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_QueueInit
	nop; not filled.
	lw	r5,(r30)
	sw	12(r2),r5
	addi	r29,r29,#8
	add	r1,r0,r3
	j	L95_LF3
	nop; not filled.
L96_LF3:
	addi	r5,r0,#1
	sw	16(r31),r5
	j	L87_LF3
	nop; not filled.
L93_LF3:
	addi	r1,r0,#-1
L95_LF3:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemCreate
.data
.align 2
LC2_LF3:
.ascii "Old interrupt value was 0x%x.\n\000"
.align 2
LC3_LF3:
.ascii "Proc 0x%x waiting on sem 0x%x, count=%d.\n\000"
.align 2
LC4_LF3:
.ascii "Suspending current proc (0x%x).\n\000"
.text
.align 2
.proc _SemWait
.global _SemWait
_SemWait:
;  Function 'SemWait'; 0 bytes of locals, 6 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	lw	r4,(r30)
	addi	r29,r29,#-8
	addi	r7,r0,#15
	sw	(r29),r7
	jal	_SetIntrs
	nop; not filled.
	add	r6,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r7,r0,#73
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L100_LF3
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L99_LF3
	nop; not filled.
L100_LF3:
	addi	r29,r29,#-8
	lhi	r7,((LC2_LF3)>>16)&0xffff
	addui	r7,r7,(LC2_LF3)&0xffff
	sw	(r29),r7
	sw	4(r29),r6
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L99_LF3:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r7,r0,#115
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L102_LF3
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L101_LF3
	nop; not filled.
L102_LF3:
	addi	r29,r29,#-16
	lhi	r7,((LC3_LF3)>>16)&0xffff
	addui	r7,r7,(LC3_LF3)&0xffff
	sw	(r29),r7
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	4(r29),r1
	sw	8(r29),r4
	lw	r7,12(r4)
	sw	12(r29),r7
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L101_LF3:
	lw	r1,12(r4)
	addi	r1,r1,#-1
	sw	12(r4),r1
	slti	r1,r1,#0
	beqz	r1,L103_LF3
	nop; not filled.
	jal	_QueueAllocLink
	nop; not filled.
	add	r2,r0,r1
	lhi	r5,((_currentPCB)>>16)&0xffff
	addui	r5,r5,(_currentPCB)&0xffff
	lw	r1,(r5)
	addi	r7,r0,#0
	sw	(r2),r7
	sw	12(r2),r1
	addi	r29,r29,#-8
	lhi	r3,((_debugstr)>>16)&0xffff
	addui	r3,r3,(_debugstr)&0xffff
	sw	(r29),r3
	addi	r7,r0,#115
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L106_LF3
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r3
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L105_LF3
	nop; not filled.
L106_LF3:
	addi	r29,r29,#-8
	lhi	r7,((LC4_LF3)>>16)&0xffff
	addui	r7,r7,(LC4_LF3)&0xffff
	sw	(r29),r7
	lw	r1,(r5)
	sw	4(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L105_LF3:
	lw	r1,4(r4)
	sw	8(r2),r4
	sw	4(r2),r1
	lw	r7,(r1)
	sw	(r2),r7
	sw	(r1),r2
	lw	r1,(r2)
	sw	4(r1),r2
	lw	r1,8(r4)
	addi	r1,r1,#1
	sw	8(r4),r1
	jal	_ProcessSleep
	nop; not filled.
L103_LF3:
	addi	r29,r29,#-8
	sw	(r29),r6
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemWait
.align 2
.proc _SemHandleWait
.global _SemHandleWait
_SemHandleWait:
;  Function 'SemHandleWait'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lw	r31,(r30)
	sleui	r1,r31,#63
	beqz	r1,L116_LF3
	nop; not filled.
	slli	r1,r31,#0x2
	add	r1,r1,r31
	slli	r1,r1,#0x2
	lhi	r2,((_sems_LF3)>>16)&0xffff
	addui	r2,r2,(_sems_LF3)&0xffff
	add	r31,r1,r2
	lw	r1,16(r31)
	snei	r1,r1,#0
	beqz	r1,L117_LF3
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r31
	jal	_SemWait
	nop; not filled.
	addi	r1,r0,#0
	addi	r29,r29,#8
	j	L115_LF3
	nop; not filled.
L117_LF3:
	addi	r1,r0,#1
	j	L115_LF3
	nop; not filled.
L116_LF3:
	addi	r1,r0,#1
L115_LF3:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemHandleWait
.data
.align 2
LC5_LF3:
.ascii "Signalling on sem 0x%x, count=%d.\n\000"
.align 2
LC6_LF3:
.ascii "Waking up PCB 0x%x.\n\000"
.text
.align 2
.proc _SemSignal
.global _SemSignal
_SemSignal:
;  Function 'SemSignal'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r2,(r30)
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r3,((_debugstr)>>16)&0xffff
	addui	r3,r3,(_debugstr)&0xffff
	sw	(r29),r3
	addi	r5,r0,#115
	sw	4(r29),r5
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L123_LF3
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r3
	addi	r5,r0,#43
	sw	4(r29),r5
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L122_LF3
	nop; not filled.
L123_LF3:
	addi	r29,r29,#-16
	lhi	r5,((LC5_LF3)>>16)&0xffff
	addui	r5,r5,(LC5_LF3)&0xffff
	sw	(r29),r5
	sw	4(r29),r2
	lw	r5,12(r2)
	sw	8(r29),r5
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L122_LF3:
	lw	r1,12(r2)
	addi	r1,r1,#1
	sw	12(r2),r1
	slei	r1,r1,#0
	beqz	r1,L124_LF3
	nop; not filled.
	lw	r3,(r2)
	lw	r1,8(r3)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L127_LF3
	nop; not filled.
	lw	r1,4(r3)
	lw	r5,(r3)
	sw	(r1),r5
	lw	r1,(r3)
	lw	r5,4(r3)
	sw	4(r1),r5
	lw	r2,8(r3)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L127_LF3:
	addi	r5,r0,#0
	sw	(r3),r5
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r5,r0,#115
	sw	4(r29),r5
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L129_LF3
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r5,r0,#43
	sw	4(r29),r5
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L128_LF3
	nop; not filled.
L129_LF3:
	addi	r29,r29,#-8
	lhi	r5,((LC6_LF3)>>16)&0xffff
	addui	r5,r5,(LC6_LF3)&0xffff
	sw	(r29),r5
	lw	r1,12(r3)
	sw	4(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L128_LF3:
	addi	r29,r29,#-8
	lw	r5,12(r3)
	sw	(r29),r5
	jal	_ProcessWakeup
	nop; not filled.
	sw	(r29),r3
	jal	_QueueFreeLink
	nop; not filled.
	addi	r29,r29,#8
L124_LF3:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemSignal
.align 2
.proc _SemHandleSignal
.global _SemHandleSignal
_SemHandleSignal:
;  Function 'SemHandleSignal'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lw	r31,(r30)
	sleui	r1,r31,#63
	beqz	r1,L136_LF3
	nop; not filled.
	slli	r1,r31,#0x2
	add	r1,r1,r31
	slli	r1,r1,#0x2
	lhi	r2,((_sems_LF3)>>16)&0xffff
	addui	r2,r2,(_sems_LF3)&0xffff
	add	r31,r1,r2
	lw	r1,16(r31)
	snei	r1,r1,#0
	beqz	r1,L137_LF3
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r31
	jal	_SemSignal
	nop; not filled.
	addi	r1,r0,#0
	addi	r29,r29,#8
	j	L135_LF3
	nop; not filled.
L137_LF3:
	addi	r1,r0,#1
	j	L135_LF3
	nop; not filled.
L136_LF3:
	addi	r1,r0,#1
L135_LF3:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SemHandleSignal
.align 2
.proc _LockInit
.global _LockInit
_LockInit:
;  Function 'LockInit'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r2,(r30)
	addi	r29,r29,#-8
	addi	r4,r0,#15
	sw	(r29),r4
	jal	_SetIntrs
	nop; not filled.
	add	r3,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_QueueInit
	nop; not filled.
	addi	r4,r0,#1
	sw	12(r2),r4
	addi	r29,r29,#8
	addi	r4,r0,#-1
	sw	20(r2),r4
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockInit
.align 2
.proc _LockCreate
.global _LockCreate
_LockCreate:
;  Function 'LockCreate'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop; not filled.
	add	r31,r0,r1
	addi	r29,r29,#8
	addi	r4,r0,#0
	lhi	r3,((_locks_LF3)>>16)&0xffff
	addui	r3,r3,(_locks_LF3)&0xffff
L153_LF3:
	add	r2,r0,r3
	lw	r1,24(r3)
	snei	r1,r1,#0
	beqz	r1,L163_LF3
	nop; not filled.
	addi	r3,r2,#28
	addi	r4,r4,#1
	slei	r1,r4,#63
	bnez	r1,L153_LF3
	nop; not filled.
L151_LF3:
	addi	r29,r29,#-8
	sw	(r29),r31
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	seqi	r1,r4,#64
	bnez	r1,L157_LF3
	nop; not filled.
	slli	r1,r4,#0x3
	sub	r1,r1,r4
	slli	r1,r1,#0x2
	lhi	r5,((_locks_LF3)>>16)&0xffff
	addui	r5,r5,(_locks_LF3)&0xffff
	add	r2,r1,r5
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop; not filled.
	add	r3,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_QueueInit
	nop; not filled.
	addi	r5,r0,#1
	sw	12(r2),r5
	addi	r29,r29,#8
	addi	r5,r0,#-1
	sw	20(r2),r5
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	add	r1,r0,r4
	j	L162_LF3
	nop; not filled.
L163_LF3:
	addi	r5,r0,#1
	sw	24(r3),r5
	j	L151_LF3
	nop; not filled.
L157_LF3:
	addi	r1,r0,#-1
L162_LF3:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockCreate
.align 2
.proc _LockAcquire
.global _LockAcquire
_LockAcquire:
;  Function 'LockAcquire'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r3,(r30)
	addi	r29,r29,#-8
	addi	r6,r0,#15
	sw	(r29),r6
	jal	_SetIntrs
	nop; not filled.
	add	r5,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r4,((_currentPCB)>>16)&0xffff
	addui	r4,r4,(_currentPCB)&0xffff
	lw	r6,(r4)
	sw	(r29),r6
	jal	_findpid
	nop; not filled.
	lw	r2,20(r3)
	addi	r29,r29,#8
	sne	r1,r2,r1
	beqz	r1,L170_LF3
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SemWait
	nop; not filled.
	lw	r4,(r4)
	sw	(r29),r4
	jal	_findpid
	nop; not filled.
	sw	20(r3),r1
	addi	r29,r29,#8
L170_LF3:
	addi	r29,r29,#-8
	sw	(r29),r5
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockAcquire
.align 2
.proc _LockHandleAcquire
.global _LockHandleAcquire
_LockHandleAcquire:
;  Function 'LockHandleAcquire'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r2,(r30)
	sleui	r1,r2,#63
	beqz	r1,L181_LF3
	nop; not filled.
	slli	r1,r2,#0x3
	sub	r1,r1,r2
	slli	r1,r1,#0x2
	lhi	r6,((_locks_LF3)>>16)&0xffff
	addui	r6,r6,(_locks_LF3)&0xffff
	add	r3,r1,r6
	lw	r1,24(r3)
	snei	r1,r1,#0
	beqz	r1,L181_LF3
	nop; not filled.
	addi	r29,r29,#-8
	addi	r6,r0,#15
	sw	(r29),r6
	jal	_SetIntrs
	nop; not filled.
	add	r5,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r4,((_currentPCB)>>16)&0xffff
	addui	r4,r4,(_currentPCB)&0xffff
	lw	r6,(r4)
	sw	(r29),r6
	jal	_findpid
	nop; not filled.
	lw	r2,20(r3)
	addi	r29,r29,#8
	sne	r1,r2,r1
	beqz	r1,L185_LF3
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SemWait
	nop; not filled.
	lw	r4,(r4)
	sw	(r29),r4
	jal	_findpid
	nop; not filled.
	sw	20(r3),r1
	addi	r29,r29,#8
L185_LF3:
	addi	r29,r29,#-8
	sw	(r29),r5
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	addi	r1,r0,#0
	j	L188_LF3
	nop; not filled.
L181_LF3:
	addi	r1,r0,#1
L188_LF3:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockHandleAcquire
.align 2
.proc _LockRelease
.global _LockRelease
_LockRelease:
;  Function 'LockRelease'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r3,(r30)
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	jal	_findpid
	nop; not filled.
	lw	r2,20(r3)
	addi	r29,r29,#8
	seq	r1,r2,r1
	beqz	r1,L195_LF3
	nop; not filled.
	addi	r5,r0,#-1
	sw	20(r3),r5
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SemSignal
	nop; not filled.
	addi	r29,r29,#8
L195_LF3:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockRelease
.align 2
.proc _LockHandleRelease
.global _LockHandleRelease
_LockHandleRelease:
;  Function 'LockHandleRelease'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r2,(r30)
	sleui	r1,r2,#63
	beqz	r1,L206_LF3
	nop; not filled.
	slli	r1,r2,#0x3
	sub	r1,r1,r2
	slli	r1,r1,#0x2
	lhi	r5,((_locks_LF3)>>16)&0xffff
	addui	r5,r5,(_locks_LF3)&0xffff
	add	r3,r1,r5
	lw	r1,24(r3)
	snei	r1,r1,#0
	beqz	r1,L206_LF3
	nop; not filled.
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	jal	_findpid
	nop; not filled.
	lw	r2,20(r3)
	addi	r29,r29,#8
	seq	r1,r2,r1
	beqz	r1,L210_LF3
	nop; not filled.
	addi	r5,r0,#-1
	sw	20(r3),r5
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SemSignal
	nop; not filled.
	addi	r29,r29,#8
L210_LF3:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	addi	r1,r0,#0
	j	L213_LF3
	nop; not filled.
L206_LF3:
	addi	r1,r0,#1
L213_LF3:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _LockHandleRelease
.align 2
.proc _CondInit
.global _CondInit
_CondInit:
;  Function 'CondInit'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r2,(r30)
	lw	r3,4(r30)
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r1,r2,#4
	addi	r29,r29,#-8
	sw	(r29),r1
	jal	_QueueInit
	nop; not filled.
	addi	r5,r0,#0
	sw	16(r2),r5
	addi	r29,r29,#8
	sw	(r2),r3
	sw	24(r2),r5
	addi	r5,r0,#1
	sw	28(r2),r5
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondInit
.align 2
.proc _CondCreate
.global _CondCreate
_CondCreate:
;  Function 'CondCreate'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r3,(r30)
	sgtui	r1,r3,#64
	bnez	r1,L233_LF3
	nop; not filled.
	slli	r1,r3,#0x3
	sub	r1,r1,r3
	slli	r1,r1,#0x2
	lhi	r6,((_locks_LF3)>>16)&0xffff
	addui	r6,r6,(_locks_LF3)&0xffff
	add	r1,r1,r6
	lw	r1,24(r1)
	snei	r1,r1,#1
	beqz	r1,L224_LF3
	nop; not filled.
	j	L233_LF3
	nop; not filled.
L239_LF3:
	addi	r6,r0,#1
	sw	28(r2),r6
	j	L227_LF3
	nop; not filled.
L224_LF3:
	addi	r29,r29,#-8
	addi	r6,r0,#15
	sw	(r29),r6
	jal	_SetIntrs
	nop; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r5,r0,#0
	lhi	r2,((_conds_LF3)>>16)&0xffff
	addui	r2,r2,(_conds_LF3)&0xffff
L229_LF3:
	lw	r1,28(r2)
	snei	r1,r1,#0
	beqz	r1,L239_LF3
	nop; not filled.
	addi	r2,r2,#32
	addi	r5,r5,#1
	slei	r1,r5,#31
	bnez	r1,L229_LF3
	nop; not filled.
L227_LF3:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	seqi	r1,r5,#32
	bnez	r1,L233_LF3
	nop; not filled.
	slli	r2,r5,#0x5
	lhi	r6,((_conds_LF3)>>16)&0xffff
	addui	r6,r6,(_conds_LF3)&0xffff
	add	r2,r2,r6
	slli	r1,r3,#0x3
	sub	r1,r1,r3
	slli	r1,r1,#0x2
	lhi	r6,((_locks_LF3)>>16)&0xffff
	addui	r6,r6,(_locks_LF3)&0xffff
	add	r3,r1,r6
	addi	r29,r29,#-8
	addi	r6,r0,#15
	sw	(r29),r6
	jal	_SetIntrs
	nop; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r1,r2,#4
	addi	r29,r29,#-8
	sw	(r29),r1
	jal	_QueueInit
	nop; not filled.
	addi	r6,r0,#0
	sw	16(r2),r6
	addi	r29,r29,#8
	sw	(r2),r3
	sw	24(r2),r6
	addi	r6,r0,#1
	sw	28(r2),r6
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	add	r1,r0,r5
	j	L238_LF3
	nop; not filled.
L233_LF3:
	addi	r1,r0,#-1
L238_LF3:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondCreate
.align 2
.proc _CondWait
.global _CondWait
_CondWait:
;  Function 'CondWait'; 0 bytes of locals, 7 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#40; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	lw	r4,(r30)
	addi	r29,r29,#-8
	addi	r8,r0,#15
	sw	(r29),r8
	jal	_SetIntrs
	nop; not filled.
	add	r7,r0,r1
	addi	r29,r29,#8
	lw	r1,24(r4)
	addi	r1,r1,#1
	sw	24(r4),r1
	lw	r3,(r4)
	addi	r29,r29,#-8
	sw	(r29),r8
	jal	_SetIntrs
	nop; not filled.
	add	r5,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r6,((_currentPCB)>>16)&0xffff
	addui	r6,r6,(_currentPCB)&0xffff
	lw	r8,(r6)
	sw	(r29),r8
	jal	_findpid
	nop; not filled.
	lw	r2,20(r3)
	addi	r29,r29,#8
	seq	r1,r2,r1
	beqz	r1,L244_LF3
	nop; not filled.
	addi	r8,r0,#-1
	sw	20(r3),r8
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SemSignal
	nop; not filled.
	addi	r29,r29,#8
L244_LF3:
	addi	r29,r29,#-8
	sw	(r29),r5
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	addi	r29,r29,#-8
	addi	r1,r4,#4
	sw	(r29),r1
	jal	_SemWait
	nop; not filled.
	lw	r3,(r4)
	addi	r29,r29,#8
	addi	r29,r29,#-8
	addi	r8,r0,#15
	sw	(r29),r8
	jal	_SetIntrs
	nop; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lw	r8,(r6)
	sw	(r29),r8
	jal	_findpid
	nop; not filled.
	lw	r2,20(r3)
	addi	r29,r29,#8
	sne	r1,r2,r1
	beqz	r1,L248_LF3
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SemWait
	nop; not filled.
	lw	r6,(r6)
	sw	(r29),r6
	jal	_findpid
	nop; not filled.
	sw	20(r3),r1
	addi	r29,r29,#8
L248_LF3:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	addi	r29,r29,#-8
	sw	(r29),r7
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondWait
.align 2
.proc _CondHandleWait
.global _CondHandleWait
_CondHandleWait:
;  Function 'CondHandleWait'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r2,(r30)
	sleui	r1,r2,#31
	beqz	r1,L256_LF3
	nop; not filled.
	slli	r1,r2,#0x5
	lhi	r4,((_conds_LF3)>>16)&0xffff
	addui	r4,r4,(_conds_LF3)&0xffff
	add	r3,r1,r4
	lw	r1,28(r3)
	snei	r1,r1,#0
	beqz	r1,L257_LF3
	nop; not filled.
	lw	r2,(r3)
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	jal	_findpid
	nop; not filled.
	lw	r2,20(r2)
	addi	r29,r29,#8
	seq	r1,r2,r1
	beqz	r1,L257_LF3
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_CondWait
	nop; not filled.
	addi	r1,r0,#0
	addi	r29,r29,#8
	j	L255_LF3
	nop; not filled.
L257_LF3:
	addi	r1,r0,#1
	j	L255_LF3
	nop; not filled.
L256_LF3:
	addi	r1,r0,#1
L255_LF3:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondHandleWait
.align 2
.proc _CondSignal
.global _CondSignal
_CondSignal:
;  Function 'CondSignal'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r2,(r30)
	addi	r29,r29,#-8
	addi	r4,r0,#15
	sw	(r29),r4
	jal	_SetIntrs
	nop; not filled.
	add	r3,r0,r1
	addi	r29,r29,#8
	lw	r31,24(r2)
	snei	r1,r31,#0
	beqz	r1,L266_LF3
	nop; not filled.
	addi	r1,r31,#-1
	sw	24(r2),r1
	addi	r29,r29,#-8
	addi	r1,r2,#4
	sw	(r29),r1
	jal	_SemSignal
	nop; not filled.
	addi	r29,r29,#8
L266_LF3:
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondSignal
.align 2
.proc _CondHandleSignal
.global _CondHandleSignal
_CondHandleSignal:
;  Function 'CondHandleSignal'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r2,(r30)
	sleui	r1,r2,#31
	beqz	r1,L277_LF3
	nop; not filled.
	slli	r1,r2,#0x5
	lhi	r5,((_conds_LF3)>>16)&0xffff
	addui	r5,r5,(_conds_LF3)&0xffff
	add	r3,r1,r5
	lw	r1,28(r3)
	snei	r1,r1,#0
	beqz	r1,L277_LF3
	nop; not filled.
	lw	r2,(r3)
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	jal	_findpid
	nop; not filled.
	lw	r2,20(r2)
	addi	r29,r29,#8
	seq	r1,r2,r1
	beqz	r1,L277_LF3
	nop; not filled.
	addi	r29,r29,#-8
	addi	r5,r0,#15
	sw	(r29),r5
	jal	_SetIntrs
	nop; not filled.
	add	r4,r0,r1
	addi	r29,r29,#8
	lw	r2,24(r3)
	snei	r1,r2,#0
	beqz	r1,L282_LF3
	nop; not filled.
	addi	r1,r2,#-1
	sw	24(r3),r1
	addi	r29,r29,#-8
	addi	r1,r3,#4
	sw	(r29),r1
	jal	_SemSignal
	nop; not filled.
	addi	r29,r29,#8
L282_LF3:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	addi	r1,r0,#0
	j	L284_LF3
	nop; not filled.
L277_LF3:
	addi	r1,r0,#1
L284_LF3:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondHandleSignal
.align 2
.proc _CondBroadcast
.global _CondBroadcast
_CondBroadcast:
;  Function 'CondBroadcast'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r4,(r30)
	addi	r29,r29,#-8
	addi	r6,r0,#15
	sw	(r29),r6
	jal	_SetIntrs
	nop; not filled.
	add	r5,r0,r1
	addi	r29,r29,#8
	addi	r2,r0,#0
	lw	r1,24(r4)
	sltu	r1,r2,r1
	beqz	r1,L296_LF3
	nop; not filled.
	addi	r3,r4,#4
L298_LF3:
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SemSignal
	nop; not filled.
	addi	r29,r29,#8
	addi	r2,r2,#1
	lw	r1,24(r4)
	sltu	r1,r2,r1
	bnez	r1,L298_LF3
	nop; not filled.
L296_LF3:
	addi	r6,r0,#0
	sw	24(r4),r6
	addi	r29,r29,#-8
	sw	(r29),r5
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondBroadcast
.align 2
.proc _CondHandleBroadcast
.global _CondHandleBroadcast
_CondHandleBroadcast:
;  Function 'CondHandleBroadcast'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r2,(r30)
	sleui	r1,r2,#31
	beqz	r1,L302_LF3
	nop; not filled.
	slli	r1,r2,#0x5
	lhi	r6,((_conds_LF3)>>16)&0xffff
	addui	r6,r6,(_conds_LF3)&0xffff
	add	r3,r1,r6
	lw	r1,28(r3)
	snei	r1,r1,#0
	beqz	r1,L302_LF3
	nop; not filled.
	lw	r2,(r3)
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	jal	_findpid
	nop; not filled.
	lw	r2,20(r2)
	addi	r29,r29,#8
	sne	r1,r2,r1
	beqz	r1,L302_LF3
	nop; not filled.
	addi	r29,r29,#-8
	addi	r6,r0,#15
	sw	(r29),r6
	jal	_SetIntrs
	nop; not filled.
	add	r5,r0,r1
	addi	r29,r29,#8
	addi	r2,r0,#0
	lw	r1,24(r3)
	sltu	r1,r2,r1
	beqz	r1,L308_LF3
	nop; not filled.
	addi	r4,r3,#4
L310_LF3:
	addi	r29,r29,#-8
	sw	(r29),r4
	jal	_SemSignal
	nop; not filled.
	addi	r29,r29,#8
	addi	r2,r2,#1
	lw	r1,24(r3)
	sltu	r1,r2,r1
	bnez	r1,L310_LF3
	nop; not filled.
L308_LF3:
	addi	r6,r0,#0
	sw	24(r3),r6
	addi	r29,r29,#-8
	sw	(r29),r5
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	addi	r1,r0,#0
	j	L313_LF3
	nop; not filled.
L302_LF3:
	addi	r1,r0,#1
L313_LF3:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _CondHandleBroadcast
.data
.align 2
_sems_LF3:
.space 1280
.align 2
_locks_LF3:
.space 1792
.align 2
_conds_LF3:
.space 1024
; Compiled by GCC

.align 2
_rcsid_LF4:
.ascii "$Id: filesys.c,v 1.1 2000/09/20 01:50:19 elm Exp elm $\000"
.text
.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r2,3(r30)
	addi	r31,r0,#0
	andi	r1,r2,#0x00ff
	seqi	r1,r1,#32
	bnez	r1,L6_LF4
	nop; not filled.
	addi	r1,r2,#-9
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#1
	beqz	r1,L5_LF4
	nop; not filled.
L6_LF4:
	addi	r31,r0,#1
L5_LF4:
	add	r1,r0,r31
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r31,3(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	bnez	r1,L12_LF4
	nop; not filled.
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#5
	bnez	r1,L12_LF4
	nop; not filled.
	andi	r1,r31,#0x00ff
	snei	r1,r1,#65
	bnez	r1,L11_LF4
	nop; not filled.
L12_LF4:
	addi	r2,r0,#1
L11_LF4:
	add	r1,r0,r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#15
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#0
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	lw	r2,(r30)
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.align 2
.proc _QueueLinkInit
.global _QueueLinkInit
_QueueLinkInit:
;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	lw	r2,4(r30)
	addi	r31,r0,#0
	sw	(r1),r31
	sw	12(r1),r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLinkInit
.align 2
.proc _QueueNext
.global _QueueNext
_QueueNext:
;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueNext
.align 2
.proc _QueuePrev
.global _QueuePrev
_QueuePrev:
;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueuePrev
.align 2
.proc _QueueFirst
.global _QueueFirst
_QueueFirst:
;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueFirst
.align 2
.proc _QueueLast
.global _QueueLast
_QueueLast:
;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLast
.align 2
.proc _QueueInsertAfter
.global _QueueInsertAfter
_QueueInsertAfter:
;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r2,4(r30)
	lw	r1,8(r30)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertAfter
.align 2
.proc _QueueInsertFirst
.global _QueueInsertFirst
_QueueInsertFirst:
;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	sw	8(r1),r3
	sw	4(r1),r3
	lw	r31,(r3)
	sw	(r1),r31
	sw	(r3),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertFirst
.align 2
.proc _QueueInsertLast
.global _QueueInsertLast
_QueueInsertLast:
;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	lw	r2,4(r3)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertLast
.align 2
.proc _QueueRemove
.global _QueueRemove
_QueueRemove:
;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	lw	r1,8(r31)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L44_LF4
	nop; not filled.
	lw	r1,4(r31)
	lw	r3,(r31)
	sw	(r1),r3
	lw	r1,(r31)
	lw	r3,4(r31)
	sw	4(r1),r3
	lw	r2,8(r31)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L44_LF4:
	addi	r3,r0,#0
	sw	(r31),r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueRemove
.align 2
.proc _QueueLength
.global _QueueLength
_QueueLength:
;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLength
.align 2
.proc _QueueEmpty
.global _QueueEmpty
_QueueEmpty:
;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	seqi	r1,r1,#0
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueEmpty
.data
.align 2
LC0_LF4:
.ascii "Attepmting to open %s mode=%d.\n\000"
.align 2
LC1_LF4:
.ascii "dlx:\000"
.align 2
LC2_LF4:
.ascii "File %s opening in file system %d.\n\000"
.align 2
LC3_LF4:
.ascii "Opened %s in FS %d, mode=%d slot=%d.\n\000"
.text
.align 2
.proc _FsOpen
.global _FsOpen
_FsOpen:
;  Function 'FsOpen'; 0 bytes of locals, 7 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#40; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	lw	r4,(r30)
	lw	r5,4(r30)
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r8,r0,#102
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L56_LF4
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r8,r0,#43
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L55_LF4
	nop; not filled.
L56_LF4:
	addi	r29,r29,#-16
	lhi	r8,((LC0_LF4)>>16)&0xffff
	addui	r8,r8,(LC0_LF4)&0xffff
	sw	(r29),r8
	sw	4(r29),r4
	sw	8(r29),r5
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L55_LF4:
	andi	r5,r5,#3
	snei	r1,r5,#0
	beqz	r1,L74_LF4
	nop; not filled.
	addi	r3,r0,#0
	lhi	r6,((_openfiles_LF4)>>16)&0xffff
	addui	r6,r6,(_openfiles_LF4)&0xffff
	add	r2,r0,r6
L61_LF4:
	lw	r1,4(r2)
	snei	r1,r1,#0
	beqz	r1,L59_LF4
	nop; not filled.
	addi	r2,r2,#268
	addi	r3,r3,#1
	slei	r1,r3,#31
	bnez	r1,L61_LF4
	nop; not filled.
L59_LF4:
	sgti	r1,r3,#31
	beqz	r1,L64_LF4
	nop; not filled.
L74_LF4:
	addi	r1,r0,#-1
	j	L73_LF4
	nop; not filled.
L64_LF4:
	slli	r1,r3,#0x4
	add	r1,r1,r3
	slli	r1,r1,#0x2
	sub	r1,r1,r3
	slli	r1,r1,#0x2
	add	r2,r1,r6
	sw	4(r2),r5
	addi	r29,r29,#-16
	sw	(r29),r4
	lhi	r1,((LC1_LF4)>>16)&0xffff
	addui	r1,r1,(LC1_LF4)&0xffff
	sw	4(r29),r1
	addi	r8,r0,#4
	sw	8(r29),r8
	jal	_dstrncmp
	nop; not filled.
	addi	r29,r29,#16
	snei	r1,r1,#0
	bnez	r1,L65_LF4
	nop; not filled.
	addi	r4,r4,#4
	addi	r8,r0,#1
	j	L75_LF4
	nop; not filled.
L65_LF4:
	addi	r8,r0,#0
L75_LF4:
	sw	(r2),r8
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r8,r0,#102
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L68_LF4
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r8,r0,#43
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L67_LF4
	nop; not filled.
L68_LF4:
	addi	r29,r29,#-16
	lhi	r8,((LC2_LF4)>>16)&0xffff
	addui	r8,r8,(LC2_LF4)&0xffff
	sw	(r29),r8
	sw	4(r29),r4
	slli	r1,r3,#0x4
	add	r1,r1,r3
	slli	r1,r1,#0x2
	sub	r1,r1,r3
	slli	r1,r1,#0x2
	lhi	r8,((_openfiles_LF4)>>16)&0xffff
	addui	r8,r8,(_openfiles_LF4)&0xffff
	add	r1,r1,r8
	lw	r1,(r1)
	sw	8(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L67_LF4:
	addi	r29,r29,#-16
	slli	r1,r3,#0x4
	add	r1,r1,r3
	slli	r1,r1,#0x2
	sub	r1,r1,r3
	slli	r6,r1,#0x2
	lhi	r8,((_openfiles_LF4)>>16)&0xffff
	addui	r8,r8,(_openfiles_LF4)&0xffff
	add	r7,r6,r8
	lw	r2,(r7)
	slli	r1,r2,#0x1
	add	r1,r1,r2
	slli	r1,r1,#0x3
	lhi	r8,((_fs_LF4)>>16)&0xffff
	addui	r8,r8,(_fs_LF4)&0xffff
	add	r1,r1,r8
	sw	(r29),r3
	sw	4(r29),r4
	sw	8(r29),r5
	lw	r1,(r1)
	jalr	r1
	nop; not filled.
	add	r2,r0,r1
	addi	r29,r29,#16
	slti	r1,r2,#0
	beqz	r1,L69_LF4
	nop; not filled.
	lhi	r8,((_openfiles_LF4)>>16)&0xffff
	addui	r8,r8,(_openfiles_LF4)&0xffff
	add	r1,r6,r8
	addi	r8,r0,#0
	sw	4(r1),r8
	add	r1,r0,r2
	j	L73_LF4
	nop; not filled.
L69_LF4:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r8,r0,#102
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L72_LF4
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r8,r0,#43
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L71_LF4
	nop; not filled.
L72_LF4:
	addi	r29,r29,#-24
	lhi	r8,((LC3_LF4)>>16)&0xffff
	addui	r8,r8,(LC3_LF4)&0xffff
	sw	(r29),r8
	sw	4(r29),r4
	lw	r7,(r7)
	sw	8(r29),r7
	sw	12(r29),r5
	sw	16(r29),r3
	jal	_printf
	nop; not filled.
	addi	r29,r29,#24
L71_LF4:
	add	r1,r0,r3
L73_LF4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsOpen
.align 2
.proc _FsClose
.global _FsClose
_FsClose:
;  Function 'FsClose'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r31,(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-1
	sleui	r1,r1,#30
	beqz	r1,L84_LF4
	nop; not filled.
	slli	r1,r31,#0x4
	add	r1,r1,r31
	slli	r1,r1,#0x2
	sub	r1,r1,r31
	slli	r1,r1,#0x2
	lhi	r4,((_openfiles_LF4)>>16)&0xffff
	addui	r4,r4,(_openfiles_LF4)&0xffff
	add	r1,r1,r4
	lw	r1,4(r1)
	snei	r1,r1,#0
	beqz	r1,L84_LF4
	nop; not filled.
	addi	r2,r0,#1
L84_LF4:
	snei	r1,r2,#0
	beqz	r1,L82_LF4
	nop; not filled.
	addi	r29,r29,#-8
	slli	r1,r31,#0x4
	add	r1,r1,r31
	slli	r1,r1,#0x2
	sub	r1,r1,r31
	slli	r3,r1,#0x2
	lhi	r4,((_openfiles_LF4)>>16)&0xffff
	addui	r4,r4,(_openfiles_LF4)&0xffff
	add	r1,r3,r4
	lw	r2,(r1)
	slli	r1,r2,#0x1
	add	r1,r1,r2
	slli	r1,r1,#0x3
	lhi	r4,((_fs_LF4)>>16)&0xffff
	addui	r4,r4,(_fs_LF4)&0xffff
	add	r1,r1,r4
	sw	(r29),r31
	lw	r1,16(r1)
	jalr	r1
	nop; not filled.
	addi	r29,r29,#8
	lhi	r4,((_openfiles_LF4)>>16)&0xffff
	addui	r4,r4,(_openfiles_LF4)&0xffff
	add	r2,r3,r4
	addi	r4,r0,#0
	sw	4(r2),r4
	j	L86_LF4
	nop; not filled.
L82_LF4:
	addi	r1,r0,#-1
L86_LF4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsClose
.align 2
.proc _FsRead
.global _FsRead
_FsRead:
;  Function 'FsRead'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-1
	sleui	r1,r1,#30
	beqz	r1,L94_LF4
	nop; not filled.
	slli	r1,r31,#0x4
	add	r1,r1,r31
	slli	r1,r1,#0x2
	sub	r1,r1,r31
	slli	r1,r1,#0x2
	lhi	r3,((_openfiles_LF4)>>16)&0xffff
	addui	r3,r3,(_openfiles_LF4)&0xffff
	add	r1,r1,r3
	lw	r1,4(r1)
	snei	r1,r1,#0
	beqz	r1,L94_LF4
	nop; not filled.
	addi	r2,r0,#1
L94_LF4:
	snei	r1,r2,#0
	beqz	r1,L92_LF4
	nop; not filled.
	addi	r29,r29,#-16
	slli	r1,r31,#0x4
	add	r1,r1,r31
	slli	r1,r1,#0x2
	sub	r1,r1,r31
	slli	r1,r1,#0x2
	lhi	r3,((_openfiles_LF4)>>16)&0xffff
	addui	r3,r3,(_openfiles_LF4)&0xffff
	add	r1,r1,r3
	lw	r2,(r1)
	slli	r1,r2,#0x1
	add	r1,r1,r2
	slli	r1,r1,#0x3
	lhi	r3,((_fs_LF4)>>16)&0xffff
	addui	r3,r3,(_fs_LF4)&0xffff
	add	r1,r1,r3
	sw	(r29),r31
	lw	r3,4(r30)
	sw	4(r29),r3
	lw	r3,8(r30)
	sw	8(r29),r3
	lw	r1,4(r1)
	jalr	r1
	nop; not filled.
	addi	r29,r29,#16
	j	L91_LF4
	nop; not filled.
L92_LF4:
	addi	r1,r0,#-1
L91_LF4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsRead
.align 2
.proc _FsWrite
.global _FsWrite
_FsWrite:
;  Function 'FsWrite'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-1
	sleui	r1,r1,#30
	beqz	r1,L103_LF4
	nop; not filled.
	slli	r1,r31,#0x4
	add	r1,r1,r31
	slli	r1,r1,#0x2
	sub	r1,r1,r31
	slli	r1,r1,#0x2
	lhi	r3,((_openfiles_LF4)>>16)&0xffff
	addui	r3,r3,(_openfiles_LF4)&0xffff
	add	r1,r1,r3
	lw	r1,4(r1)
	snei	r1,r1,#0
	beqz	r1,L103_LF4
	nop; not filled.
	addi	r2,r0,#1
L103_LF4:
	snei	r1,r2,#0
	beqz	r1,L101_LF4
	nop; not filled.
	addi	r29,r29,#-16
	slli	r1,r31,#0x4
	add	r1,r1,r31
	slli	r1,r1,#0x2
	sub	r1,r1,r31
	slli	r1,r1,#0x2
	lhi	r3,((_openfiles_LF4)>>16)&0xffff
	addui	r3,r3,(_openfiles_LF4)&0xffff
	add	r1,r1,r3
	lw	r2,(r1)
	slli	r1,r2,#0x1
	add	r1,r1,r2
	slli	r1,r1,#0x3
	lhi	r3,((_fs_LF4)>>16)&0xffff
	addui	r3,r3,(_fs_LF4)&0xffff
	add	r1,r1,r3
	sw	(r29),r31
	lw	r3,4(r30)
	sw	4(r29),r3
	lw	r3,8(r30)
	sw	8(r29),r3
	lw	r1,8(r1)
	jalr	r1
	nop; not filled.
	addi	r29,r29,#16
	j	L100_LF4
	nop; not filled.
L101_LF4:
	addi	r1,r0,#-1
L100_LF4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsWrite
.align 2
.proc _FsSeek
.global _FsSeek
_FsSeek:
;  Function 'FsSeek'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-1
	sleui	r1,r1,#30
	beqz	r1,L112_LF4
	nop; not filled.
	slli	r1,r31,#0x4
	add	r1,r1,r31
	slli	r1,r1,#0x2
	sub	r1,r1,r31
	slli	r1,r1,#0x2
	lhi	r3,((_openfiles_LF4)>>16)&0xffff
	addui	r3,r3,(_openfiles_LF4)&0xffff
	add	r1,r1,r3
	lw	r1,4(r1)
	snei	r1,r1,#0
	beqz	r1,L112_LF4
	nop; not filled.
	addi	r2,r0,#1
L112_LF4:
	snei	r1,r2,#0
	beqz	r1,L110_LF4
	nop; not filled.
	addi	r29,r29,#-16
	slli	r1,r31,#0x4
	add	r1,r1,r31
	slli	r1,r1,#0x2
	sub	r1,r1,r31
	slli	r1,r1,#0x2
	lhi	r3,((_openfiles_LF4)>>16)&0xffff
	addui	r3,r3,(_openfiles_LF4)&0xffff
	add	r1,r1,r3
	lw	r2,(r1)
	slli	r1,r2,#0x1
	add	r1,r1,r2
	slli	r1,r1,#0x3
	lhi	r3,((_fs_LF4)>>16)&0xffff
	addui	r3,r3,(_fs_LF4)&0xffff
	add	r1,r1,r3
	sw	(r29),r31
	lw	r3,4(r30)
	sw	4(r29),r3
	lw	r3,8(r30)
	sw	8(r29),r3
	lw	r1,12(r1)
	jalr	r1
	nop; not filled.
	addi	r29,r29,#16
	j	L109_LF4
	nop; not filled.
L110_LF4:
	addi	r1,r0,#-1
L109_LF4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsSeek
.align 2
.proc _FsDelete
.global _FsDelete
_FsDelete:
;  Function 'FsDelete'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	addi	r29,r29,#-16
	sw	(r29),r2
	lhi	r1,((LC1_LF4)>>16)&0xffff
	addui	r1,r1,(LC1_LF4)&0xffff
	sw	4(r29),r1
	addi	r3,r0,#4
	sw	8(r29),r3
	jal	_dstrncmp
	nop; not filled.
	addi	r29,r29,#16
	snei	r1,r1,#0
	bnez	r1,L118_LF4
	nop; not filled.
	addi	r2,r2,#4
	addi	r29,r29,#-8
	lhi	r1,((_fs_LF4+44)>>16)&0xffff
	addui	r1,r1,(_fs_LF4+44)&0xffff
	j	L120_LF4
	nop; not filled.
L118_LF4:
	addi	r29,r29,#-8
	lhi	r1,((_fs_LF4+20)>>16)&0xffff
	addui	r1,r1,(_fs_LF4+20)&0xffff
L120_LF4:
	sw	(r29),r2
	lw	r1,(r1)
	jalr	r1
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsDelete
.data
.align 2
LC4_LF4:
.ascii "Attempting to open file %s into desc %d, mode %d.\n\000"
.text
.align 2
.proc _FsUnixOpen
.global _FsUnixOpen
_FsUnixOpen:
;  Function 'FsUnixOpen'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r4,(r30)
	lw	r3,4(r30)
	lw	r5,8(r30)
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r6,r0,#102
	sw	4(r29),r6
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L127_LF4
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r6,r0,#43
	sw	4(r29),r6
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L126_LF4
	nop; not filled.
L127_LF4:
	addi	r29,r29,#-16
	lhi	r6,((LC4_LF4)>>16)&0xffff
	addui	r6,r6,(LC4_LF4)&0xffff
	sw	(r29),r6
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L126_LF4:
	addi	r29,r29,#-8
	sw	(r29),r3
	sw	4(r29),r5
	jal	_open
	nop; not filled.
	add	r3,r0,r1
	slli	r1,r4,#0x4
	add	r1,r1,r4
	slli	r1,r1,#0x2
	sub	r1,r1,r4
	slli	r1,r1,#0x2
	lhi	r6,((_openfiles_LF4)>>16)&0xffff
	addui	r6,r6,(_openfiles_LF4)&0xffff
	add	r1,r1,r6
	sw	264(r1),r3
	addi	r29,r29,#8
	slti	r2,r3,#0
	add	r1,r0,r3
	bnez	r2,L128_LF4
	nop; not filled.
	addi	r1,r0,#1
L128_LF4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsUnixOpen
.align 2
.proc _FsUnixRead
.global _FsUnixRead
_FsUnixRead:
;  Function 'FsUnixRead'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r2,(r30)
	lw	r3,4(r30)
	lw	r4,8(r30)
	addi	r29,r29,#-16
	slli	r1,r2,#0x4
	add	r1,r1,r2
	slli	r1,r1,#0x2
	sub	r1,r1,r2
	slli	r1,r1,#0x2
	lhi	r5,((_openfiles_LF4)>>16)&0xffff
	addui	r5,r5,(_openfiles_LF4)&0xffff
	add	r1,r1,r5
	lw	r1,264(r1)
	sw	(r29),r1
	sw	4(r29),r3
	sw	8(r29),r4
	jal	_read
	nop; not filled.
	addi	r29,r29,#16
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsUnixRead
.align 2
.proc _FsUnixWrite
.global _FsUnixWrite
_FsUnixWrite:
;  Function 'FsUnixWrite'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r2,(r30)
	lw	r3,4(r30)
	lw	r4,8(r30)
	addi	r29,r29,#-16
	slli	r1,r2,#0x4
	add	r1,r1,r2
	slli	r1,r1,#0x2
	sub	r1,r1,r2
	slli	r1,r1,#0x2
	lhi	r5,((_openfiles_LF4)>>16)&0xffff
	addui	r5,r5,(_openfiles_LF4)&0xffff
	add	r1,r1,r5
	lw	r1,264(r1)
	sw	(r29),r1
	sw	4(r29),r3
	sw	8(r29),r4
	jal	_write
	nop; not filled.
	addi	r29,r29,#16
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsUnixWrite
.align 2
.proc _FsUnixSeek
.global _FsUnixSeek
_FsUnixSeek:
;  Function 'FsUnixSeek'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r2,(r30)
	lw	r3,4(r30)
	lw	r4,8(r30)
	addi	r29,r29,#-16
	slli	r1,r2,#0x4
	add	r1,r1,r2
	slli	r1,r1,#0x2
	sub	r1,r1,r2
	slli	r1,r1,#0x2
	lhi	r5,((_openfiles_LF4)>>16)&0xffff
	addui	r5,r5,(_openfiles_LF4)&0xffff
	add	r1,r1,r5
	lw	r1,264(r1)
	sw	(r29),r1
	sw	4(r29),r3
	sw	8(r29),r4
	jal	_lseek
	nop; not filled.
	addi	r29,r29,#16
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsUnixSeek
.align 2
.proc _FsUnixClose
.global _FsUnixClose
_FsUnixClose:
;  Function 'FsUnixClose'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	addi	r29,r29,#-8
	slli	r1,r2,#0x4
	add	r1,r1,r2
	slli	r1,r1,#0x2
	sub	r1,r1,r2
	slli	r1,r1,#0x2
	lhi	r3,((_openfiles_LF4)>>16)&0xffff
	addui	r3,r3,(_openfiles_LF4)&0xffff
	add	r1,r1,r3
	lw	r1,264(r1)
	sw	(r29),r1
	jal	_close
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsUnixClose
.align 2
.proc _FsUnixDelete
.global _FsUnixDelete
_FsUnixDelete:
;  Function 'FsUnixDelete'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	addi	r1,r0,#-1
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsUnixDelete
.align 2
.proc _FsDlxIo
.global _FsDlxIo
_FsDlxIo:
;  Function 'FsDlxIo'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	addi	r1,r0,#1
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsDlxIo
.align 2
.proc _FsDlxRead
.global _FsDlxRead
_FsDlxRead:
;  Function 'FsDlxRead'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	addi	r1,r0,#1
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsDlxRead
.align 2
.proc _FsDlxWrite
.global _FsDlxWrite
_FsDlxWrite:
;  Function 'FsDlxWrite'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	addi	r1,r0,#1
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsDlxWrite
.align 2
.proc _FsDlxOpen
.global _FsDlxOpen
_FsDlxOpen:
;  Function 'FsDlxOpen'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	slli	r2,r1,#0x4
	add	r2,r2,r1
	slli	r2,r2,#0x2
	sub	r1,r2,r1
	slli	r1,r1,#0x2
	lhi	r31,((_openfiles_LF4)>>16)&0xffff
	addui	r31,r31,(_openfiles_LF4)&0xffff
	add	r1,r1,r31
	addi	r31,r0,#0
	sw	264(r1),r31
	addi	r1,r0,#1
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsDlxOpen
.align 2
.proc _FsDlxSeek
.global _FsDlxSeek
_FsDlxSeek:
;  Function 'FsDlxSeek'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	slli	r2,r1,#0x4
	add	r2,r2,r1
	slli	r2,r2,#0x2
	sub	r1,r2,r1
	slli	r1,r1,#0x2
	lhi	r31,((_openfiles_LF4)>>16)&0xffff
	addui	r31,r31,(_openfiles_LF4)&0xffff
	add	r1,r1,r31
	lw	r1,264(r1)
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsDlxSeek
.align 2
.proc _FsDlxClose
.global _FsDlxClose
_FsDlxClose:
;  Function 'FsDlxClose'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	addi	r1,r0,#1
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsDlxClose
.align 2
.proc _FsDlxDelete
.global _FsDlxDelete
_FsDlxDelete:
;  Function 'FsDlxDelete'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	addi	r1,r0,#1
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsDlxDelete
.align 2
.proc _FsModuleInit
.global _FsModuleInit
_FsModuleInit:
;  Function 'FsModuleInit'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lhi	r31,((_openfiles_LF4)>>16)&0xffff
	addui	r31,r31,(_openfiles_LF4)&0xffff
	addi	r2,r31,#8308
L182_LF4:
	addi	r3,r0,#0
	sw	4(r31),r3
	addi	r31,r31,#268
	sle	r1,r31,r2
	bnez	r1,L182_LF4
	nop; not filled.
	lhi	r1,((_fs_LF4)>>16)&0xffff
	addui	r1,r1,(_fs_LF4)&0xffff
	lhi	r3,((_FsUnixOpen)>>16)&0xffff
	addui	r3,r3,(_FsUnixOpen)&0xffff
	sw	(r1),r3
	lhi	r3,((_FsUnixClose)>>16)&0xffff
	addui	r3,r3,(_FsUnixClose)&0xffff
	sw	16(r1),r3
	lhi	r3,((_FsUnixRead)>>16)&0xffff
	addui	r3,r3,(_FsUnixRead)&0xffff
	sw	4(r1),r3
	lhi	r3,((_FsUnixWrite)>>16)&0xffff
	addui	r3,r3,(_FsUnixWrite)&0xffff
	sw	8(r1),r3
	lhi	r3,((_FsUnixSeek)>>16)&0xffff
	addui	r3,r3,(_FsUnixSeek)&0xffff
	sw	12(r1),r3
	lhi	r3,((_FsUnixDelete)>>16)&0xffff
	addui	r3,r3,(_FsUnixDelete)&0xffff
	sw	20(r1),r3
	lhi	r3,((_FsDlxOpen)>>16)&0xffff
	addui	r3,r3,(_FsDlxOpen)&0xffff
	sw	24(r1),r3
	lhi	r3,((_FsDlxClose)>>16)&0xffff
	addui	r3,r3,(_FsDlxClose)&0xffff
	sw	40(r1),r3
	lhi	r3,((_FsDlxRead)>>16)&0xffff
	addui	r3,r3,(_FsDlxRead)&0xffff
	sw	28(r1),r3
	lhi	r3,((_FsDlxWrite)>>16)&0xffff
	addui	r3,r3,(_FsDlxWrite)&0xffff
	sw	32(r1),r3
	lhi	r3,((_FsDlxSeek)>>16)&0xffff
	addui	r3,r3,(_FsDlxSeek)&0xffff
	sw	36(r1),r3
	lhi	r3,((_FsDlxDelete)>>16)&0xffff
	addui	r3,r3,(_FsDlxDelete)&0xffff
	sw	44(r1),r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _FsModuleInit
.data
.align 2
_fs_LF4:
.space 48
.align 2
_openfiles_LF4:
.space 8576
; Compiled by GCC

.align 2
_rcsid_LF5:
.ascii "$Id: memory.c,v 1.1 2000/09/20 01:50:19 elm Exp elm $\000"
.text
.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r2,3(r30)
	addi	r31,r0,#0
	andi	r1,r2,#0x00ff
	seqi	r1,r1,#32
	bnez	r1,L6_LF5
	nop; not filled.
	addi	r1,r2,#-9
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#1
	beqz	r1,L5_LF5
	nop; not filled.
L6_LF5:
	addi	r31,r0,#1
L5_LF5:
	add	r1,r0,r31
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r31,3(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	bnez	r1,L12_LF5
	nop; not filled.
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#5
	bnez	r1,L12_LF5
	nop; not filled.
	andi	r1,r31,#0x00ff
	snei	r1,r1,#65
	bnez	r1,L11_LF5
	nop; not filled.
L12_LF5:
	addi	r2,r0,#1
L11_LF5:
	add	r1,r0,r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#15
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#0
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	lw	r2,(r30)
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.align 2
.proc _QueueLinkInit
.global _QueueLinkInit
_QueueLinkInit:
;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	lw	r2,4(r30)
	addi	r31,r0,#0
	sw	(r1),r31
	sw	12(r1),r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLinkInit
.align 2
.proc _QueueNext
.global _QueueNext
_QueueNext:
;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueNext
.align 2
.proc _QueuePrev
.global _QueuePrev
_QueuePrev:
;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueuePrev
.align 2
.proc _QueueFirst
.global _QueueFirst
_QueueFirst:
;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueFirst
.align 2
.proc _QueueLast
.global _QueueLast
_QueueLast:
;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLast
.align 2
.proc _QueueInsertAfter
.global _QueueInsertAfter
_QueueInsertAfter:
;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r2,4(r30)
	lw	r1,8(r30)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertAfter
.align 2
.proc _QueueInsertFirst
.global _QueueInsertFirst
_QueueInsertFirst:
;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	sw	8(r1),r3
	sw	4(r1),r3
	lw	r31,(r3)
	sw	(r1),r31
	sw	(r3),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertFirst
.align 2
.proc _QueueInsertLast
.global _QueueInsertLast
_QueueInsertLast:
;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	lw	r2,4(r3)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertLast
.align 2
.proc _QueueRemove
.global _QueueRemove
_QueueRemove:
;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	lw	r1,8(r31)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L44_LF5
	nop; not filled.
	lw	r1,4(r31)
	lw	r3,(r31)
	sw	(r1),r3
	lw	r1,(r31)
	lw	r3,4(r31)
	sw	4(r1),r3
	lw	r2,8(r31)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L44_LF5:
	addi	r3,r0,#0
	sw	(r31),r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueRemove
.align 2
.proc _QueueLength
.global _QueueLength
_QueueLength:
;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLength
.align 2
.proc _QueueEmpty
.global _QueueEmpty
_QueueEmpty:
;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	seqi	r1,r1,#0
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueEmpty
.data
.align 2
_negativeone_LF5:
.word -1
.text
.align 2
.proc _MemoryGetSize
.global _MemoryGetSize
_MemoryGetSize:
;  Function 'MemoryGetSize'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lhi	r1,#-1
	addui	r1,r1,#0
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryGetSize
.data
.align 2
LC0_LF5:
.ascii "Set freemap entry %d to 0x%x.\n\000"
.text
.align 2
.proc _MemorySetFreemap
.global _MemorySetFreemap
_MemorySetFreemap:
;  Function 'MemorySetFreemap'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r3,(r30)
	lw	r31,4(r30)
	add	r2,r0,r3
	sgei	r1,r3,#0
	bnez	r1,L61_LF5
	nop; not filled.
	addi	r2,r3,#31
L61_LF5:
	srai	r5,r2,#0x5
	slli	r1,r5,#0x5
	sub	r3,r3,r1
	addi	r1,r0,#1
	sll	r2,r1,r3
	lhi	r1,((_negativeone_LF5)>>16)&0xffff
	addui	r1,r1,(_negativeone_LF5)&0xffff
	lw	r1,(r1)
	xor	r2,r2,r1
	slli	r1,r5,#0x2
	lhi	r6,((_freepages_LF5)>>16)&0xffff
	addui	r6,r6,(_freepages_LF5)&0xffff
	add	r4,r1,r6
	lw	r1,(r4)
	and	r2,r1,r2
	sll	r1,r31,r3
	or	r1,r2,r1
	sw	(r4),r1
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r6,r0,#109
	sw	4(r29),r6
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L65_LF5
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r6,r0,#43
	sw	4(r29),r6
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L64_LF5
	nop; not filled.
L65_LF5:
	addi	r29,r29,#-16
	lhi	r6,((LC0_LF5)>>16)&0xffff
	addui	r6,r6,(LC0_LF5)&0xffff
	sw	(r29),r6
	sw	4(r29),r5
	lw	r4,(r4)
	sw	8(r29),r4
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L64_LF5:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemorySetFreemap
.data
.align 2
LC1_LF5:
.ascii "Map has %d entries, memory size is 0x%x.\n\000"
.align 2
LC2_LF5:
.ascii "Free pages start with page # 0x%x.\n\000"
.align 2
LC3_LF5:
.ascii "Initialized %d free pages.\n\000"
.text
.align 2
.proc _MemoryModuleInit
.global _MemoryModuleInit
_MemoryModuleInit:
;  Function 'MemoryModuleInit'; 0 bytes of locals, 10 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#48; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	sw	28(r29),r9
	sw	32(r29),r10
	sw	36(r29),r11
	lhi	r1,#-1
	addui	r1,r1,#0
	lw	r2,(r1)
	sgei	r1,r2,#0
	bnez	r1,L68_LF5
	nop; not filled.
	addui	r2,r2,#65535
L68_LF5:
	srai	r8,r2,#0x10
	lhi	r3,((_pagestart_LF5)>>16)&0xffff
	addui	r3,r3,(_pagestart_LF5)&0xffff
	lhi	r1,((_lastosaddress)>>16)&0xffff
	addui	r1,r1,(_lastosaddress)&0xffff
	lw	r1,(r1)
	addui	r2,r1,#65532
	sgei	r1,r2,#0
	bnez	r1,L69_LF5
	nop; not filled.
	addui	r2,r2,#65535
L69_LF5:
	srai	r1,r2,#0x10
	sw	(r3),r1
	lhi	r3,((_freemapmax_LF5)>>16)&0xffff
	addui	r3,r3,(_freemapmax_LF5)&0xffff
	addi	r2,r8,#31
	sgei	r1,r2,#0
	bnez	r1,L70_LF5
	nop; not filled.
	addi	r2,r8,#62
L70_LF5:
	srai	r1,r2,#0x5
	sw	(r3),r1
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r11,r0,#109
	sw	4(r29),r11
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L72_LF5
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r11,r0,#43
	sw	4(r29),r11
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L71_LF5
	nop; not filled.
L72_LF5:
	addi	r29,r29,#-16
	lhi	r11,((LC1_LF5)>>16)&0xffff
	addui	r11,r11,(LC1_LF5)&0xffff
	sw	(r29),r11
	lw	r1,(r3)
	sw	4(r29),r1
	sw	8(r29),r8
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L71_LF5:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r11,r0,#109
	sw	4(r29),r11
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L74_LF5
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r11,r0,#43
	sw	4(r29),r11
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L73_LF5
	nop; not filled.
L74_LF5:
	addi	r29,r29,#-8
	lhi	r11,((LC2_LF5)>>16)&0xffff
	addui	r11,r11,(LC2_LF5)&0xffff
	sw	(r29),r11
	lhi	r1,((_pagestart_LF5)>>16)&0xffff
	addui	r1,r1,(_pagestart_LF5)&0xffff
	lw	r1,(r1)
	sw	4(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L73_LF5:
	addi	r2,r0,#0
	lhi	r4,((_freemapmax_LF5)>>16)&0xffff
	addui	r4,r4,(_freemapmax_LF5)&0xffff
	lw	r1,(r4)
	slt	r1,r2,r1
	beqz	r1,L76_LF5
	nop; not filled.
	lhi	r3,((_freepages_LF5)>>16)&0xffff
	addui	r3,r3,(_freepages_LF5)&0xffff
L78_LF5:
	addi	r11,r0,#0
	sw	(r3),r11
	addi	r3,r3,#4
	addi	r2,r2,#1
	lw	r1,(r4)
	slt	r1,r2,r1
	bnez	r1,L78_LF5
	nop; not filled.
L76_LF5:
	lhi	r2,((_nfreepages_LF5)>>16)&0xffff
	addui	r2,r2,(_nfreepages_LF5)&0xffff
	addi	r11,r0,#0
	sw	(r2),r11
	lhi	r1,((_pagestart_LF5)>>16)&0xffff
	addui	r1,r1,(_pagestart_LF5)&0xffff
	lw	r4,(r1)
	slt	r1,r4,r8
	beqz	r1,L81_LF5
	nop; not filled.
	add	r7,r0,r2
	addi	r10,r0,#1
	lhi	r9,((_negativeone_LF5)>>16)&0xffff
	addui	r9,r9,(_negativeone_LF5)&0xffff
L83_LF5:
	lw	r1,(r7)
	addi	r1,r1,#1
	sw	(r7),r1
	add	r2,r0,r4
	sgei	r1,r4,#0
	bnez	r1,L85_LF5
	nop; not filled.
	addi	r2,r4,#31
L85_LF5:
	srai	r6,r2,#0x5
	slli	r1,r6,#0x5
	sub	r1,r4,r1
	sll	r3,r10,r1
	lw	r1,(r9)
	xor	r2,r3,r1
	slli	r1,r6,#0x2
	lhi	r11,((_freepages_LF5)>>16)&0xffff
	addui	r11,r11,(_freepages_LF5)&0xffff
	add	r5,r1,r11
	lw	r1,(r5)
	and	r1,r1,r2
	or	r1,r1,r3
	sw	(r5),r1
	addi	r29,r29,#-8
	lhi	r11,((_debugstr)>>16)&0xffff
	addui	r11,r11,(_debugstr)&0xffff
	sw	(r29),r11
	addi	r11,r0,#109
	sw	4(r29),r11
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L89_LF5
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r11,((_debugstr)>>16)&0xffff
	addui	r11,r11,(_debugstr)&0xffff
	sw	(r29),r11
	addi	r11,r0,#43
	sw	4(r29),r11
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L82_LF5
	nop; not filled.
L89_LF5:
	addi	r29,r29,#-16
	lhi	r11,((LC0_LF5)>>16)&0xffff
	addui	r11,r11,(LC0_LF5)&0xffff
	sw	(r29),r11
	sw	4(r29),r6
	lw	r5,(r5)
	sw	8(r29),r5
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L82_LF5:
	addi	r4,r4,#1
	slt	r1,r4,r8
	bnez	r1,L83_LF5
	nop; not filled.
L81_LF5:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r11,r0,#109
	sw	4(r29),r11
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L92_LF5
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r11,r0,#43
	sw	4(r29),r11
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L91_LF5
	nop; not filled.
L92_LF5:
	addi	r29,r29,#-8
	lhi	r11,((LC3_LF5)>>16)&0xffff
	addui	r11,r11,(LC3_LF5)&0xffff
	sw	(r29),r11
	lhi	r1,((_nfreepages_LF5)>>16)&0xffff
	addui	r1,r1,(_nfreepages_LF5)&0xffff
	lw	r1,(r1)
	sw	4(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L91_LF5:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r9,28(r29)
	lw	r10,32(r29)
	lw	r11,36(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryModuleInit
.data
.align 2
_mapnum42_LF5:
.word 0
.align 2
LC4_LF5:
.ascii "ERROR AT THIS POINT\n\000"
.align 2
LC5_LF5:
.ascii "Allocating memory, starting with page %d\n\000"
.align 2
LC6_LF5:
.ascii "Allocated memory, from map %d, page %d, map=0x%x.\n\000"
.text
.align 2
.proc _MemoryAllocPage
.global _MemoryAllocPage
_MemoryAllocPage:
;  Function 'MemoryAllocPage'; 0 bytes of locals, 6 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	lhi	r1,((_nfreepages_LF5)>>16)&0xffff
	addui	r1,r1,(_nfreepages_LF5)&0xffff
	lw	r1,(r1)
	snei	r1,r1,#0
	bnez	r1,L111_LF5
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r7,((LC4_LF5)>>16)&0xffff
	addui	r7,r7,(LC4_LF5)&0xffff
	sw	(r29),r7
	jal	_printf
	nop; not filled.
	addi	r1,r0,#0
	addi	r29,r29,#8
	j	L110_LF5
	nop; not filled.
L111_LF5:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r7,r0,#109
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L113_LF5
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L112_LF5
	nop; not filled.
L113_LF5:
	addi	r29,r29,#-8
	lhi	r7,((LC5_LF5)>>16)&0xffff
	addui	r7,r7,(LC5_LF5)&0xffff
	sw	(r29),r7
	lhi	r1,((_mapnum42_LF5)>>16)&0xffff
	addui	r1,r1,(_mapnum42_LF5)&0xffff
	lw	r1,(r1)
	sw	4(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L112_LF5:
	lhi	r2,((_mapnum42_LF5)>>16)&0xffff
	addui	r2,r2,(_mapnum42_LF5)&0xffff
	lw	r1,(r2)
	lhi	r4,((_freepages_LF5)>>16)&0xffff
	addui	r4,r4,(_freepages_LF5)&0xffff
	slli	r1,r1,#0x2
	add	r1,r1,r4
	lw	r1,(r1)
	snei	r1,r1,#0
	bnez	r1,L115_LF5
	nop; not filled.
	lhi	r1,((_freemapmax_LF5)>>16)&0xffff
	addui	r1,r1,(_freemapmax_LF5)&0xffff
	lw	r3,(r1)
L116_LF5:
	lw	r1,(r2)
	addi	r1,r1,#1
	sw	(r2),r1
	sge	r1,r1,r3
	beqz	r1,L114_LF5
	nop; not filled.
	addi	r7,r0,#0
	sw	(r2),r7
L114_LF5:
	lw	r1,(r2)
	slli	r1,r1,#0x2
	add	r1,r1,r4
	lw	r1,(r1)
	snei	r1,r1,#0
	beqz	r1,L116_LF5
	nop; not filled.
L115_LF5:
	lhi	r1,((_mapnum42_LF5)>>16)&0xffff
	addui	r1,r1,(_mapnum42_LF5)&0xffff
	lw	r1,(r1)
	slli	r1,r1,#0x2
	lhi	r7,((_freepages_LF5)>>16)&0xffff
	addui	r7,r7,(_freepages_LF5)&0xffff
	add	r1,r1,r7
	lw	r3,(r1)
	addi	r31,r0,#0
	andi	r1,r3,#1
	bnez	r1,L120_LF5
	nop; not filled.
	addi	r2,r0,#1
L121_LF5:
	addi	r31,r31,#1
	sll	r1,r2,r31
	and	r1,r3,r1
	snei	r1,r1,#0
	beqz	r1,L121_LF5
	nop; not filled.
L120_LF5:
	addi	r1,r0,#1
	sll	r2,r1,r31
	lhi	r1,((_negativeone_LF5)>>16)&0xffff
	addui	r1,r1,(_negativeone_LF5)&0xffff
	lw	r1,(r1)
	xor	r4,r2,r1
	lhi	r5,((_mapnum42_LF5)>>16)&0xffff
	addui	r5,r5,(_mapnum42_LF5)&0xffff
	lw	r3,(r5)
	lhi	r6,((_freepages_LF5)>>16)&0xffff
	addui	r6,r6,(_freepages_LF5)&0xffff
	slli	r1,r3,#0x2
	add	r2,r1,r6
	lw	r1,(r2)
	and	r1,r1,r4
	sw	(r2),r1
	slli	r1,r3,#0x5
	add	r3,r1,r31
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r7,r0,#109
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L126_LF5
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L125_LF5
	nop; not filled.
L126_LF5:
	addi	r29,r29,#-16
	lhi	r7,((LC6_LF5)>>16)&0xffff
	addui	r7,r7,(LC6_LF5)&0xffff
	sw	(r29),r7
	lw	r1,(r5)
	sw	4(r29),r1
	sw	8(r29),r3
	slli	r1,r1,#0x2
	add	r1,r1,r6
	lw	r1,(r1)
	sw	12(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L125_LF5:
	lhi	r1,((_nfreepages_LF5)>>16)&0xffff
	addui	r1,r1,(_nfreepages_LF5)&0xffff
	lw	r2,(r1)
	addi	r2,r2,#-1
	sw	(r1),r2
	add	r1,r0,r3
L110_LF5:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryAllocPage
.data
.align 2
LC7_LF5:
.ascii "Freed page 0x%x, %d remaining.\n\000"
.text
.align 2
.proc _MemoryFreePage
.global _MemoryFreePage
_MemoryFreePage:
;  Function 'MemoryFreePage'; 0 bytes of locals, 6 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	lw	r6,(r30)
	addi	r3,r0,#1
	add	r2,r0,r6
	sgei	r1,r6,#0
	bnez	r1,L129_LF5
	nop; not filled.
	addi	r2,r6,#31
L129_LF5:
	srai	r5,r2,#0x5
	slli	r1,r5,#0x5
	sub	r1,r6,r1
	sll	r3,r3,r1
	lhi	r1,((_negativeone_LF5)>>16)&0xffff
	addui	r1,r1,(_negativeone_LF5)&0xffff
	lw	r1,(r1)
	xor	r2,r3,r1
	slli	r1,r5,#0x2
	lhi	r7,((_freepages_LF5)>>16)&0xffff
	addui	r7,r7,(_freepages_LF5)&0xffff
	add	r4,r1,r7
	lw	r1,(r4)
	and	r1,r1,r2
	or	r1,r1,r3
	sw	(r4),r1
	addi	r29,r29,#-8
	lhi	r7,((_debugstr)>>16)&0xffff
	addui	r7,r7,(_debugstr)&0xffff
	sw	(r29),r7
	addi	r7,r0,#109
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L133_LF5
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r7,((_debugstr)>>16)&0xffff
	addui	r7,r7,(_debugstr)&0xffff
	sw	(r29),r7
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L128_LF5
	nop; not filled.
L133_LF5:
	addi	r29,r29,#-16
	lhi	r7,((LC0_LF5)>>16)&0xffff
	addui	r7,r7,(LC0_LF5)&0xffff
	sw	(r29),r7
	sw	4(r29),r5
	lw	r4,(r4)
	sw	8(r29),r4
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L128_LF5:
	lhi	r2,((_nfreepages_LF5)>>16)&0xffff
	addui	r2,r2,(_nfreepages_LF5)&0xffff
	lw	r1,(r2)
	addi	r1,r1,#1
	sw	(r2),r1
	addi	r29,r29,#-8
	lhi	r3,((_debugstr)>>16)&0xffff
	addui	r3,r3,(_debugstr)&0xffff
	sw	(r29),r3
	addi	r7,r0,#109
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L135_LF5
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r3
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L134_LF5
	nop; not filled.
L135_LF5:
	addi	r29,r29,#-16
	lhi	r7,((LC7_LF5)>>16)&0xffff
	addui	r7,r7,(LC7_LF5)&0xffff
	sw	(r29),r7
	sw	4(r29),r6
	lw	r2,(r2)
	sw	8(r29),r2
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L134_LF5:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryFreePage
.align 2
.proc _MemoryTranslateUserToSystem
.global _MemoryTranslateUserToSystem
_MemoryTranslateUserToSystem:
;  Function 'MemoryTranslateUserToSystem'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r3,(r30)
	lw	r1,4(r30)
	srli	r31,r1,#0x10
	andi	r2,r1,#0xffff
	lw	r1,160(r3)
	sgt	r1,r31,r1
	bnez	r1,L139_LF5
	nop; not filled.
	slli	r1,r31,#0x2
	add	r1,r1,r3
	lw	r1,96(r1)
	addi	r4,r0,#-8
	and	r1,r1,r4
	add	r1,r1,r2
	j	L140_LF5
	nop; not filled.
L139_LF5:
	addi	r1,r0,#0
L140_LF5:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryTranslateUserToSystem
.align 2
.proc _MemoryCopySystemToUser
.global _MemoryCopySystemToUser
_MemoryCopySystemToUser:
;  Function 'MemoryCopySystemToUser'; 0 bytes of locals, 8 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#40; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	sw	28(r29),r9
	lw	r7,(r30)
	lw	r5,4(r30)
	lw	r4,8(r30)
	lw	r3,12(r30)
	addi	r6,r0,#0
	sgti	r1,r3,#0
	beqz	r1,L167_LF5
	nop; not filled.
	lhi	r8,#1
	addui	r8,r8,#0
L168_LF5:
	srli	r2,r4,#0x10
	andi	r31,r4,#0xffff
	lw	r1,160(r7)
	sgt	r1,r2,r1
	beqz	r1,L170_LF5
	nop; not filled.
	addi	r31,r0,#0
	j	L169_LF5
	nop; not filled.
L170_LF5:
	slli	r1,r2,#0x2
	add	r1,r1,r7
	lw	r1,96(r1)
	addi	r9,r0,#-8
	and	r1,r1,r9
	add	r31,r1,r31
L169_LF5:
	snei	r1,r31,#0
	beqz	r1,L167_LF5
	nop; not filled.
	andi	r1,r31,#65535
	sub	r2,r8,r1
	sgt	r1,r2,r3
	beqz	r1,L172_LF5
	nop; not filled.
	add	r2,r0,r3
L172_LF5:
	addi	r29,r29,#-16
	sw	(r29),r5
	sw	4(r29),r31
	sw	8(r29),r2
	jal	_bcopy
	nop; not filled.
	addi	r29,r29,#16
	sub	r3,r3,r2
	add	r6,r6,r2
	add	r5,r5,r2
	add	r4,r4,r2
	sgti	r1,r3,#0
	bnez	r1,L168_LF5
	nop; not filled.
L167_LF5:
	add	r1,r0,r6
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r9,28(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryCopySystemToUser
.align 2
.proc _MemoryCopyUserToSystem
.global _MemoryCopyUserToSystem
_MemoryCopyUserToSystem:
;  Function 'MemoryCopyUserToSystem'; 0 bytes of locals, 8 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#40; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	sw	28(r29),r9
	lw	r7,(r30)
	lw	r5,8(r30)
	lw	r4,4(r30)
	lw	r3,12(r30)
	addi	r6,r0,#0
	sgti	r1,r3,#0
	beqz	r1,L191_LF5
	nop; not filled.
	lhi	r8,#1
	addui	r8,r8,#0
L192_LF5:
	srli	r2,r4,#0x10
	andi	r31,r4,#0xffff
	lw	r1,160(r7)
	sgt	r1,r2,r1
	beqz	r1,L194_LF5
	nop; not filled.
	addi	r31,r0,#0
	j	L193_LF5
	nop; not filled.
L194_LF5:
	slli	r1,r2,#0x2
	add	r1,r1,r7
	lw	r1,96(r1)
	addi	r9,r0,#-8
	and	r1,r1,r9
	add	r31,r1,r31
L193_LF5:
	snei	r1,r31,#0
	beqz	r1,L191_LF5
	nop; not filled.
	andi	r1,r31,#65535
	sub	r2,r8,r1
	sgt	r1,r2,r3
	beqz	r1,L197_LF5
	nop; not filled.
	add	r2,r0,r3
L197_LF5:
	addi	r29,r29,#-16
	sw	(r29),r31
	sw	4(r29),r5
	sw	8(r29),r2
	jal	_bcopy
	nop; not filled.
	addi	r29,r29,#16
	sub	r3,r3,r2
	add	r6,r6,r2
	add	r5,r5,r2
	add	r4,r4,r2
	sgti	r1,r3,#0
	bnez	r1,L192_LF5
	nop; not filled.
L191_LF5:
	add	r1,r0,r6
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r9,28(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryCopyUserToSystem
.align 2
.proc _MemorySetupPte
.global _MemorySetupPte
_MemorySetupPte:
;  Function 'MemorySetupPte'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	slli	r1,r1,#0x10
	ori	r1,r1,#1
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemorySetupPte
.align 2
.proc _MemoryFreePte
.global _MemoryFreePte
_MemoryFreePte:
;  Function 'MemoryFreePte'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	addi	r29,r29,#-8
	lhu	r1,(r30)
	sw	(r29),r1
	jal	_MemoryFreePage
	nop; not filled.
	addi	r29,r29,#8
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryFreePte
.align 2
.proc _MemoryPteToPage
.global _MemoryPteToPage
_MemoryPteToPage:
;  Function 'MemoryPteToPage'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	addi	r31,r0,#-8
	and	r1,r1,r31
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryPteToPage
.data
.align 2
_invalidOps61_LF5:
.word 13316
.align 2
LC8_LF5:
.ascii "Operand for instruction %08x is 0x%x (reg=<%d,0x%x>)\n\000"
.text
.align 2
.proc _MemoryGetOperandAddress
.global _MemoryGetOperandAddress
_MemoryGetOperandAddress:
;  Function 'MemoryGetOperandAddress'; 0 bytes of locals, 6 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	lw	r2,(r30)
	lw	r5,4(r30)
	srli	r1,r5,#0x1a
	addi	r31,r1,#-32
	sgtui	r1,r31,#15
	bnez	r1,L214_LF5
	nop; not filled.
	lhi	r1,((_invalidOps61_LF5)>>16)&0xffff
	addui	r1,r1,(_invalidOps61_LF5)&0xffff
	lw	r1,(r1)
	srl	r1,r1,r31
	andi	r1,r1,#1
	beqz	r1,L213_LF5
	nop; not filled.
L214_LF5:
	addi	r1,r0,#-1
	j	L218_LF5
	nop; not filled.
L213_LF5:
	srli	r1,r5,#0x15
	andi	r6,r1,#31
	andi	r31,r5,#0xffff
	srli	r1,r31,#0xf
	beqz	r1,L215_LF5
	nop; not filled.
	lhi	r7,#-1
	addui	r7,r7,#0
	or	r31,r31,r7
L215_LF5:
	lw	r2,(r2)
	slli	r1,r6,#0x2
	add	r1,r1,r2
	lw	r3,40(r1)
	add	r4,r3,r31
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r7,r0,#109
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L217_LF5
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L216_LF5
	nop; not filled.
L217_LF5:
	addi	r29,r29,#-24
	lhi	r7,((LC8_LF5)>>16)&0xffff
	addui	r7,r7,(LC8_LF5)&0xffff
	sw	(r29),r7
	sw	4(r29),r5
	sw	8(r29),r4
	sw	12(r29),r6
	sw	16(r29),r3
	jal	_printf
	nop; not filled.
	addi	r29,r29,#24
L216_LF5:
	add	r1,r0,r4
L218_LF5:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryGetOperandAddress
.data
.align 2
_pagestart_LF5:
.space 4
.align 2
_freemapmax_LF5:
.space 4
.align 2
_nfreepages_LF5:
.space 4
.align 2
_freepages_LF5:
.space 8192
; Compiled by GCC
.text
.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r2,3(r30)
	addi	r31,r0,#0
	andi	r1,r2,#0x00ff
	seqi	r1,r1,#32
	bnez	r1,L6_LF6
	nop; not filled.
	addi	r1,r2,#-9
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#1
	beqz	r1,L5_LF6
	nop; not filled.
L6_LF6:
	addi	r31,r0,#1
L5_LF6:
	add	r1,r0,r31
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r31,3(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	bnez	r1,L12_LF6
	nop; not filled.
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#5
	bnez	r1,L12_LF6
	nop; not filled.
	andi	r1,r31,#0x00ff
	snei	r1,r1,#65
	bnez	r1,L11_LF6
	nop; not filled.
L12_LF6:
	addi	r2,r0,#1
L11_LF6:
	add	r1,r0,r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
.align 2
.proc _dstrcpy
.global _dstrcpy
_dstrcpy:
;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	lw	r2,4(r30)
	add	r3,r0,r31
L19_LF6:
	lb	r1,(r2)
	sb	(r31),r1
	addi	r2,r2,#1
	addi	r31,r31,#1
	andi	r1,r1,#0x00ff
	snei	r1,r1,#0
	bnez	r1,L19_LF6
	nop; not filled.
	add	r1,r0,r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrcpy
.align 2
.proc _dstrncpy
.global _dstrncpy
_dstrncpy:
;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r2,(r30)
	lw	r3,4(r30)
	lw	r31,8(r30)
	add	r4,r0,r2
	j	L37_LF6
	nop; not filled.
L34_LF6:
	lb	r1,(r3)
	sb	(r2),r1
	addi	r3,r3,#1
	addi	r2,r2,#1
	andi	r1,r1,#0x00ff
	snei	r1,r1,#0
	beqz	r1,L32_LF6
	nop; not filled.
L37_LF6:
	add	r1,r0,r31
	addi	r31,r31,#-1
	slei	r1,r1,#0
	beqz	r1,L34_LF6
	nop; not filled.
L32_LF6:
	add	r1,r0,r4
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrncpy
.align 2
.proc _dstrcat
.global _dstrcat
_dstrcat:
;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	add	r3,r0,r31
	lbu	r1,(r3)
	snei	r1,r1,#0
	beqz	r1,L50_LF6
	nop; not filled.
L51_LF6:
	addi	r31,r31,#1
	lbu	r1,(r31)
	snei	r1,r1,#0
	bnez	r1,L51_LF6
	nop; not filled.
L50_LF6:
	add	r2,r0,r31
	lw	r31,4(r30)
L54_LF6:
	lb	r1,(r31)
	sb	(r2),r1
	addi	r31,r31,#1
	addi	r2,r2,#1
	andi	r1,r1,#0x00ff
	snei	r1,r1,#0
	bnez	r1,L54_LF6
	nop; not filled.
	add	r1,r0,r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrcat
.align 2
.proc _dstrncmp
.global _dstrncmp
_dstrncmp:
;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r3,(r30)
	lw	r4,4(r30)
	lw	r5,8(r30)
	addi	r2,r0,#0
	slt	r1,r2,r5
	beqz	r1,L73_LF6
	nop; not filled.
L75_LF6:
	lbu	r31,(r4)
	snei	r1,r31,#0
	beqz	r1,L86_LF6
	nop; not filled.
	lbu	r1,(r3)
	sne	r1,r1,r31
	bnez	r1,L73_LF6
	nop; not filled.
	addi	r3,r3,#1
	addi	r4,r4,#1
	addi	r2,r2,#1
	slt	r1,r2,r5
	bnez	r1,L75_LF6
	nop; not filled.
L73_LF6:
	seq	r1,r2,r5
	beqz	r1,L80_LF6
	nop; not filled.
L86_LF6:
	addi	r1,r0,#0
	j	L84_LF6
	nop; not filled.
L80_LF6:
	lbu	r31,(r3)
	lbu	r3,(r4)
	sub	r1,r31,r3
	sgei	r1,r1,#0
	addi	r2,r0,#-1
	beqz	r1,L82_LF6
	nop; not filled.
	sne	r2,r31,r3
L82_LF6:
	add	r1,r0,r2
L84_LF6:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrncmp
.align 2
.proc _dstrlen
.global _dstrlen
_dstrlen:
;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lw	r31,(r30)
	addi	r2,r0,#0
	j	L97_LF6
	nop; not filled.
L95_LF6:
	addi	r2,r2,#1
L97_LF6:
	lbu	r1,(r31)
	addi	r31,r31,#1
	snei	r1,r1,#0
	bnez	r1,L95_LF6
	nop; not filled.
	add	r1,r0,r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrlen
.align 2
.proc _dstrstr
.global _dstrstr
_dstrstr:
;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	lw	r5,(r30)
	lw	r7,4(r30)
	addi	r3,r0,#0
	lbu	r1,(r7)
	addi	r2,r7,#1
	snei	r1,r1,#0
	beqz	r1,L125_LF6
	nop; not filled.
L126_LF6:
	addi	r3,r3,#1
	lbu	r1,(r2)
	addi	r2,r2,#1
	snei	r1,r1,#0
	bnez	r1,L126_LF6
	nop; not filled.
L125_LF6:
	add	r6,r0,r3
	j	L149_LF6
	nop; not filled.
L130_LF6:
	add	r3,r0,r5
	add	r4,r0,r7
	addi	r2,r0,#0
	slt	r1,r2,r6
	beqz	r1,L134_LF6
	nop; not filled.
L136_LF6:
	lbu	r31,(r4)
	snei	r1,r31,#0
	beqz	r1,L150_LF6
	nop; not filled.
	lbu	r1,(r3)
	sne	r1,r1,r31
	bnez	r1,L134_LF6
	nop; not filled.
	addi	r3,r3,#1
	addi	r4,r4,#1
	addi	r2,r2,#1
	slt	r1,r2,r6
	bnez	r1,L136_LF6
	nop; not filled.
L134_LF6:
	seq	r1,r2,r6
	beqz	r1,L141_LF6
	nop; not filled.
L150_LF6:
	addi	r1,r0,#0
	j	L132_LF6
	nop; not filled.
L141_LF6:
	lbu	r3,(r3)
	lbu	r2,(r4)
	sub	r1,r3,r2
	sgei	r1,r1,#0
	addi	r31,r0,#-1
	beqz	r1,L143_LF6
	nop; not filled.
	sne	r31,r3,r2
L143_LF6:
	add	r1,r0,r31
L132_LF6:
	snei	r1,r1,#0
	bnez	r1,L131_LF6
	nop; not filled.
	add	r1,r0,r5
	j	L146_LF6
	nop; not filled.
L131_LF6:
	addi	r5,r5,#1
L149_LF6:
	lbu	r1,(r5)
	snei	r1,r1,#0
	bnez	r1,L130_LF6
	nop; not filled.
	addi	r1,r0,#0
L146_LF6:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrstr
.align 2
.proc _dmindex
.global _dmindex
_dmindex:
;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r4,(r30)
	lw	r6,4(r30)
	lbu	r1,(r4)
	snei	r1,r1,#0
	beqz	r1,L164_LF6
	nop; not filled.
	add	r5,r0,r1
L165_LF6:
	add	r2,r0,r6
	lb	r31,(r6)
	andi	r1,r31,#0x00ff
	snei	r1,r1,#0
	beqz	r1,L163_LF6
	nop; not filled.
	lbu	r3,(r4)
L169_LF6:
	andi	r1,r31,#0x00ff
	seq	r1,r3,r1
	beqz	r1,L168_LF6
	nop; not filled.
	add	r1,r0,r4
	j	L173_LF6
	nop; not filled.
L168_LF6:
	addi	r2,r2,#1
	lb	r31,(r2)
	andi	r1,r31,#0x00ff
	snei	r1,r1,#0
	bnez	r1,L169_LF6
	nop; not filled.
L163_LF6:
	bnez	r5,L165_LF6
	nop; not filled.
L164_LF6:
	addi	r1,r0,#0
L173_LF6:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dmindex
.align 2
.proc _dindex
.global _dindex
_dindex:
;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	lw	r3,4(r30)
	j	L187_LF6
	nop; not filled.
L183_LF6:
	andi	r1,r31,#0x00ff
	seq	r1,r1,r3
	beqz	r1,L184_LF6
	nop; not filled.
	add	r1,r0,r2
	j	L186_LF6
	nop; not filled.
L184_LF6:
	addi	r2,r2,#1
L187_LF6:
	lb	r31,(r2)
	andi	r1,r31,#0x00ff
	snei	r1,r1,#0
	bnez	r1,L183_LF6
	nop; not filled.
	addi	r1,r0,#0
L186_LF6:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dindex
.align 2
.proc _ditoa
.global _ditoa
_ditoa:
;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r3,(r30)
	lw	r4,4(r30)
	slti	r1,r3,#0
	beqz	r1,L203_LF6
	nop; not filled.
	addi	r6,r0,(#0x2d)&0xff
	j	L216_LF6
	nop; not filled.
L203_LF6:
	snei	r1,r3,#0
	bnez	r1,L205_LF6
	nop; not filled.
	addi	r6,r0,(#0x30)&0xff
L216_LF6:
	sb	(r4),r6
	addi	r4,r4,#1
	j	L204_LF6
	nop; not filled.
L205_LF6:
	addi	r31,r0,#1
	sle	r1,r31,r3
	beqz	r1,L208_LF6
	nop; not filled.
L209_LF6:
	slli	r1,r31,#0x2
	add	r1,r1,r31
	slli	r31,r1,#0x1
	sle	r1,r31,r3
	bnez	r1,L209_LF6
	nop; not filled.
L208_LF6:
	addi	r5,r0,#10
L212_LF6:
	movi2fp	f0,r31
	movi2fp	f1,r5
	div	f0,f0,f1
	movfp2i	r31,f0
	movi2fp	f0,r3
	movi2fp	f1,r31
	div	f0,f0,f1
	movfp2i	r2,f0
	addi	r1,r2,#48
	sb	(r4),r1
	addi	r4,r4,#1
	movi2fp	f0,r2
	movi2fp	f1,r31
	mult	f0,f0,f1
	movfp2i	r1,f0
	sub	r3,r3,r1
	sgti	r1,r31,#1
	bnez	r1,L212_LF6
	nop; not filled.
L204_LF6:
	addi	r6,r0,(#0x0)&0xff
	sb	(r4),r6
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ditoa
.align 2
.proc _dstrtol
.global _dstrtol
_dstrtol:
;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#32; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r2,(r30)
	lw	r5,4(r30)
	lw	r4,8(r30)
	addi	r3,r0,#0
	j	L247_LF6
	nop; not filled.
L220_LF6:
	addi	r2,r2,#1
L247_LF6:
	lb	r31,(r2)
	andi	r1,r31,#0x00ff
	seqi	r1,r1,#32
	bnez	r1,L220_LF6
	nop; not filled.
	addi	r1,r31,#-9
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#1
	bnez	r1,L220_LF6
	nop; not filled.
	snei	r1,r5,#0
	beqz	r1,L222_LF6
	nop; not filled.
	sw	(r5),r2
L222_LF6:
	lbu	r31,(r2)
	snei	r1,r31,#0
	beqz	r1,L248_LF6
	nop; not filled.
	seqi	r1,r31,#45
	beqz	r1,L224_LF6
	nop; not filled.
	addi	r6,r0,#-1
	addi	r2,r2,#1
	j	L225_LF6
	nop; not filled.
L224_LF6:
	addi	r6,r0,#1
L225_LF6:
	snei	r1,r4,#0
	bnez	r1,L226_LF6
	nop; not filled.
	lbu	r1,(r2)
	seqi	r1,r1,#48
	beqz	r1,L227_LF6
	nop; not filled.
	addi	r2,r2,#1
	lbu	r31,(r2)
	seqi	r1,r31,#120
	bnez	r1,L229_LF6
	nop; not filled.
	seqi	r1,r31,#88
	beqz	r1,L228_LF6
	nop; not filled.
L229_LF6:
	addi	r4,r0,#16
	addi	r2,r2,#1
	j	L226_LF6
	nop; not filled.
L228_LF6:
	addi	r4,r0,#8
	j	L226_LF6
	nop; not filled.
L227_LF6:
	addi	r4,r0,#10
L226_LF6:
	addi	r1,r4,#-1
	sgtui	r1,r1,#15
	beqz	r1,L233_LF6
	nop; not filled.
L248_LF6:
	add	r1,r0,r3
	j	L245_LF6
	nop; not filled.
L233_LF6:
	lb	r31,(r2)
	addi	r1,r31,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	beqz	r1,L236_LF6
	nop; not filled.
	andi	r1,r31,#0x00ff
	addi	r1,r1,#-48
	j	L237_LF6
	nop; not filled.
L236_LF6:
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#25
	beqz	r1,L238_LF6
	nop; not filled.
	andi	r1,r31,#0x00ff
	addi	r1,r1,#-87
	j	L237_LF6
	nop; not filled.
L238_LF6:
	addi	r1,r31,#-65
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#25
	beqz	r1,L240_LF6
	nop; not filled.
	andi	r1,r31,#0x00ff
	addi	r1,r1,#-55
	j	L237_LF6
	nop; not filled.
L240_LF6:
	addi	r1,r0,#1000
L237_LF6:
	slt	r31,r1,r4
	beqz	r31,L246_LF6
	nop; not filled.
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	add	r3,r3,r1
	addi	r2,r2,#1
	bnez	r31,L233_LF6
	nop; not filled.
L246_LF6:
	snei	r1,r5,#0
	beqz	r1,L244_LF6
	nop; not filled.
	sw	(r5),r2
L244_LF6:
	movi2fp	f0,r3
	movi2fp	f1,r6
	mult	f0,f0,f1
	movfp2i	r1,f0
L245_LF6:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dstrtol
.align 2
.proc _bcopy
.global _bcopy
_bcopy:
;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r3,(r30)
	lw	r2,4(r30)
	lw	r31,8(r30)
	j	L259_LF6
	nop; not filled.
L257_LF6:
	lb	r4,(r3)
	sb	(r2),r4
	addi	r3,r3,#1
	addi	r2,r2,#1
L259_LF6:
	add	r1,r0,r31
	addi	r31,r31,#-1
	sgti	r1,r1,#0
	bnez	r1,L257_LF6
	nop; not filled.
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _bcopy
.align 2
.proc _bzero
.global _bzero
_bzero:
;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	lw	r31,4(r30)
	j	L270_LF6
	nop; not filled.
L268_LF6:
	addi	r3,r0,(#0x0)&0xff
	sb	(r2),r3
	addi	r2,r2,#1
L270_LF6:
	add	r1,r0,r31
	addi	r31,r31,#-1
	sgti	r1,r1,#0
	bnez	r1,L268_LF6
	nop; not filled.
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _bzero
; Compiled by GCC

.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r2,3(r30)
	addi	r31,r0,#0
	andi	r1,r2,#0x00ff
	seqi	r1,r1,#32
	bnez	r1,L6_LF7
	nop; not filled.
	addi	r1,r2,#-9
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#1
	beqz	r1,L5_LF7
	nop; not filled.
L6_LF7:
	addi	r31,r0,#1
L5_LF7:
	add	r1,r0,r31
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r31,3(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	bnez	r1,L12_LF7
	nop; not filled.
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#5
	bnez	r1,L12_LF7
	nop; not filled.
	andi	r1,r31,#0x00ff
	snei	r1,r1,#65
	bnez	r1,L11_LF7
	nop; not filled.
L12_LF7:
	addi	r2,r0,#1
L11_LF7:
	add	r1,r0,r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#15
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#0
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	lw	r2,(r30)
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.align 2
.proc _QueueLinkInit
.global _QueueLinkInit
_QueueLinkInit:
;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	lw	r2,4(r30)
	addi	r31,r0,#0
	sw	(r1),r31
	sw	12(r1),r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLinkInit
.align 2
.proc _QueueNext
.global _QueueNext
_QueueNext:
;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueNext
.align 2
.proc _QueuePrev
.global _QueuePrev
_QueuePrev:
;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueuePrev
.align 2
.proc _QueueFirst
.global _QueueFirst
_QueueFirst:
;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueFirst
.align 2
.proc _QueueLast
.global _QueueLast
_QueueLast:
;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLast
.align 2
.proc _QueueInsertAfter
.global _QueueInsertAfter
_QueueInsertAfter:
;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r2,4(r30)
	lw	r1,8(r30)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertAfter
.align 2
.proc _QueueInsertFirst
.global _QueueInsertFirst
_QueueInsertFirst:
;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	sw	8(r1),r3
	sw	4(r1),r3
	lw	r31,(r3)
	sw	(r1),r31
	sw	(r3),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertFirst
.align 2
.proc _QueueInsertLast
.global _QueueInsertLast
_QueueInsertLast:
;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	lw	r2,4(r3)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertLast
.align 2
.proc _QueueRemove
.global _QueueRemove
_QueueRemove:
;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	lw	r1,8(r31)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L44_LF7
	nop; not filled.
	lw	r1,4(r31)
	lw	r3,(r31)
	sw	(r1),r3
	lw	r1,(r31)
	lw	r3,4(r31)
	sw	4(r1),r3
	lw	r2,8(r31)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L44_LF7:
	addi	r3,r0,#0
	sw	(r31),r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueRemove
.align 2
.proc _QueueLength
.global _QueueLength
_QueueLength:
;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLength
.align 2
.proc _QueueEmpty
.global _QueueEmpty
_QueueEmpty:
;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	seqi	r1,r1,#0
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueEmpty
.data
.align 2
_processQuantum_LF7:
.word 100000
.align 2
LC0_LF7:
.ascii "Entering ProcessModuleInit\n\000"
.align 2
LC1_LF7:
.ascii "Initializing PCB %d @ 0x%x.\n\000"
.align 2
LC2_LF7:
.ascii "Leaving ProcessModuleInit\n\000"
.text
.align 2
.proc _ProcessModuleInit
.global _ProcessModuleInit
_ProcessModuleInit:
;  Function 'ProcessModuleInit'; 0 bytes of locals, 7 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#40; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r8,r0,#112
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L53_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r8,r0,#43
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L52_LF7
	nop; not filled.
L53_LF7:
	addi	r29,r29,#-8
	lhi	r8,((LC0_LF7)>>16)&0xffff
	addui	r8,r8,(LC0_LF7)&0xffff
	sw	(r29),r8
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L52_LF7:
	addi	r29,r29,#-8
	lhi	r8,((_freepcbs_LF7)>>16)&0xffff
	addui	r8,r8,(_freepcbs_LF7)&0xffff
	sw	(r29),r8
	jal	_QueueInit
	nop; not filled.
	addi	r29,r29,#8
	lhi	r2,((_runQueue_LF7)>>16)&0xffff
	addui	r2,r2,(_runQueue_LF7)&0xffff
	addi	r3,r2,#372
L57_LF7:
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_QueueInit
	nop; not filled.
	addi	r29,r29,#8
	addi	r2,r2,#12
	sle	r1,r2,r3
	bnez	r1,L57_LF7
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r8,((_waitQueue_LF7)>>16)&0xffff
	addui	r8,r8,(_waitQueue_LF7)&0xffff
	sw	(r29),r8
	jal	_QueueInit
	nop; not filled.
	lhi	r8,((_zombieQueue_LF7)>>16)&0xffff
	addui	r8,r8,(_zombieQueue_LF7)&0xffff
	sw	(r29),r8
	jal	_QueueInit
	nop; not filled.
	addi	r4,r0,#0
	addi	r29,r29,#8
	lhi	r7,((_debugstr)>>16)&0xffff
	addui	r7,r7,(_debugstr)&0xffff
	lhi	r1,((_pcbs_LF7)>>16)&0xffff
	addui	r1,r1,(_pcbs_LF7)&0xffff
	lhi	r5,((_freepcbs_LF7)>>16)&0xffff
	addui	r5,r5,(_freepcbs_LF7)&0xffff
	addi	r2,r1,#164
	add	r3,r0,r1
	add	r6,r0,r1
L62_LF7:
	addi	r29,r29,#-8
	sw	(r29),r7
	addi	r8,r0,#112
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L64_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r7
	addi	r8,r0,#43
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L63_LF7
	nop; not filled.
L64_LF7:
	addi	r29,r29,#-16
	lhi	r8,((LC1_LF7)>>16)&0xffff
	addui	r8,r8,(LC1_LF7)&0xffff
	sw	(r29),r8
	sw	4(r29),r4
	sw	8(r29),r6
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L63_LF7:
	addi	r8,r0,#1
	sw	12(r3),r8
	addi	r8,r0,#0
	sw	(r2),r8
	sw	12(r2),r3
	sw	8(r2),r5
	sw	4(r2),r5
	lw	r8,(r5)
	sw	(r2),r8
	sw	(r5),r2
	lw	r1,(r2)
	sw	4(r1),r2
	lw	r1,8(r5)
	addi	r1,r1,#1
	sw	8(r5),r1
	addi	r2,r2,#180
	addi	r3,r3,#180
	addi	r6,r6,#180
	addi	r4,r4,#1
	slei	r1,r4,#31
	bnez	r1,L62_LF7
	nop; not filled.
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	addi	r8,r0,#0
	sw	(r1),r8
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r8,r0,#112
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L70_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r8,r0,#43
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L69_LF7
	nop; not filled.
L70_LF7:
	addi	r29,r29,#-8
	lhi	r8,((LC2_LF7)>>16)&0xffff
	addui	r8,r8,(LC2_LF7)&0xffff
	sw	(r29),r8
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L69_LF7:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ProcessModuleInit
.align 2
.proc _ProcessSetStatus
.global _ProcessSetStatus
_ProcessSetStatus:
;  Function 'ProcessSetStatus'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r2,4(r30)
	lw	r1,12(r3)
	addi	r31,r0,#-64
	and	r1,r1,r31
	or	r1,r1,r2
	sw	12(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ProcessSetStatus
.align 2
.proc _ProcessFreeResources
.global _ProcessFreeResources
_ProcessFreeResources:
;  Function 'ProcessFreeResources'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r4,(r30)
	lhi	r3,((_freepcbs_LF7)>>16)&0xffff
	addui	r3,r3,(_freepcbs_LF7)&0xffff
	addi	r2,r4,#164
	lw	r1,4(r3)
	sw	172(r4),r3
	sw	168(r4),r1
	lw	r5,(r1)
	sw	(r2),r5
	sw	(r1),r2
	lw	r1,(r2)
	sw	4(r1),r2
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r3,160(r4)
	addi	r2,r0,#0
	slt	r1,r2,r3
	beqz	r1,L103_LF7
	nop; not filled.
L95_LF7:
	addi	r29,r29,#-8
	sw	(r29),r4
	sw	4(r29),r2
	jal	_MemoryFreeSharedPte
	nop; not filled.
	addi	r29,r29,#8
	addi	r2,r2,#1
	slt	r1,r2,r3
	bnez	r1,L95_LF7
	nop; not filled.
	addi	r2,r0,#0
L103_LF7:
	lw	r1,160(r4)
	slt	r1,r2,r1
	beqz	r1,L98_LF7
	nop; not filled.
	add	r3,r0,r4
L100_LF7:
	addi	r29,r29,#-8
	lw	r5,96(r3)
	sw	(r29),r5
	jal	_MemoryFreePte
	nop; not filled.
	addi	r29,r29,#8
	addi	r3,r3,#4
	addi	r2,r2,#1
	lw	r1,160(r4)
	slt	r1,r2,r1
	bnez	r1,L100_LF7
	nop; not filled.
L98_LF7:
	addi	r29,r29,#-8
	lhu	r1,8(r4)
	sw	(r29),r1
	jal	_MemoryFreePage
	nop; not filled.
	addi	r29,r29,#8
	lw	r1,12(r4)
	addi	r5,r0,#-64
	and	r1,r1,r5
	ori	r1,r1,#1
	sw	12(r4),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ProcessFreeResources
.align 2
.proc _ProcessSetResult
.global _ProcessSetResult
_ProcessSetResult:
;  Function 'ProcessSetResult'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,4(r30)
	sw	44(r1),r31
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ProcessSetResult
.data
.align 2
LC3_LF7:
.ascii "Now entering ProcessSchedule (cur=0x%x, %d ready)\n\000"
.align 2
LC4_LF7:
.ascii "No runnable processes - exiting!\n\000"
.align 2
LC5_LF7:
.ascii "About to switch to PCB 0x%x,flags=0x%x @ 0x%x\n\000"
.align 2
LC6_LF7:
.ascii "Freeing zombie PCB 0x%x.\n\000"
.align 2
LC7_LF7:
.ascii "Leaving ProcessSchedule (cur=0x%x)\n\000"
.text
.align 2
.proc _ProcessSchedule
.global _ProcessSchedule
_ProcessSchedule:
;  Function 'ProcessSchedule'; 0 bytes of locals, 7 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#40; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r8,r0,#112
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L108_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r8,r0,#43
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L107_LF7
	nop; not filled.
L108_LF7:
	lhi	r1,((_runQueue_LF7)>>16)&0xffff
	addui	r1,r1,(_runQueue_LF7)&0xffff
	lw	r2,8(r1)
	addi	r29,r29,#-16
	lhi	r8,((LC3_LF7)>>16)&0xffff
	addui	r8,r8,(LC3_LF7)&0xffff
	sw	(r29),r8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	4(r29),r1
	sw	8(r29),r2
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L107_LF7:
	lhi	r5,((_runQueue_LF7)>>16)&0xffff
	addui	r5,r5,(_runQueue_LF7)&0xffff
	lw	r1,8(r5)
	seqi	r1,r1,#0
	beqz	r1,L110_LF7
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r8,((LC4_LF7)>>16)&0xffff
	addui	r8,r8,(LC4_LF7)&0xffff
	sw	(r29),r8
	jal	_printf
	nop; not filled.
	jal	_exitsim
	nop; not filled.
	addi	r29,r29,#8
L110_LF7:
	lw	r1,(r5)
	lw	r4,12(r1)
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	seq	r1,r4,r1
	beqz	r1,L114_LF7
	nop; not filled.
	addi	r3,r4,#164
	lw	r1,172(r4)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L116_LF7
	nop; not filled.
	lw	r1,168(r4)
	lw	r8,(r3)
	sw	(r1),r8
	lw	r1,(r3)
	lw	r8,168(r4)
	sw	4(r1),r8
	lw	r2,172(r4)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L116_LF7:
	addi	r8,r0,#0
	sw	(r3),r8
	lw	r1,4(r5)
	sw	172(r4),r5
	sw	168(r4),r1
	lw	r8,(r1)
	sw	(r3),r8
	sw	(r1),r3
	lw	r1,(r3)
	sw	4(r1),r3
	lw	r1,8(r5)
	addi	r1,r1,#1
	sw	8(r5),r1
L114_LF7:
	lhi	r1,((_runQueue_LF7)>>16)&0xffff
	addui	r1,r1,(_runQueue_LF7)&0xffff
	lw	r1,(r1)
	lw	r4,12(r1)
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	sw	(r1),r4
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r8,r0,#112
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L122_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r8,r0,#43
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L121_LF7
	nop; not filled.
L122_LF7:
	addi	r29,r29,#-16
	lhi	r8,((LC5_LF7)>>16)&0xffff
	addui	r8,r8,(LC5_LF7)&0xffff
	sw	(r29),r8
	sw	4(r29),r4
	lw	r8,12(r4)
	sw	8(r29),r8
	lw	r1,4(r4)
	lw	r1,296(r1)
	sw	12(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L121_LF7:
	lhi	r7,((_zombieQueue_LF7)>>16)&0xffff
	addui	r7,r7,(_zombieQueue_LF7)&0xffff
	lhi	r6,((_debugstr)>>16)&0xffff
	addui	r6,r6,(_debugstr)&0xffff
	lhi	r5,((_freepcbs_LF7)>>16)&0xffff
	addui	r5,r5,(_freepcbs_LF7)&0xffff
L123_LF7:
	lw	r1,8(r7)
	seqi	r1,r1,#0
	bnez	r1,L124_LF7
	nop; not filled.
	lw	r1,(r7)
	lw	r4,12(r1)
	addi	r29,r29,#-8
	sw	(r29),r6
	addi	r8,r0,#112
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L130_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r6
	addi	r8,r0,#43
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L129_LF7
	nop; not filled.
L130_LF7:
	addi	r29,r29,#-8
	lhi	r8,((LC6_LF7)>>16)&0xffff
	addui	r8,r8,(LC6_LF7)&0xffff
	sw	(r29),r8
	sw	4(r29),r4
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L129_LF7:
	addi	r31,r4,#164
	lw	r1,172(r4)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L132_LF7
	nop; not filled.
	lw	r1,168(r4)
	lw	r8,(r31)
	sw	(r1),r8
	lw	r1,(r31)
	lw	r8,168(r4)
	sw	4(r1),r8
	lw	r2,172(r4)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L132_LF7:
	addi	r8,r0,#0
	sw	(r31),r8
	lw	r1,4(r5)
	sw	172(r4),r5
	sw	168(r4),r1
	lw	r8,(r1)
	sw	(r31),r8
	sw	(r1),r31
	lw	r1,(r31)
	sw	4(r1),r31
	lw	r1,8(r5)
	addi	r1,r1,#1
	sw	8(r5),r1
	lw	r3,160(r4)
	addi	r2,r0,#0
	slt	r1,r2,r3
	beqz	r1,L150_LF7
	nop; not filled.
L140_LF7:
	addi	r29,r29,#-8
	sw	(r29),r4
	sw	4(r29),r2
	jal	_MemoryFreeSharedPte
	nop; not filled.
	addi	r29,r29,#8
	addi	r2,r2,#1
	slt	r1,r2,r3
	bnez	r1,L140_LF7
	nop; not filled.
	addi	r2,r0,#0
L150_LF7:
	lw	r1,160(r4)
	slt	r1,r2,r1
	beqz	r1,L143_LF7
	nop; not filled.
	add	r3,r0,r4
L145_LF7:
	addi	r29,r29,#-8
	lw	r8,96(r3)
	sw	(r29),r8
	jal	_MemoryFreePte
	nop; not filled.
	addi	r29,r29,#8
	addi	r3,r3,#4
	addi	r2,r2,#1
	lw	r1,160(r4)
	slt	r1,r2,r1
	bnez	r1,L145_LF7
	nop; not filled.
L143_LF7:
	addi	r29,r29,#-8
	lhu	r1,8(r4)
	sw	(r29),r1
	jal	_MemoryFreePage
	nop; not filled.
	addi	r29,r29,#8
	lw	r1,12(r4)
	addi	r8,r0,#-64
	and	r1,r1,r8
	ori	r1,r1,#1
	sw	12(r4),r1
	j	L123_LF7
	nop; not filled.
L124_LF7:
	addi	r29,r29,#-8
	lhi	r1,((_processQuantum_LF7)>>16)&0xffff
	addui	r1,r1,(_processQuantum_LF7)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	jal	_TimerSet
	nop; not filled.
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r8,r0,#112
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L149_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r8,r0,#43
	sw	4(r29),r8
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L148_LF7
	nop; not filled.
L149_LF7:
	addi	r29,r29,#-8
	lhi	r8,((LC7_LF7)>>16)&0xffff
	addui	r8,r8,(LC7_LF7)&0xffff
	sw	(r29),r8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	4(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L148_LF7:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ProcessSchedule
.data
.align 2
LC8_LF7:
.ascii "Suspending PCB 0x%x (%s).\n\000"
.align 2
LC9_LF7:
.ascii "%s: %s\n\000"
.align 2
LC10_LF7:
.ascii "ProcessSuspend\000"
.align 2
LC11_LF7:
.ascii "Trying to suspend a non-running process!\n\000"
.text
.align 2
.proc _ProcessSuspend
.global _ProcessSuspend
_ProcessSuspend:
;  Function 'ProcessSuspend'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r3,(r30)
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r4,r0,#112
	sw	4(r29),r4
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L153_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r4,r0,#43
	sw	4(r29),r4
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L152_LF7
	nop; not filled.
L153_LF7:
	addi	r29,r29,#-16
	lhi	r4,((LC8_LF7)>>16)&0xffff
	addui	r4,r4,(LC8_LF7)&0xffff
	sw	(r29),r4
	sw	4(r29),r3
	addi	r1,r3,#16
	sw	8(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L152_LF7:
	lb	r4,15(r3)
	srli	r1,r4,#0x1
	andi	r1,r1,#1
	bnez	r1,L155_LF7
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r4,((LC9_LF7)>>16)&0xffff
	addui	r4,r4,(LC9_LF7)&0xffff
	sw	(r29),r4
	lhi	r1,((LC10_LF7)>>16)&0xffff
	addui	r1,r1,(LC10_LF7)&0xffff
	sw	4(r29),r1
	lhi	r4,((LC11_LF7)>>16)&0xffff
	addui	r4,r4,(LC11_LF7)&0xffff
	sw	8(r29),r4
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L155_LF7:
	lw	r1,12(r3)
	addi	r4,r0,#-64
	and	r1,r1,r4
	ori	r1,r1,#4
	sw	12(r3),r1
	addi	r31,r3,#164
	lw	r1,172(r3)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L158_LF7
	nop; not filled.
	lw	r1,168(r3)
	lw	r4,(r31)
	sw	(r1),r4
	lw	r1,(r31)
	lw	r4,168(r3)
	sw	4(r1),r4
	lw	r2,172(r3)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L158_LF7:
	addi	r4,r0,#0
	sw	(r31),r4
	lhi	r2,((_waitQueue_LF7)>>16)&0xffff
	addui	r2,r2,(_waitQueue_LF7)&0xffff
	lw	r1,4(r2)
	sw	172(r3),r2
	sw	168(r3),r1
	lw	r4,(r1)
	sw	(r31),r4
	sw	(r1),r31
	lw	r1,(r31)
	sw	4(r1),r31
	lw	r1,8(r2)
	addi	r1,r1,#1
	sw	8(r2),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ProcessSuspend
.data
.align 2
LC12_LF7:
.ascii "Waking up PCB 0x%x.\n\000"
.align 2
LC13_LF7:
.ascii "ProcessWakeup\000"
.align 2
LC14_LF7:
.ascii "Trying to wake up a non-sleeping process!\n\000"
.text
.align 2
.proc _ProcessWakeup
.global _ProcessWakeup
_ProcessWakeup:
;  Function 'ProcessWakeup'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r3,(r30)
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r4,r0,#112
	sw	4(r29),r4
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L164_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r4,r0,#43
	sw	4(r29),r4
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L163_LF7
	nop; not filled.
L164_LF7:
	addi	r29,r29,#-8
	lhi	r4,((LC12_LF7)>>16)&0xffff
	addui	r4,r4,(LC12_LF7)&0xffff
	sw	(r29),r4
	sw	4(r29),r3
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L163_LF7:
	lb	r4,15(r3)
	srli	r1,r4,#0x2
	andi	r1,r1,#1
	bnez	r1,L166_LF7
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r4,((LC9_LF7)>>16)&0xffff
	addui	r4,r4,(LC9_LF7)&0xffff
	sw	(r29),r4
	lhi	r1,((LC13_LF7)>>16)&0xffff
	addui	r1,r1,(LC13_LF7)&0xffff
	sw	4(r29),r1
	lhi	r4,((LC14_LF7)>>16)&0xffff
	addui	r4,r4,(LC14_LF7)&0xffff
	sw	8(r29),r4
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L166_LF7:
	lw	r1,12(r3)
	addi	r4,r0,#-64
	and	r1,r1,r4
	ori	r1,r1,#2
	sw	12(r3),r1
	addi	r31,r3,#164
	lw	r1,172(r3)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L169_LF7
	nop; not filled.
	lw	r1,168(r3)
	lw	r4,(r31)
	sw	(r1),r4
	lw	r1,(r31)
	lw	r4,168(r3)
	sw	4(r1),r4
	lw	r2,172(r3)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L169_LF7:
	addi	r4,r0,#0
	sw	(r31),r4
	lhi	r2,((_runQueue_LF7)>>16)&0xffff
	addui	r2,r2,(_runQueue_LF7)&0xffff
	lw	r1,4(r2)
	sw	172(r3),r2
	sw	168(r3),r1
	lw	r4,(r1)
	sw	(r31),r4
	sw	(r1),r31
	lw	r1,(r31)
	sw	4(r1),r31
	lw	r1,8(r2)
	addi	r1,r1,#1
	sw	8(r2),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ProcessWakeup
.data
.align 2
LC15_LF7:
.ascii "Entering ProcessDestroy for 0x%x.\n\000"
.align 2
LC16_LF7:
.ascii "Leaving ProcessDestroy for 0x%x.\n\000"
.text
.align 2
.proc _ProcessDestroy
.global _ProcessDestroy
_ProcessDestroy:
;  Function 'ProcessDestroy'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r3,(r30)
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r4,r0,#112
	sw	4(r29),r4
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L175_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r4,r0,#43
	sw	4(r29),r4
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L174_LF7
	nop; not filled.
L175_LF7:
	addi	r29,r29,#-8
	lhi	r4,((LC15_LF7)>>16)&0xffff
	addui	r4,r4,(LC15_LF7)&0xffff
	sw	(r29),r4
	sw	4(r29),r3
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L174_LF7:
	lw	r1,12(r3)
	addi	r4,r0,#-64
	and	r1,r1,r4
	ori	r1,r1,#16
	sw	12(r3),r1
	addi	r31,r3,#164
	lw	r1,172(r3)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L178_LF7
	nop; not filled.
	lw	r1,168(r3)
	lw	r4,(r31)
	sw	(r1),r4
	lw	r1,(r31)
	lw	r4,168(r3)
	sw	4(r1),r4
	lw	r2,172(r3)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L178_LF7:
	addi	r4,r0,#0
	sw	(r31),r4
	lhi	r2,((_zombieQueue_LF7)>>16)&0xffff
	addui	r2,r2,(_zombieQueue_LF7)&0xffff
	sw	172(r3),r2
	sw	168(r3),r2
	lw	r4,(r2)
	sw	(r31),r4
	sw	(r2),r31
	lw	r1,(r31)
	sw	4(r1),r31
	lw	r1,8(r2)
	addi	r1,r1,#1
	sw	8(r2),r1
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r4,r0,#112
	sw	4(r29),r4
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L182_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r4,r0,#43
	sw	4(r29),r4
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L181_LF7
	nop; not filled.
L182_LF7:
	addi	r29,r29,#-8
	lhi	r4,((LC16_LF7)>>16)&0xffff
	addui	r4,r4,(LC16_LF7)&0xffff
	sw	(r29),r4
	sw	4(r29),r3
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L181_LF7:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ProcessDestroy
.data
.align 2
_str52_LF7:
.space 4
.align 2
_location53_LF7:
.word 0
.text
.align 2
.proc _get_argument
.global _get_argument
_get_argument:
;  Function 'get_argument'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r2,(r30)
	snei	r1,r2,#0
	beqz	r1,L195_LF7
	nop; not filled.
	lhi	r1,((_str52_LF7)>>16)&0xffff
	addui	r1,r1,(_str52_LF7)&0xffff
	sw	(r1),r2
	lhi	r1,((_location53_LF7)>>16)&0xffff
	addui	r1,r1,(_location53_LF7)&0xffff
	addi	r5,r0,#0
	sw	(r1),r5
L195_LF7:
	lhi	r31,((_location53_LF7)>>16)&0xffff
	addui	r31,r31,(_location53_LF7)&0xffff
	lw	r3,(r31)
	lhi	r1,((_str52_LF7)>>16)&0xffff
	addui	r1,r1,(_str52_LF7)&0xffff
	lw	r2,(r1)
	add	r1,r2,r3
	lbu	r1,(r1)
	snei	r1,r1,#0
	beqz	r1,L197_LF7
	nop; not filled.
	sgti	r1,r3,#98
	beqz	r1,L196_LF7
	nop; not filled.
L197_LF7:
	addi	r1,r0,#0
	j	L204_LF7
	nop; not filled.
L205_LF7:
	addi	r1,r31,#1
	sw	(r2),r1
	j	L199_LF7
	nop; not filled.
L196_LF7:
	slei	r1,r3,#99
	beqz	r1,L199_LF7
	nop; not filled.
	add	r4,r0,r2
	add	r2,r0,r31
L201_LF7:
	lw	r31,(r2)
	add	r1,r4,r31
	lbu	r1,(r1)
	snei	r1,r1,#0
	beqz	r1,L205_LF7
	nop; not filled.
	addi	r1,r31,#1
	sw	(r2),r1
	slei	r1,r1,#99
	bnez	r1,L201_LF7
	nop; not filled.
L199_LF7:
	add	r1,r0,r3
L204_LF7:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _get_argument
.data
.align 2
LC17_LF7:
.ascii "Old interrupt value was 0x%x.\n\000"
.align 2
LC18_LF7:
.ascii "Entering ProcessFork args=0x%x 0x%x %s %d\n\000"
.align 2
LC19_LF7:
.ascii "FATAL error: no free processes!\n\000"
.align 2
LC20_LF7:
.ascii "Got a link @ 0x%x\n\000"
.align 2
LC21_LF7:
.ascii "Before restore interrupt value is 0x%x.\n\000"
.align 2
LC22_LF7:
.ascii "New interrupt value is 0x%x.\n\000"
.align 2
LC23_LF7:
.ascii "aFATAL: couldn\'t allocate memory - no free pages!\n\000"
.align 2
LC24_LF7:
.ascii "bFATAL: couldn\'t allocate system stack - no free pages!\n\000"
.align 2
LC25_LF7:
.ascii "Setting up PCB @ 0x%x (sys stack=0x%x, mem=0x%x, size=0x%x)\n\000"
.align 2
LC26_LF7:
.ascii "About to load %s\n\000"
.align 2
LC27_LF7:
.ascii "File %s -> start=0x%08x\n\000"
.align 2
LC28_LF7:
.ascii "File %s -> code @ 0x%08x (size=0x%08x)\n\000"
.align 2
LC29_LF7:
.ascii "File %s -> data @ 0x%08x (size=0x%08x)\n\000"
.align 2
LC30_LF7:
.ascii "Placing %d bytes at vaddr %08x.\n\000"
.align 2
LC31_LF7:
.ascii "Setting currentPCB=0x%x, stackframe=0x%x\n\000"
.align 2
LC32_LF7:
.ascii "Leaving ProcessFork (%s)\n\000"
.text
.align 2
.proc _ProcessFork
.global _ProcessFork
_ProcessFork:
;  Function 'ProcessFork'; 672 bytes of locals, 12 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#728; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	sw	28(r29),r9
	sw	32(r29),r10
	sw	36(r29),r11
	sw	40(r29),r12
	sw	44(r29),r13
	lw	r5,(r30)
	lw	r10,4(r30)
	lw	r12,16(r30)
	lw	r4,20(r30)
	addi	r13,r0,#0
	sw	-680(r30),r13
	addi	r29,r29,#-8
	addi	r13,r0,#15
	sw	(r29),r13
	jal	_SetIntrs
	nop; not filled.
	add	r3,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r13,r0,#73
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L209_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r13,r0,#43
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L208_LF7
	nop; not filled.
L209_LF7:
	addi	r29,r29,#-8
	lhi	r13,((LC17_LF7)>>16)&0xffff
	addui	r13,r13,(LC17_LF7)&0xffff
	sw	(r29),r13
	sw	4(r29),r3
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L208_LF7:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r13,r0,#112
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L211_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r13,r0,#43
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L210_LF7
	nop; not filled.
L211_LF7:
	addi	r29,r29,#-24
	lhi	r13,((LC18_LF7)>>16)&0xffff
	addui	r13,r13,(LC18_LF7)&0xffff
	sw	(r29),r13
	sw	4(r29),r5
	sw	8(r29),r10
	sw	12(r29),r12
	sw	16(r29),r4
	jal	_printf
	nop; not filled.
	addi	r29,r29,#24
L210_LF7:
	lhi	r2,((_freepcbs_LF7)>>16)&0xffff
	addui	r2,r2,(_freepcbs_LF7)&0xffff
	lw	r1,8(r2)
	seqi	r1,r1,#0
	beqz	r1,L212_LF7
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r13,((LC19_LF7)>>16)&0xffff
	addui	r13,r13,(LC19_LF7)&0xffff
	sw	(r29),r13
	jal	_printf
	nop; not filled.
	jal	_exitsim
	nop; not filled.
	addi	r29,r29,#8
L212_LF7:
	lw	r9,(r2)
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r13,r0,#112
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L217_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r13,r0,#43
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L216_LF7
	nop; not filled.
L217_LF7:
	addi	r29,r29,#-8
	lhi	r13,((LC20_LF7)>>16)&0xffff
	addui	r13,r13,(LC20_LF7)&0xffff
	sw	(r29),r13
	sw	4(r29),r9
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L216_LF7:
	lw	r1,8(r9)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L219_LF7
	nop; not filled.
	lw	r1,4(r9)
	lw	r13,(r9)
	sw	(r1),r13
	lw	r1,(r9)
	lw	r13,4(r9)
	sw	4(r1),r13
	lw	r2,8(r9)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L219_LF7:
	addi	r13,r0,#0
	sw	(r9),r13
	lw	r6,12(r9)
	lw	r1,12(r6)
	addi	r13,r0,#-64
	and	r1,r1,r13
	ori	r1,r1,#2
	sw	12(r6),r1
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r13,r0,#73
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L222_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r13,r0,#43
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L221_LF7
	nop; not filled.
L222_LF7:
	jal	_CurrentIntrs
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r13,((LC21_LF7)>>16)&0xffff
	addui	r13,r13,(LC21_LF7)&0xffff
	sw	(r29),r13
	sw	4(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L221_LF7:
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r13,r0,#73
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L225_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r13,r0,#43
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L224_LF7
	nop; not filled.
L225_LF7:
	jal	_CurrentIntrs
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r13,((LC22_LF7)>>16)&0xffff
	addui	r13,r13,(LC22_LF7)&0xffff
	sw	(r29),r13
	sw	4(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L224_LF7:
	addi	r29,r29,#-8
	addi	r1,r6,#16
	sw	(r29),r1
	sw	4(r29),r12
	jal	_dstrcpy
	nop; not filled.
	addi	r13,r0,#1
	sw	160(r6),r13
	jal	_MemoryAllocPage
	nop; not filled.
	add	r2,r0,r1
	addi	r29,r29,#8
	snei	r1,r2,#0
	bnez	r1,L226_LF7
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r13,((LC23_LF7)>>16)&0xffff
	addui	r13,r13,(LC23_LF7)&0xffff
	sw	(r29),r13
	jal	_printf
	nop; not filled.
	jal	_exitsim
	nop; not filled.
	addi	r29,r29,#8
L226_LF7:
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_MemorySetupPte
	nop; not filled.
	sw	96(r6),r1
	jal	_MemoryAllocPage
	nop; not filled.
	add	r2,r0,r1
	addi	r29,r29,#8
	snei	r1,r2,#0
	bnez	r1,L227_LF7
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r13,((LC24_LF7)>>16)&0xffff
	addui	r13,r13,(LC24_LF7)&0xffff
	sw	(r29),r13
	jal	_printf
	nop; not filled.
	jal	_exitsim
	nop; not filled.
	addi	r29,r29,#8
L227_LF7:
	slli	r1,r2,#0x10
	sw	8(r6),r1
	ori	r8,r1,#65164
	sw	4(r6),r8
	sw	(r6),r8
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r13,r0,#112
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L229_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r13,r0,#43
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L228_LF7
	nop; not filled.
L229_LF7:
	addi	r29,r29,#-24
	lhi	r13,((LC25_LF7)>>16)&0xffff
	addui	r13,r13,(LC25_LF7)&0xffff
	sw	(r29),r13
	sw	4(r29),r6
	lw	r13,8(r6)
	sw	8(r29),r13
	lw	r13,96(r6)
	sw	12(r29),r13
	lw	r1,160(r6)
	slli	r1,r1,#0x10
	sw	16(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#24
L228_LF7:
	addi	r13,r0,#0
	sw	40(r8),r13
	addi	r1,r6,#96
	sw	312(r8),r1
	lw	r13,160(r6)
	sw	316(r8),r13
	lhi	r1,#16
	addui	r1,r1,#16
	sw	320(r8),r1
	snei	r1,r4,#0
	beqz	r1,L230_LF7
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r13,r0,#112
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L232_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r13,r0,#43
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L231_LF7
	nop; not filled.
L232_LF7:
	addi	r29,r29,#-8
	lhi	r13,((LC26_LF7)>>16)&0xffff
	addui	r13,r13,(LC26_LF7)&0xffff
	sw	(r29),r13
	sw	4(r29),r12
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L231_LF7:
	addi	r29,r29,#-24
	sw	(r29),r12
	addi	r1,r30,#-660
	sw	4(r29),r1
	addi	r1,r30,#-664
	sw	8(r29),r1
	addi	r1,r30,#-668
	sw	12(r29),r1
	addi	r1,r30,#-672
	sw	16(r29),r1
	addi	r1,r30,#-676
	sw	20(r29),r1
	jal	_ProcessGetCodeInfo
	nop; not filled.
	add	r5,r0,r1
	addi	r29,r29,#24
	slti	r1,r5,#0
	beqz	r1,L233_LF7
	nop; not filled.
	lhi	r3,((_freepcbs_LF7)>>16)&0xffff
	addui	r3,r3,(_freepcbs_LF7)&0xffff
	addi	r2,r6,#164
	lw	r1,4(r3)
	sw	172(r6),r3
	sw	168(r6),r1
	lw	r13,(r1)
	sw	(r2),r13
	sw	(r1),r2
	lw	r1,(r2)
	sw	4(r1),r2
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r3,160(r6)
	addi	r2,r0,#0
	slt	r1,r2,r3
	beqz	r1,L298_LF7
	nop; not filled.
L241_LF7:
	addi	r29,r29,#-8
	sw	(r29),r6
	sw	4(r29),r2
	jal	_MemoryFreeSharedPte
	nop; not filled.
	addi	r29,r29,#8
	addi	r2,r2,#1
	slt	r1,r2,r3
	bnez	r1,L241_LF7
	nop; not filled.
	addi	r2,r0,#0
L298_LF7:
	lw	r1,160(r6)
	slt	r1,r2,r1
	beqz	r1,L244_LF7
	nop; not filled.
	add	r3,r0,r6
L246_LF7:
	addi	r29,r29,#-8
	lw	r13,96(r3)
	sw	(r29),r13
	jal	_MemoryFreePte
	nop; not filled.
	addi	r29,r29,#8
	addi	r3,r3,#4
	addi	r2,r2,#1
	lw	r1,160(r6)
	slt	r1,r2,r1
	bnez	r1,L246_LF7
	nop; not filled.
L244_LF7:
	addi	r29,r29,#-8
	lhu	r1,8(r6)
	sw	(r29),r1
	jal	_MemoryFreePage
	nop; not filled.
	addi	r29,r29,#8
	lw	r1,12(r6)
	addi	r13,r0,#-64
	and	r1,r1,r13
	ori	r1,r1,#1
	sw	12(r6),r1
	addi	r1,r0,#-1
	j	L295_LF7
	nop; not filled.
L233_LF7:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r13,r0,#112
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L250_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r13,r0,#43
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L249_LF7
	nop; not filled.
L250_LF7:
	addi	r29,r29,#-16
	lhi	r13,((LC27_LF7)>>16)&0xffff
	addui	r13,r13,(LC27_LF7)&0xffff
	sw	(r29),r13
	sw	4(r29),r12
	lw	r13,-660(r30)
	sw	8(r29),r13
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L249_LF7:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r13,r0,#112
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L252_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r13,r0,#43
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L251_LF7
	nop; not filled.
L252_LF7:
	addi	r29,r29,#-16
	lhi	r13,((LC28_LF7)>>16)&0xffff
	addui	r13,r13,(LC28_LF7)&0xffff
	sw	(r29),r13
	sw	4(r29),r12
	lw	r13,-664(r30)
	sw	8(r29),r13
	lw	r13,-668(r30)
	sw	12(r29),r13
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L251_LF7:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r13,r0,#112
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L254_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r13,r0,#43
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L253_LF7
	nop; not filled.
L254_LF7:
	addi	r29,r29,#-16
	lhi	r13,((LC29_LF7)>>16)&0xffff
	addui	r13,r13,(LC29_LF7)&0xffff
	sw	(r29),r13
	sw	4(r29),r12
	lw	r13,-672(r30)
	sw	8(r29),r13
	lw	r13,-676(r30)
	sw	12(r29),r13
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L253_LF7:
	addi	r3,r30,#-112
	addi	r7,r30,#-680
	lhi	r4,((_debugstr)>>16)&0xffff
	addui	r4,r4,(_debugstr)&0xffff
L255_LF7:
	addi	r29,r29,#-16
	sw	(r29),r5
	sw	4(r29),r3
	sw	8(r29),r7
	addi	r13,r0,#100
	sw	12(r29),r13
	jal	_ProcessGetFromFile
	nop; not filled.
	add	r2,r0,r1
	addi	r29,r29,#16
	sgti	r1,r2,#0
	beqz	r1,L256_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r4
	addi	r13,r0,#112
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L259_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r4
	addi	r13,r0,#43
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L258_LF7
	nop; not filled.
L259_LF7:
	addi	r29,r29,#-16
	lhi	r13,((LC30_LF7)>>16)&0xffff
	addui	r13,r13,(LC30_LF7)&0xffff
	sw	(r29),r13
	sw	4(r29),r2
	lw	r1,-680(r30)
	sub	r1,r1,r2
	sw	8(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L258_LF7:
	addi	r29,r29,#-16
	sw	(r29),r6
	sw	4(r29),r3
	lw	r1,-680(r30)
	sub	r1,r1,r2
	sw	8(r29),r1
	sw	12(r29),r2
	jal	_MemoryCopySystemToUser
	nop; not filled.
	addi	r29,r29,#16
	j	L255_LF7
	nop; not filled.
L256_LF7:
	addi	r29,r29,#-8
	sw	(r29),r5
	jal	_FsClose
	nop; not filled.
	addi	r13,r0,#256
	sw	300(r8),r13
	addui	r13,r0,#64512
	sw	156(r8),r13
	addi	r29,r29,#-8
	sw	(r29),r6
	sw	4(r29),r10
	lw	r13,156(r8)
	sw	8(r29),r13
	addi	r13,r0,#992
	sw	12(r29),r13
	jal	_MemoryCopySystemToUser
	nop; not filled.
	addi	r29,r29,#16
	snei	r1,r10,#0
	beqz	r1,L261_LF7
	nop; not filled.
	lhi	r1,((_str52_LF7)>>16)&0xffff
	addui	r1,r1,(_str52_LF7)&0xffff
	sw	(r1),r10
	lhi	r1,((_location53_LF7)>>16)&0xffff
	addui	r1,r1,(_location53_LF7)&0xffff
	addi	r13,r0,#0
	sw	(r1),r13
L261_LF7:
	lhi	r3,((_location53_LF7)>>16)&0xffff
	addui	r3,r3,(_location53_LF7)&0xffff
	lw	r4,(r3)
	lhi	r1,((_str52_LF7)>>16)&0xffff
	addui	r1,r1,(_str52_LF7)&0xffff
	lw	r2,(r1)
	add	r1,r2,r4
	lbu	r1,(r1)
	snei	r1,r1,#0
	beqz	r1,L263_LF7
	nop; not filled.
	sgti	r1,r4,#98
	beqz	r1,L262_LF7
	nop; not filled.
L263_LF7:
	addi	r3,r0,#0
	j	L260_LF7
	nop; not filled.
L296_LF7:
	addi	r1,r2,#1
	sw	(r3),r1
	j	L265_LF7
	nop; not filled.
L262_LF7:
	slei	r1,r4,#99
	beqz	r1,L265_LF7
	nop; not filled.
	add	r5,r0,r2
L267_LF7:
	lw	r2,(r3)
	add	r1,r5,r2
	lbu	r1,(r1)
	snei	r1,r1,#0
	beqz	r1,L296_LF7
	nop; not filled.
	addi	r1,r2,#1
	sw	(r3),r1
	slei	r1,r1,#99
	bnez	r1,L267_LF7
	nop; not filled.
L265_LF7:
	add	r3,r0,r4
L260_LF7:
	addui	r2,r0,#64512
	add	r1,r3,r2
	sw	-648(r30),r1
	addi	r7,r0,#3
	lhi	r4,((_location53_LF7)>>16)&0xffff
	addui	r4,r4,(_location53_LF7)&0xffff
	lhi	r11,((_str52_LF7)>>16)&0xffff
	addui	r11,r11,(_str52_LF7)&0xffff
	add	r10,r0,r2
	addi	r5,r30,#4
L270_LF7:
	lw	r31,(r4)
	lw	r3,(r11)
	add	r1,r3,r31
	lbu	r1,(r1)
	snei	r1,r1,#0
	beqz	r1,L276_LF7
	nop; not filled.
	sgti	r1,r31,#98
	beqz	r1,L275_LF7
	nop; not filled.
L276_LF7:
	addi	r3,r0,#0
	j	L273_LF7
	nop; not filled.
L297_LF7:
	addi	r1,r3,#1
	sw	(r4),r1
	j	L278_LF7
	nop; not filled.
L275_LF7:
	slei	r1,r31,#99
	beqz	r1,L278_LF7
	nop; not filled.
	add	r2,r0,r3
L280_LF7:
	lw	r3,(r4)
	add	r1,r2,r3
	lbu	r1,(r1)
	snei	r1,r1,#0
	beqz	r1,L297_LF7
	nop; not filled.
	addi	r1,r3,#1
	sw	(r4),r1
	slei	r1,r1,#99
	bnez	r1,L280_LF7
	nop; not filled.
L278_LF7:
	add	r3,r0,r31
L273_LF7:
	add	r1,r3,r10
	sw	-648(r5),r1
	snei	r1,r3,#0
	beqz	r1,L271_LF7
	nop; not filled.
	addi	r5,r5,#4
	addi	r7,r7,#1
	j	L270_LF7
	nop; not filled.
L271_LF7:
	addi	r1,r7,#-2
	sw	-656(r30),r1
	slli	r1,r1,#0x2
	sub	r1,r10,r1
	sw	-652(r30),r1
	addi	r29,r29,#-16
	sw	(r29),r6
	addi	r1,r30,#-656
	sw	4(r29),r1
	slli	r2,r7,#0x2
	lw	r1,156(r8)
	sub	r1,r1,r2
	sw	8(r29),r1
	sw	12(r29),r2
	jal	_MemoryCopySystemToUser
	nop; not filled.
	lw	r1,156(r8)
	sub	r1,r1,r2
	sw	156(r8),r1
	lw	r13,-660(r30)
	sw	296(r8),r13
	lw	r1,12(r6)
	ori	r1,r1,#512
	sw	12(r6),r1
	addi	r29,r29,#16
	j	L284_LF7
	nop; not filled.
L230_LF7:
	lhi	r13,((_ProcessExit_LF7)>>16)&0xffff
	addui	r13,r13,(_ProcessExit_LF7)&0xffff
	sw	164(r8),r13
	lw	r1,8(r6)
	addui	r1,r1,#65504
	sw	156(r8),r1
	sw	(r1),r10
	sw	296(r8),r5
	addi	r13,r0,#320
	sw	300(r8),r13
	lw	r1,12(r6)
	ori	r1,r1,#256
	sw	12(r6),r1
L284_LF7:
	addi	r29,r29,#-8
	addi	r13,r0,#15
	sw	(r29),r13
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lhi	r3,((_runQueue_LF7+144)>>16)&0xffff
	addui	r3,r3,(_runQueue_LF7+144)&0xffff
	lw	r2,4(r3)
	sw	8(r9),r3
	sw	4(r9),r2
	lw	r13,(r2)
	sw	(r9),r13
	sw	(r2),r9
	lw	r2,(r9)
	sw	4(r2),r9
	lw	r2,8(r3)
	addi	r2,r2,#1
	sw	8(r3),r2
	addi	r29,r29,#-8
	sw	(r29),r1
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	snei	r1,r1,#0
	bnez	r1,L290_LF7
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r13,r0,#112
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L292_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r13,r0,#43
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L291_LF7
	nop; not filled.
L292_LF7:
	addi	r29,r29,#-16
	lhi	r13,((LC31_LF7)>>16)&0xffff
	addui	r13,r13,(LC31_LF7)&0xffff
	sw	(r29),r13
	sw	4(r29),r6
	lw	r13,(r6)
	sw	8(r29),r13
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L291_LF7:
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	sw	(r1),r6
L290_LF7:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r13,r0,#112
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L294_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r13,r0,#43
	sw	4(r29),r13
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L293_LF7
	nop; not filled.
L294_LF7:
	addi	r29,r29,#-8
	lhi	r13,((LC32_LF7)>>16)&0xffff
	addui	r13,r13,(LC32_LF7)&0xffff
	sw	(r29),r13
	sw	4(r29),r12
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L293_LF7:
	lhi	r13,((_pcbs_LF7)>>16)&0xffff
	addui	r13,r13,(_pcbs_LF7)&0xffff
	sub	r2,r6,r13
	lhi	r1,#-23302
	addui	r1,r1,#20389
	movi2fp	f0,r2
	movi2fp	f1,r1
	mult	f0,f0,f1
	movfp2i	r1,f0
	srai	r1,r1,#0x2
L295_LF7:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r9,28(r29)
	lw	r10,32(r29)
	lw	r11,36(r29)
	lw	r12,40(r29)
	lw	r13,44(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ProcessFork
.data
.align 2
LC33_LF7:
.ascii "ProcessGetCodeInfo: open of %s failed (%d).\n\000"
.align 2
LC34_LF7:
.ascii "File descriptor is now %d.\n\000"
.align 2
LC35_LF7:
.ascii "ProcessGetCodeInfo: read got %d (not %d) bytes from %s\n\000"
.align 2
LC36_LF7:
.ascii "start:\000"
.align 2
LC37_LF7:
.ascii "ProcessGetCodeInfo: %s missing start line (not a DLX executable?)\n\000"
.text
.align 2
.proc _ProcessGetCodeInfo
.global _ProcessGetCodeInfo
_ProcessGetCodeInfo:
;  Function 'ProcessGetCodeInfo'; 112 bytes of locals, 11 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#168; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	sw	28(r29),r9
	sw	32(r29),r10
	sw	36(r29),r11
	sw	40(r29),r12
	lw	r6,(r30)
	lw	r7,4(r30)
	lw	r8,8(r30)
	lw	r9,12(r30)
	lw	r10,16(r30)
	lw	r11,20(r30)
	addi	r29,r29,#-8
	sw	(r29),r6
	addi	r12,r0,#1
	sw	4(r29),r12
	jal	_FsOpen
	nop; not filled.
	add	r3,r0,r1
	addi	r29,r29,#8
	slti	r1,r3,#0
	beqz	r1,L307_LF7
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r12,r0,#102
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L309_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r12,r0,#43
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L316_LF7
	nop; not filled.
L309_LF7:
	addi	r29,r29,#-16
	lhi	r12,((LC33_LF7)>>16)&0xffff
	addui	r12,r12,(LC33_LF7)&0xffff
	sw	(r29),r12
	sw	4(r29),r6
	sw	8(r29),r3
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
	j	L316_LF7
	nop; not filled.
L307_LF7:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r12,r0,#102
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L311_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r12,r0,#43
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L310_LF7
	nop; not filled.
L311_LF7:
	addi	r29,r29,#-8
	lhi	r12,((LC34_LF7)>>16)&0xffff
	addui	r12,r12,(LC34_LF7)&0xffff
	sw	(r29),r12
	sw	4(r29),r3
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L310_LF7:
	addi	r29,r29,#-16
	sw	(r29),r3
	addi	r4,r30,#-112
	sw	4(r29),r4
	addi	r12,r0,#100
	sw	8(r29),r12
	jal	_FsRead
	nop; not filled.
	add	r5,r0,r1
	addi	r29,r29,#16
	snei	r1,r5,#100
	beqz	r1,L312_LF7
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r12,r0,#102
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L314_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r12,r0,#43
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L313_LF7
	nop; not filled.
L314_LF7:
	addi	r29,r29,#-16
	lhi	r12,((LC35_LF7)>>16)&0xffff
	addui	r12,r12,(LC35_LF7)&0xffff
	sw	(r29),r12
	sw	4(r29),r5
	addi	r12,r0,#100
	sw	8(r29),r12
	sw	12(r29),r6
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L313_LF7:
	addi	r29,r29,#-8
	sw	(r29),r3
	jal	_FsClose
	nop; not filled.
	addi	r1,r0,#-1
	addi	r29,r29,#8
	j	L306_LF7
	nop; not filled.
L312_LF7:
	addi	r29,r29,#-8
	sw	(r29),r4
	lhi	r1,((LC36_LF7)>>16)&0xffff
	addui	r1,r1,(LC36_LF7)&0xffff
	sw	4(r29),r1
	jal	_dstrstr
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L315_LF7
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r12,r0,#102
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L317_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r12,r0,#43
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L316_LF7
	nop; not filled.
L317_LF7:
	addi	r29,r29,#-8
	lhi	r12,((LC37_LF7)>>16)&0xffff
	addui	r12,r12,(LC37_LF7)&0xffff
	sw	(r29),r12
	sw	4(r29),r6
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L316_LF7:
	addi	r1,r0,#-1
	j	L306_LF7
	nop; not filled.
L315_LF7:
	addi	r29,r29,#-8
	sw	(r29),r4
	addi	r12,r0,#58
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r1,r1,#1
	sw	-116(r30),r1
	addi	r29,r29,#-8
	sw	(r29),r1
	addi	r2,r30,#-116
	sw	4(r29),r2
	addi	r12,r0,#16
	sw	8(r29),r12
	jal	_dstrtol
	nop; not filled.
	sw	(r7),r1
	lw	r12,-116(r30)
	sw	(r29),r12
	sw	4(r29),r2
	addi	r12,r0,#16
	sw	8(r29),r12
	jal	_dstrtol
	nop; not filled.
	lw	r12,-116(r30)
	sw	(r29),r12
	sw	4(r29),r2
	addi	r12,r0,#16
	sw	8(r29),r12
	jal	_dstrtol
	nop; not filled.
	sw	(r8),r1
	lw	r12,-116(r30)
	sw	(r29),r12
	sw	4(r29),r2
	addi	r12,r0,#16
	sw	8(r29),r12
	jal	_dstrtol
	nop; not filled.
	sw	(r9),r1
	lw	r12,-116(r30)
	sw	(r29),r12
	sw	4(r29),r2
	addi	r12,r0,#16
	sw	8(r29),r12
	jal	_dstrtol
	nop; not filled.
	sw	(r10),r1
	lw	r12,-116(r30)
	sw	(r29),r12
	sw	4(r29),r2
	addi	r12,r0,#16
	sw	8(r29),r12
	jal	_dstrtol
	nop; not filled.
	sw	(r11),r1
	sw	(r29),r4
	addi	r12,r0,#10
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r2,r30,#-113
	sub	r1,r1,r2
	sw	(r29),r3
	sw	4(r29),r1
	addi	r12,r0,#0
	sw	8(r29),r12
	jal	_FsSeek
	nop; not filled.
	add	r1,r0,r3
	addi	r29,r29,#16
L306_LF7:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r9,28(r29)
	lw	r10,32(r29)
	lw	r11,36(r29)
	lw	r12,40(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ProcessGetCodeInfo
.data
.align 2
LC38_LF7:
.ascii "Got %d bytes at offset %d ...\000"
.align 2
LC39_LF7:
.ascii " terminated at %d.\n\000"
.align 2
LC40_LF7:
.ascii "Buffer is \'%s\'\n\000"
.align 2
LC41_LF7:
.ascii "New address is 0x%x.\n\000"
.align 2
LC42_LF7:
.ascii "Seeking to %d and returning %d bytes!\n\000"
.text
.align 2
.proc _ProcessGetFromFile
.global _ProcessGetFromFile
_ProcessGetFromFile:
;  Function 'ProcessGetFromFile'; 216 bytes of locals, 11 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#272; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	sw	28(r29),r9
	sw	32(r29),r10
	sw	36(r29),r11
	sw	40(r29),r12
	lw	r10,(r30)
	lw	r7,8(r30)
	lw	r2,12(r30)
	lw	r11,4(r30)
	addi	r3,r30,#-216
	sw	-220(r30),r3
	addi	r29,r29,#-16
	sw	(r29),r10
	addi	r12,r0,#0
	sw	4(r29),r12
	addi	r12,r0,#1
	sw	8(r29),r12
	jal	_FsSeek
	nop; not filled.
	add	r9,r0,r1
	slli	r2,r2,#0x1
	addi	r29,r29,#16
	sgtui	r1,r2,#200
	beqz	r1,L320_LF7
	nop; not filled.
	addi	r2,r0,#200
L320_LF7:
	addi	r29,r29,#-16
	sw	(r29),r10
	sw	4(r29),r3
	sw	8(r29),r2
	jal	_FsRead
	nop; not filled.
	add	r5,r0,r1
	addi	r29,r29,#16
	slei	r1,r5,#0
	beqz	r1,L321_LF7
	nop; not filled.
	addi	r1,r0,#0
	j	L375_LF7
	nop; not filled.
L321_LF7:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r12,r0,#102
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L323_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r12,r0,#43
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L322_LF7
	nop; not filled.
L323_LF7:
	addi	r29,r29,#-16
	lhi	r12,((LC38_LF7)>>16)&0xffff
	addui	r12,r12,(LC38_LF7)&0xffff
	sw	(r29),r12
	sw	4(r29),r5
	sw	8(r29),r9
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L322_LF7:
	addi	r5,r5,#-1
	addi	r1,r30,#-216
	add	r2,r1,r5
	j	L378_LF7
	nop; not filled.
L324_LF7:
	addi	r2,r2,#-1
	addi	r5,r5,#-1
L378_LF7:
	lbu	r1,(r2)
	snei	r1,r1,#10
	bnez	r1,L324_LF7
	nop; not filled.
	addi	r1,r30,#-215
	add	r1,r1,r5
	addi	r12,r0,(#0x5a)&0xff
	sb	(r1),r12
	addi	r1,r30,#-214
	add	r1,r1,r5
	addi	r12,r0,(#0x0)&0xff
	sb	(r1),r12
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r12,r0,#102
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L329_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r12,r0,#43
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L328_LF7
	nop; not filled.
L329_LF7:
	addi	r29,r29,#-8
	lhi	r12,((LC39_LF7)>>16)&0xffff
	addui	r12,r12,(LC39_LF7)&0xffff
	sw	(r29),r12
	sw	4(r29),r5
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L328_LF7:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r12,r0,#102
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L331_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r12,r0,#43
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L330_LF7
	nop; not filled.
L331_LF7:
	addi	r29,r29,#-8
	lhi	r12,((LC40_LF7)>>16)&0xffff
	addui	r12,r12,(LC40_LF7)&0xffff
	sw	(r29),r12
	addi	r1,r30,#-216
	sw	4(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L330_LF7:
	addi	r5,r0,#0
	lhi	r8,((_debugstr)>>16)&0xffff
	addui	r8,r8,(_debugstr)&0xffff
L332_LF7:
	addi	r29,r29,#-8
	lw	r12,-220(r30)
	sw	(r29),r12
	addi	r12,r0,#90
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L333_LF7
	nop; not filled.
	addi	r29,r29,#-8
	lw	r12,-220(r30)
	sw	(r29),r12
	addi	r12,r0,#58
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L333_LF7
	nop; not filled.
	lw	r2,-220(r30)
	lbu	r1,(r2)
	snei	r1,r1,#58
	beqz	r1,L377_LF7
	nop; not filled.
	sgti	r1,r5,#0
	bnez	r1,L333_LF7
	nop; not filled.
	addi	r29,r29,#-16
	sw	(r29),r2
	addi	r1,r30,#-220
	sw	4(r29),r1
	addi	r12,r0,#16
	sw	8(r29),r12
	jal	_dstrtol
	nop; not filled.
	sw	(r7),r1
	sw	(r29),r8
	addi	r12,r0,#102
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#16
	snei	r1,r1,#0
	bnez	r1,L339_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r8
	addi	r12,r0,#43
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L336_LF7
	nop; not filled.
L339_LF7:
	addi	r29,r29,#-8
	lhi	r12,((LC41_LF7)>>16)&0xffff
	addui	r12,r12,(LC41_LF7)&0xffff
	sw	(r29),r12
	lw	r1,(r7)
	sw	4(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L336_LF7:
	lw	r1,-220(r30)
	lbu	r1,(r1)
	snei	r1,r1,#58
	bnez	r1,L333_LF7
	nop; not filled.
L377_LF7:
	lw	r1,-220(r30)
	addi	r1,r1,#1
	sw	-220(r30),r1
	add	r6,r5,r11
L343_LF7:
	lw	r1,-220(r30)
	j	L379_LF7
	nop; not filled.
L346_LF7:
	lw	r1,-220(r30)
	addi	r1,r1,#1
	sw	-220(r30),r1
L379_LF7:
	lbu	r31,(r1)
	seqi	r1,r31,#32
	bnez	r1,L346_LF7
	nop; not filled.
	seqi	r1,r31,#9
	bnez	r1,L346_LF7
	nop; not filled.
	lw	r2,-220(r30)
	lb	r31,(r2)
	andi	r3,r31,#0x00ff
	seqi	r1,r3,#10
	beqz	r1,L348_LF7
	nop; not filled.
	addi	r1,r2,#1
	sw	-220(r30),r1
	j	L332_LF7
	nop; not filled.
L348_LF7:
	addi	r2,r0,#0
	addi	r1,r31,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	bnez	r1,L354_LF7
	nop; not filled.
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#5
	bnez	r1,L354_LF7
	nop; not filled.
	snei	r1,r3,#65
	bnez	r1,L353_LF7
	nop; not filled.
L354_LF7:
	addi	r2,r0,#1
L353_LF7:
	snei	r1,r2,#0
	beqz	r1,L332_LF7
	nop; not filled.
	lw	r1,-220(r30)
	lb	r2,1(r1)
	addi	r3,r0,#0
	addi	r1,r2,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	bnez	r1,L357_LF7
	nop; not filled.
	addi	r1,r2,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#5
	bnez	r1,L357_LF7
	nop; not filled.
	andi	r1,r2,#0x00ff
	snei	r1,r1,#65
	bnez	r1,L356_LF7
	nop; not filled.
L357_LF7:
	addi	r3,r0,#1
L356_LF7:
	snei	r1,r3,#0
	beqz	r1,L332_LF7
	nop; not filled.
	lw	r1,-220(r30)
	lbu	r2,(r1)
	add	r3,r0,r2
	addi	r31,r2,#-48
	sleui	r1,r31,#9
	beqz	r1,L359_LF7
	nop; not filled.
	add	r4,r0,r31
	j	L358_LF7
	nop; not filled.
L359_LF7:
	addi	r1,r2,#-97
	sleui	r1,r1,#5
	beqz	r1,L361_LF7
	nop; not filled.
	addi	r4,r2,#-87
	j	L358_LF7
	nop; not filled.
L361_LF7:
	addi	r1,r3,#-65
	sleui	r1,r1,#5
	addi	r4,r0,#0
	beqz	r1,L358_LF7
	nop; not filled.
	addi	r4,r3,#-55
L358_LF7:
	lw	r1,-220(r30)
	lbu	r2,1(r1)
	add	r3,r0,r2
	addi	r31,r2,#-48
	sleui	r1,r31,#9
	beqz	r1,L366_LF7
	nop; not filled.
	add	r2,r0,r31
	j	L365_LF7
	nop; not filled.
L366_LF7:
	addi	r1,r2,#-97
	sleui	r1,r1,#5
	beqz	r1,L368_LF7
	nop; not filled.
	addi	r2,r2,#-87
	j	L365_LF7
	nop; not filled.
L368_LF7:
	addi	r1,r3,#-65
	sleui	r1,r1,#5
	addi	r2,r0,#0
	beqz	r1,L365_LF7
	nop; not filled.
	addi	r2,r3,#-55
L365_LF7:
	slli	r1,r4,#0x4
	add	r1,r1,r2
	sb	(r6),r1
	addi	r6,r6,#1
	addi	r5,r5,#1
	lw	r1,-220(r30)
	addi	r1,r1,#2
	sw	-220(r30),r1
	lw	r1,(r7)
	addi	r1,r1,#1
	sw	(r7),r1
	j	L343_LF7
	nop; not filled.
L333_LF7:
	addi	r29,r29,#-16
	sw	(r29),r10
	lw	r1,-220(r30)
	add	r1,r1,r9
	addi	r3,r30,#-216
	sub	r1,r1,r3
	sw	4(r29),r1
	addi	r12,r0,#0
	sw	8(r29),r12
	jal	_FsSeek
	nop; not filled.
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r12,r0,#102
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#16
	snei	r1,r1,#0
	bnez	r1,L374_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r12,r0,#43
	sw	4(r29),r12
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L373_LF7
	nop; not filled.
L374_LF7:
	addi	r29,r29,#-16
	lhi	r12,((LC42_LF7)>>16)&0xffff
	addui	r12,r12,(LC42_LF7)&0xffff
	sw	(r29),r12
	lw	r1,-220(r30)
	add	r1,r1,r9
	sub	r1,r1,r3
	sw	4(r29),r1
	sw	8(r29),r5
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L373_LF7:
	add	r1,r0,r5
L375_LF7:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r9,28(r29)
	lw	r10,32(r29)
	lw	r11,36(r29)
	lw	r12,40(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ProcessGetFromFile
.data
.align 2
_temppcb64_LF7:
.space 180
.align 2
LC43_LF7:
.ascii "Got %d arguments.\n\000"
.align 2
LC44_LF7:
.ascii "Available memory: 0x%x -> 0x%x.\n\000"
.align 2
LC45_LF7:
.ascii "Argument count is %d.\n\000"
.align 2
LC46_LF7:
.ascii "Argument %d is %s.\n\000"
.align 2
LC47_LF7:
.ascii "Converted %s to %d=%s\n\000"
_buf65_LF7:
.space 200
.align 2
LC48_LF7:
.ascii "%08x: %02x%02x%02x%02x\n\000"
.align 2
LC49_LF7:
.ascii "Option %s not recognized.\n\000"
.align 2
LC50_LF7:
.ascii "About to initialize queues.\n\000"
.align 2
LC51_LF7:
.ascii "After initializing queues.\n\000"
.align 2
LC52_LF7:
.ascii "After initializing memory.\n\000"
.align 2
LC53_LF7:
.ascii "After initializing processes.\n\000"
.align 2
LC54_LF7:
.ascii "After initializing shared memory.\n\000"
.align 2
LC55_LF7:
.ascii "After initializing synchronization tools.\n\000"
.align 2
LC56_LF7:
.ascii "After initializing keyboard.\n\000"
.align 2
LC57_LF7:
.ascii "vm\000"
.align 2
LC58_LF7:
.ascii "VM Descriptor is %d\n\000"
.align 2
LC59_LF7:
.ascii "Created processes - about to set timer quantum.\n\000"
.align 2
LC60_LF7:
.ascii "Set timer quantum to %d, about to run first process.\n\000"
.text
.align 2
.proc _main
.global _main
_main:
;  Function 'main'; 192 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#200; alloc local storage
	lw	r14,(r30)
	lw	r20,4(r30)
	jal	___main
	nop; not filled.
	addi	r16,r0,#0
	addi	r21,r0,#0
	sw	-176(r30),r21
	sw	-172(r30),r21
	sw	-168(r30),r21
	sw	-164(r30),r21
	sw	-160(r30),r21
	sw	-156(r30),r21
	sw	-152(r30),r21
	sw	-148(r30),r21
	sw	-144(r30),r21
	sw	-140(r30),r21
	sw	-136(r30),r21
	sw	-132(r30),r21
	lhi	r1,((_debugstr)>>16)&0xffff
	addui	r1,r1,(_debugstr)&0xffff
	addi	r21,r0,(#0x70)&0xff
	sb	(r1),r21
	addi	r21,r0,(#0x0)&0xff
	sb	4(r1),r21
	jal	_MyFuncRetZero
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r21,((LC43_LF7)>>16)&0xffff
	addui	r21,r21,(LC43_LF7)&0xffff
	sw	(r29),r21
	sw	4(r29),r14
	jal	_printf
	nop; not filled.
	jal	_MemoryGetSize
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r21,((LC44_LF7)>>16)&0xffff
	addui	r21,r21,(LC44_LF7)&0xffff
	sw	(r29),r21
	lhi	r2,((_lastosaddress)>>16)&0xffff
	addui	r2,r2,(_lastosaddress)&0xffff
	lw	r2,(r2)
	sw	4(r29),r2
	sw	8(r29),r1
	jal	_printf
	nop; not filled.
	lhi	r21,((LC45_LF7)>>16)&0xffff
	addui	r21,r21,(LC45_LF7)&0xffff
	sw	(r29),r21
	sw	4(r29),r14
	jal	_printf
	nop; not filled.
	addi	r9,r0,#0
	addi	r29,r29,#16
	slt	r1,r9,r14
	beqz	r1,L382_LF7
	nop; not filled.
	add	r2,r0,r20
L384_LF7:
	addi	r29,r29,#-16
	lhi	r21,((LC46_LF7)>>16)&0xffff
	addui	r21,r21,(LC46_LF7)&0xffff
	sw	(r29),r21
	sw	4(r29),r9
	lw	r21,(r2)
	sw	8(r29),r21
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
	addi	r2,r2,#4
	addi	r9,r9,#1
	slt	r1,r9,r14
	bnez	r1,L384_LF7
	nop; not filled.
L382_LF7:
	jal	_FsModuleInit
	nop; not filled.
	addi	r9,r0,#0
	slt	r1,r9,r14
	beqz	r1,L387_LF7
	nop; not filled.
	addi	r12,r30,#-128
	addi	r13,r30,#-200
	lhi	r15,((_buf65_LF7)>>16)&0xffff
	addui	r15,r15,(_buf65_LF7)&0xffff
	addi	r18,r15,#1
	addi	r17,r15,#2
	add	r8,r0,r20
L389_LF7:
	lw	r2,(r8)
	lbu	r1,(r2)
	seqi	r1,r1,#45
	beqz	r1,L388_LF7
	nop; not filled.
	lbu	r2,1(r2)
	seqi	r1,r2,#102
	bnez	r1,L394_LF7
	nop; not filled.
	sgti	r1,r2,#102
	bnez	r1,L406_LF7
	nop; not filled.
	seqi	r1,r2,#68
	beqz	r1,L404_LF7
	nop; not filled.
	j	L392_LF7
	nop; not filled.
L406_LF7:
	seqi	r1,r2,#105
	bnez	r1,L393_LF7
	nop; not filled.
	seqi	r1,r2,#117
	beqz	r1,L404_LF7
	nop; not filled.
	j	L403_LF7
	nop; not filled.
L392_LF7:
	addi	r29,r29,#-8
	lhi	r21,((_debugstr)>>16)&0xffff
	addui	r21,r21,(_debugstr)&0xffff
	sw	(r29),r21
	addi	r8,r8,#4
	addi	r9,r9,#1
	lw	r1,(r8)
	sw	4(r29),r1
	jal	_dstrcpy
	nop; not filled.
	j	L441_LF7
	nop; not filled.
L393_LF7:
	addi	r29,r29,#-16
	addi	r8,r8,#4
	addi	r9,r9,#1
	lw	r21,(r8)
	sw	(r29),r21
	addi	r21,r0,#0
	sw	4(r29),r21
	sw	8(r29),r21
	jal	_dstrtol
	nop; not filled.
	add	r3,r0,r1
	sw	(r29),r1
	sw	4(r29),r12
	jal	_ditoa
	nop; not filled.
	lhi	r21,((LC47_LF7)>>16)&0xffff
	addui	r21,r21,(LC47_LF7)&0xffff
	sw	(r29),r21
	lw	r1,(r8)
	sw	4(r29),r1
	sw	8(r29),r3
	sw	12(r29),r12
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
	j	L391_LF7
	nop; not filled.
L394_LF7:
	addi	r21,r0,#0
	sw	-200(r30),r21
	addi	r29,r29,#-24
	addi	r8,r8,#4
	addi	r9,r9,#1
	lw	r21,(r8)
	sw	(r29),r21
	addi	r1,r30,#-180
	sw	4(r29),r1
	addi	r1,r30,#-184
	sw	8(r29),r1
	addi	r1,r30,#-188
	sw	12(r29),r1
	addi	r1,r30,#-192
	sw	16(r29),r1
	addi	r1,r30,#-196
	sw	20(r29),r1
	jal	_ProcessGetCodeInfo
	nop; not filled.
	add	r10,r0,r1
	lhi	r21,((LC27_LF7)>>16)&0xffff
	addui	r21,r21,(LC27_LF7)&0xffff
	sw	(r29),r21
	lw	r1,(r8)
	sw	4(r29),r1
	lw	r21,-180(r30)
	sw	8(r29),r21
	jal	_printf
	nop; not filled.
	lhi	r21,((LC28_LF7)>>16)&0xffff
	addui	r21,r21,(LC28_LF7)&0xffff
	sw	(r29),r21
	lw	r1,(r8)
	sw	4(r29),r1
	lw	r21,-184(r30)
	sw	8(r29),r21
	lw	r21,-188(r30)
	sw	12(r29),r21
	jal	_printf
	nop; not filled.
	lhi	r21,((LC29_LF7)>>16)&0xffff
	addui	r21,r21,(LC29_LF7)&0xffff
	sw	(r29),r21
	lw	r1,(r8)
	sw	4(r29),r1
	lw	r21,-192(r30)
	sw	8(r29),r21
	lw	r21,-196(r30)
	sw	12(r29),r21
	jal	_printf
	nop; not filled.
	addi	r29,r29,#24
	lhi	r11,((_buf65_LF7+3)>>16)&0xffff
	addui	r11,r11,(_buf65_LF7+3)&0xffff
L395_LF7:
	addi	r29,r29,#-16
	sw	(r29),r10
	lhi	r21,((_buf65_LF7)>>16)&0xffff
	addui	r21,r21,(_buf65_LF7)&0xffff
	sw	4(r29),r21
	sw	8(r29),r13
	addi	r21,r0,#200
	sw	12(r29),r21
	jal	_ProcessGetFromFile
	nop; not filled.
	add	r3,r0,r1
	addi	r29,r29,#16
	sgti	r1,r3,#0
	beqz	r1,L396_LF7
	nop; not filled.
	addi	r2,r0,#0
	slt	r1,r2,r3
	beqz	r1,L395_LF7
	nop; not filled.
	add	r7,r0,r11
	add	r6,r0,r17
	add	r5,r0,r18
	add	r4,r0,r15
L401_LF7:
	addi	r29,r29,#-24
	lhi	r21,((LC48_LF7)>>16)&0xffff
	addui	r21,r21,(LC48_LF7)&0xffff
	sw	(r29),r21
	lw	r1,-200(r30)
	add	r1,r1,r2
	sub	r1,r1,r3
	sw	4(r29),r1
	lbu	r1,(r4)
	sw	8(r29),r1
	lbu	r1,(r5)
	sw	12(r29),r1
	lbu	r1,(r6)
	sw	16(r29),r1
	lbu	r1,(r7)
	sw	20(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#24
	addi	r7,r7,#4
	addi	r6,r6,#4
	addi	r5,r5,#4
	addi	r4,r4,#4
	addi	r2,r2,#4
	slt	r1,r2,r3
	bnez	r1,L401_LF7
	nop; not filled.
	j	L395_LF7
	nop; not filled.
L396_LF7:
	addi	r29,r29,#-8
	sw	(r29),r10
	jal	_close
	nop; not filled.
	j	L441_LF7
	nop; not filled.
L403_LF7:
	addi	r8,r8,#4
	addi	r9,r9,#1
	lw	r16,(r8)
	add	r19,r0,r9
	j	L391_LF7
	nop; not filled.
L404_LF7:
	addi	r29,r29,#-8
	lhi	r21,((LC49_LF7)>>16)&0xffff
	addui	r21,r21,(LC49_LF7)&0xffff
	sw	(r29),r21
	lw	r1,(r8)
	sw	4(r29),r1
	jal	_printf
	nop; not filled.
L441_LF7:
	addi	r29,r29,#8
L391_LF7:
	snei	r1,r16,#0
	bnez	r1,L387_LF7
	nop; not filled.
L388_LF7:
	addi	r8,r8,#4
	addi	r9,r9,#1
	slt	r1,r9,r14
	bnez	r1,L389_LF7
	nop; not filled.
L387_LF7:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r21,r0,#105
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L410_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r21,r0,#43
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L409_LF7
	nop; not filled.
L410_LF7:
	addi	r29,r29,#-8
	lhi	r21,((LC50_LF7)>>16)&0xffff
	addui	r21,r21,(LC50_LF7)&0xffff
	sw	(r29),r21
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L409_LF7:
	jal	_QueueModuleInit
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r21,r0,#105
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L412_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r21,r0,#43
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L411_LF7
	nop; not filled.
L412_LF7:
	addi	r29,r29,#-8
	lhi	r21,((LC51_LF7)>>16)&0xffff
	addui	r21,r21,(LC51_LF7)&0xffff
	sw	(r29),r21
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L411_LF7:
	jal	_MemoryModuleInit
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r21,r0,#105
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L414_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r21,r0,#43
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L413_LF7
	nop; not filled.
L414_LF7:
	addi	r29,r29,#-8
	lhi	r21,((LC52_LF7)>>16)&0xffff
	addui	r21,r21,(LC52_LF7)&0xffff
	sw	(r29),r21
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L413_LF7:
	jal	_ProcessModuleInit
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r21,r0,#105
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L416_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r21,r0,#43
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L415_LF7
	nop; not filled.
L416_LF7:
	addi	r29,r29,#-8
	lhi	r21,((LC53_LF7)>>16)&0xffff
	addui	r21,r21,(LC53_LF7)&0xffff
	sw	(r29),r21
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L415_LF7:
	jal	_ShareModuleInit
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r21,r0,#105
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L418_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r21,r0,#43
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L417_LF7
	nop; not filled.
L418_LF7:
	addi	r29,r29,#-8
	lhi	r21,((LC54_LF7)>>16)&0xffff
	addui	r21,r21,(LC54_LF7)&0xffff
	sw	(r29),r21
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L417_LF7:
	jal	_SynchModuleInit
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r21,r0,#105
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L420_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r21,r0,#43
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L419_LF7
	nop; not filled.
L420_LF7:
	addi	r29,r29,#-8
	lhi	r21,((LC55_LF7)>>16)&0xffff
	addui	r21,r21,(LC55_LF7)&0xffff
	sw	(r29),r21
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L419_LF7:
	jal	_KbdModuleInit
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r21,r0,#105
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L422_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r21,r0,#43
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L421_LF7
	nop; not filled.
L422_LF7:
	addi	r29,r29,#-8
	lhi	r21,((LC56_LF7)>>16)&0xffff
	addui	r21,r21,(LC56_LF7)&0xffff
	sw	(r29),r21
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L421_LF7:
	addi	r2,r30,#-128
	addi	r3,r30,#-29
L426_LF7:
	addi	r21,r0,(#0x61)&0xff
	sb	(r2),r21
	addi	r2,r2,#1
	sle	r1,r2,r3
	bnez	r1,L426_LF7
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r21,((LC57_LF7)>>16)&0xffff
	addui	r21,r21,(LC57_LF7)&0xffff
	sw	(r29),r21
	addi	r21,r0,#2
	sw	4(r29),r21
	jal	_FsOpen
	nop; not filled.
	add	r9,r0,r1
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r21,r0,#105
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L429_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r21,r0,#43
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L428_LF7
	nop; not filled.
L429_LF7:
	addi	r29,r29,#-8
	lhi	r21,((LC58_LF7)>>16)&0xffff
	addui	r21,r21,(LC58_LF7)&0xffff
	sw	(r29),r21
	sw	4(r29),r9
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L428_LF7:
	addi	r29,r29,#-16
	sw	(r29),r9
	addi	r21,r0,#0
	sw	4(r29),r21
	sw	8(r29),r21
	jal	_FsSeek
	nop; not filled.
	sw	(r29),r9
	addi	r1,r30,#-128
	sw	4(r29),r1
	addi	r21,r0,#80
	sw	8(r29),r21
	jal	_FsWrite
	nop; not filled.
	sw	(r29),r9
	jal	_FsClose
	nop; not filled.
	addi	r29,r29,#16
	snei	r1,r16,#0
	beqz	r1,L430_LF7
	nop; not filled.
	add	r9,r0,r19
	slt	r1,r19,r14
	beqz	r1,L432_LF7
	nop; not filled.
	addi	r4,r30,#-8
	slli	r1,r9,#0x2
	add	r3,r1,r20
L436_LF7:
	sub	r2,r9,r19
	slei	r1,r2,#10
	beqz	r1,L432_LF7
	nop; not filled.
	slli	r1,r2,#0x2
	add	r1,r1,r4
	lw	r21,(r3)
	sw	-168(r1),r21
	addi	r3,r3,#4
	addi	r9,r9,#1
	slt	r1,r9,r14
	bnez	r1,L436_LF7
	nop; not filled.
L432_LF7:
	addi	r29,r29,#-56
	addi	r21,r0,#0
	sw	(r29),r21
	sw	4(r29),r21
	lw	r21,-176(r30)
	sw	8(r29),r21
	lw	r21,-172(r30)
	sw	12(r29),r21
	lw	r21,-168(r30)
	sw	16(r29),r21
	lw	r21,-164(r30)
	sw	20(r29),r21
	lw	r21,-160(r30)
	sw	24(r29),r21
	lw	r21,-156(r30)
	sw	28(r29),r21
	lw	r21,-152(r30)
	sw	32(r29),r21
	lw	r21,-148(r30)
	sw	36(r29),r21
	lw	r21,-144(r30)
	sw	40(r29),r21
	lw	r21,-140(r30)
	sw	44(r29),r21
	lw	r21,-136(r30)
	sw	48(r29),r21
	lw	r21,-132(r30)
	sw	52(r29),r21
	jal	_process_create
	nop; not filled.
	addi	r29,r29,#56
L430_LF7:
	jal	_SysprocCreateProcesses
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r21,r0,#105
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L438_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r21,r0,#43
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L437_LF7
	nop; not filled.
L438_LF7:
	addi	r29,r29,#-8
	lhi	r21,((LC59_LF7)>>16)&0xffff
	addui	r21,r21,(LC59_LF7)&0xffff
	sw	(r29),r21
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L437_LF7:
	addi	r29,r29,#-8
	lhi	r3,((_processQuantum_LF7)>>16)&0xffff
	addui	r3,r3,(_processQuantum_LF7)&0xffff
	lw	r21,(r3)
	sw	(r29),r21
	jal	_TimerSet
	nop; not filled.
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r21,r0,#105
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L440_LF7
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r21,r0,#43
	sw	4(r29),r21
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L439_LF7
	nop; not filled.
L440_LF7:
	addi	r29,r29,#-8
	lhi	r21,((LC60_LF7)>>16)&0xffff
	addui	r21,r21,(LC60_LF7)&0xffff
	sw	(r29),r21
	lw	r1,(r3)
	sw	4(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L439_LF7:
	jal	_intrreturn
	nop; not filled.
	jal	_exitsim
	nop; not filled.
	jal	_exit
	nop
.endproc _main
.data
.align 2
LC62_LF7:
.word 0x00000000
;;              0.0000000e+00
.text
.align 2
.proc _MyFuncRetZero
.global _MyFuncRetZero
_MyFuncRetZero:
;  Function 'MyFuncRetZero'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lhi	r1,((LC62_LF7)>>16)&0xffff
	addui	r1,r1,(LC62_LF7)&0xffff
	lf	f0,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MyFuncRetZero
.align 2
.proc _GetCurrentPid
.global _GetCurrentPid
_GetCurrentPid:
;  Function 'GetCurrentPid'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	lhi	r31,((_pcbs_LF7)>>16)&0xffff
	addui	r31,r31,(_pcbs_LF7)&0xffff
	sub	r2,r1,r31
	lhi	r1,#-23302
	addui	r1,r1,#20389
	movi2fp	f0,r2
	movi2fp	f1,r1
	mult	f0,f0,f1
	movfp2i	r1,f0
	srai	r1,r1,#0x2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _GetCurrentPid
.align 2
.proc _findpid
.global _findpid
_findpid:
;  Function 'findpid'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	lhi	r31,((_pcbs_LF7)>>16)&0xffff
	addui	r31,r31,(_pcbs_LF7)&0xffff
	sub	r2,r1,r31
	lhi	r1,#-23302
	addui	r1,r1,#20389
	movi2fp	f0,r2
	movi2fp	f1,r1
	mult	f0,f0,f1
	movfp2i	r1,f0
	srai	r1,r1,#0x2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _findpid
.align 2
.proc _process_create
.global _process_create
_process_create:
;  Function 'process_create'; 1000 bytes of locals, 5 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#1032; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	addi	r2,r30,#8
	addi	r4,r0,#0
	lw	r1,(r2)
	snei	r1,r1,#0
	beqz	r1,L450_LF7
	nop; not filled.
	addi	r5,r30,#-1008
	add	r31,r0,r2
L452_LF7:
	addi	r2,r0,#0
	add	r3,r4,r5
L453_LF7:
	lw	r1,(r31)
	add	r1,r1,r2
	lb	r1,(r1)
	sb	(r3),r1
	addi	r2,r2,#1
	addi	r3,r3,#1
	addi	r4,r4,#1
	lw	r1,(r31)
	add	r1,r2,r1
	lbu	r1,-1(r1)
	snei	r1,r1,#0
	bnez	r1,L453_LF7
	nop; not filled.
	addi	r31,r31,#4
	lw	r1,(r31)
	snei	r1,r1,#0
	bnez	r1,L452_LF7
	nop; not filled.
L450_LF7:
	addi	r3,r30,#-1008
	add	r2,r3,r4
	addi	r1,r30,#-1007
	add	r1,r1,r4
	addi	r6,r0,(#0x0)&0xff
	sb	(r1),r6
	sb	(r2),r6
	addi	r29,r29,#-24
	addi	r6,r0,#0
	sw	(r29),r6
	sw	4(r29),r3
	lw	r6,(r30)
	sw	8(r29),r6
	lw	r6,4(r30)
	sw	12(r29),r6
	lw	r6,8(r30)
	sw	16(r29),r6
	addi	r6,r0,#1
	sw	20(r29),r6
	jal	_ProcessFork
	nop; not filled.
	addi	r29,r29,#24
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _process_create
.data
.global _debugstr
_debugstr:
.space 200
.align 2
.global _currentPCB
_currentPCB:
.space 4
.align 2
_freepcbs_LF7:
.space 12
.align 2
_runQueue_LF7:
.space 384
.align 2
_waitQueue_LF7:
.space 12
.align 2
_zombieQueue_LF7:
.space 12
.align 2
_pcbs_LF7:
.space 5760
.text
.align 2
.proc _ProcessExit_LF7
_ProcessExit_LF7:
;  Function 'ProcessExit'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	jal	_exit
	nop; not filled.
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _ProcessExit_LF7
; Compiled by GCC

.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r2,3(r30)
	addi	r31,r0,#0
	andi	r1,r2,#0x00ff
	seqi	r1,r1,#32
	bnez	r1,L6_LF8
	nop; not filled.
	addi	r1,r2,#-9
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#1
	beqz	r1,L5_LF8
	nop; not filled.
L6_LF8:
	addi	r31,r0,#1
L5_LF8:
	add	r1,r0,r31
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r31,3(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	bnez	r1,L12_LF8
	nop; not filled.
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#5
	bnez	r1,L12_LF8
	nop; not filled.
	andi	r1,r31,#0x00ff
	snei	r1,r1,#65
	bnez	r1,L11_LF8
	nop; not filled.
L12_LF8:
	addi	r2,r0,#1
L11_LF8:
	add	r1,r0,r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#15
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#0
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	lw	r2,(r30)
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.align 2
.proc _QueueLinkInit
.global _QueueLinkInit
_QueueLinkInit:
;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	lw	r2,4(r30)
	addi	r31,r0,#0
	sw	(r1),r31
	sw	12(r1),r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLinkInit
.align 2
.proc _QueueNext
.global _QueueNext
_QueueNext:
;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueNext
.align 2
.proc _QueuePrev
.global _QueuePrev
_QueuePrev:
;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueuePrev
.align 2
.proc _QueueFirst
.global _QueueFirst
_QueueFirst:
;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueFirst
.align 2
.proc _QueueLast
.global _QueueLast
_QueueLast:
;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLast
.align 2
.proc _QueueInsertAfter
.global _QueueInsertAfter
_QueueInsertAfter:
;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r2,4(r30)
	lw	r1,8(r30)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertAfter
.align 2
.proc _QueueInsertFirst
.global _QueueInsertFirst
_QueueInsertFirst:
;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	sw	8(r1),r3
	sw	4(r1),r3
	lw	r31,(r3)
	sw	(r1),r31
	sw	(r3),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertFirst
.align 2
.proc _QueueInsertLast
.global _QueueInsertLast
_QueueInsertLast:
;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	lw	r2,4(r3)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertLast
.align 2
.proc _QueueRemove
.global _QueueRemove
_QueueRemove:
;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	lw	r1,8(r31)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L44_LF8
	nop; not filled.
	lw	r1,4(r31)
	lw	r3,(r31)
	sw	(r1),r3
	lw	r1,(r31)
	lw	r3,4(r31)
	sw	4(r1),r3
	lw	r2,8(r31)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L44_LF8:
	addi	r3,r0,#0
	sw	(r31),r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueRemove
.align 2
.proc _QueueLength
.global _QueueLength
_QueueLength:
;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLength
.align 2
.proc _QueueEmpty
.global _QueueEmpty
_QueueEmpty:
;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	seqi	r1,r1,#0
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueEmpty
.data
.align 2
LC0_LF8:
.ascii "Initializing queue link %d.\n\000"
.text
.align 2
.proc _QueueModuleInit
.global _QueueModuleInit
_QueueModuleInit:
;  Function 'QueueModuleInit'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	addi	r29,r29,#-8
	lhi	r5,((_freeLinks)>>16)&0xffff
	addui	r5,r5,(_freeLinks)&0xffff
	sw	(r29),r5
	jal	_QueueInit
	nop; not filled.
	addi	r3,r0,#0
	addi	r29,r29,#8
	lhi	r4,((_debugstr)>>16)&0xffff
	addui	r4,r4,(_debugstr)&0xffff
	lhi	r2,((_linkpool_LF8)>>16)&0xffff
	addui	r2,r2,(_linkpool_LF8)&0xffff
L63_LF8:
	addi	r29,r29,#-8
	sw	(r29),r4
	addi	r5,r0,#105
	sw	4(r29),r5
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L65_LF8
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r4
	addi	r5,r0,#43
	sw	4(r29),r5
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L64_LF8
	nop; not filled.
L65_LF8:
	addi	r29,r29,#-8
	lhi	r5,((LC0_LF8)>>16)&0xffff
	addui	r5,r5,(LC0_LF8)&0xffff
	sw	(r29),r5
	sw	4(r29),r3
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L64_LF8:
	addi	r5,r0,#0
	sw	(r2),r5
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_QueueFreeLink
	nop; not filled.
	addi	r29,r29,#8
	addi	r2,r2,#16
	addi	r3,r3,#1
	slei	r1,r3,#399
	bnez	r1,L63_LF8
	nop; not filled.
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueModuleInit
.align 2
.proc _QueueInit
.global _QueueInit
_QueueInit:
;  Function 'QueueInit'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	sw	(r1),r1
	sw	4(r1),r1
	addi	r31,r0,#0
	sw	8(r1),r31
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInit
.data
.align 2
LC1_LF8:
.ascii "%s: %s\n\000"
.align 2
LC2_LF8:
.ascii "QueueFreeLink\000"
.align 2
LC3_LF8:
.ascii "Link not empty\000"
.text
.align 2
.proc _QueueFreeLink
.global _QueueFreeLink
_QueueFreeLink:
;  Function 'QueueFreeLink'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r3,(r30)
	lw	r1,(r3)
	snei	r1,r1,#0
	beqz	r1,L77_LF8
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r4,((LC1_LF8)>>16)&0xffff
	addui	r4,r4,(LC1_LF8)&0xffff
	sw	(r29),r4
	lhi	r1,((LC2_LF8)>>16)&0xffff
	addui	r1,r1,(LC2_LF8)&0xffff
	sw	4(r29),r1
	lhi	r4,((LC3_LF8)>>16)&0xffff
	addui	r4,r4,(LC3_LF8)&0xffff
	sw	8(r29),r4
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L77_LF8:
	lhi	r2,((_freeLinks)>>16)&0xffff
	addui	r2,r2,(_freeLinks)&0xffff
	lw	r1,4(r2)
	sw	8(r3),r2
	sw	4(r3),r1
	lw	r4,(r1)
	sw	(r3),r4
	sw	(r1),r3
	lw	r1,(r3)
	sw	4(r1),r3
	lw	r1,8(r2)
	addi	r1,r1,#1
	sw	8(r2),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueFreeLink
.data
.align 2
LC4_LF8:
.ascii "QueueAllocLink\000"
.align 2
LC5_LF8:
.ascii "Link not allocated!\000"
.text
.align 2
.proc _QueueAllocLink
.global _QueueAllocLink
_QueueAllocLink:
;  Function 'QueueAllocLink'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lhi	r2,((_freeLinks)>>16)&0xffff
	addui	r2,r2,(_freeLinks)&0xffff
	lw	r1,8(r2)
	seqi	r1,r1,#0
	bnez	r1,L92_LF8
	nop; not filled.
	lw	r3,(r2)
	lw	r1,8(r3)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L97_LF8
	nop; not filled.
	lw	r1,4(r3)
	lw	r4,(r3)
	sw	(r1),r4
	lw	r1,(r3)
	lw	r4,4(r3)
	sw	4(r1),r4
	lw	r2,8(r3)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L97_LF8:
	addi	r4,r0,#0
	sw	(r3),r4
	j	L98_LF8
	nop; not filled.
L92_LF8:
	addi	r3,r0,#0
L98_LF8:
	snei	r1,r3,#0
	bnez	r1,L100_LF8
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r4,((LC1_LF8)>>16)&0xffff
	addui	r4,r4,(LC1_LF8)&0xffff
	sw	(r29),r4
	lhi	r1,((LC4_LF8)>>16)&0xffff
	addui	r1,r1,(LC4_LF8)&0xffff
	sw	4(r29),r1
	lhi	r4,((LC5_LF8)>>16)&0xffff
	addui	r4,r4,(LC5_LF8)&0xffff
	sw	8(r29),r4
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L100_LF8:
	add	r1,r0,r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueAllocLink
.data
.align 2
.global _freeLinks
_freeLinks:
.space 12
.align 2
_linkpool_LF8:
.space 6400
; Compiled by GCC

.align 2
_rcsid_LF9:
.ascii "$Id: traps.c,v 1.1 2000/09/20 01:50:19 elm Exp elm $\000"
.text
.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r2,3(r30)
	addi	r31,r0,#0
	andi	r1,r2,#0x00ff
	seqi	r1,r1,#32
	bnez	r1,L6_LF9
	nop; not filled.
	addi	r1,r2,#-9
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#1
	beqz	r1,L5_LF9
	nop; not filled.
L6_LF9:
	addi	r31,r0,#1
L5_LF9:
	add	r1,r0,r31
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r31,3(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	bnez	r1,L12_LF9
	nop; not filled.
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#5
	bnez	r1,L12_LF9
	nop; not filled.
	andi	r1,r31,#0x00ff
	snei	r1,r1,#65
	bnez	r1,L11_LF9
	nop; not filled.
L12_LF9:
	addi	r2,r0,#1
L11_LF9:
	add	r1,r0,r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#15
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#0
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	lw	r2,(r30)
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.align 2
.proc _QueueLinkInit
.global _QueueLinkInit
_QueueLinkInit:
;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	lw	r2,4(r30)
	addi	r31,r0,#0
	sw	(r1),r31
	sw	12(r1),r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLinkInit
.align 2
.proc _QueueNext
.global _QueueNext
_QueueNext:
;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueNext
.align 2
.proc _QueuePrev
.global _QueuePrev
_QueuePrev:
;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueuePrev
.align 2
.proc _QueueFirst
.global _QueueFirst
_QueueFirst:
;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueFirst
.align 2
.proc _QueueLast
.global _QueueLast
_QueueLast:
;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLast
.align 2
.proc _QueueInsertAfter
.global _QueueInsertAfter
_QueueInsertAfter:
;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r2,4(r30)
	lw	r1,8(r30)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertAfter
.align 2
.proc _QueueInsertFirst
.global _QueueInsertFirst
_QueueInsertFirst:
;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	sw	8(r1),r3
	sw	4(r1),r3
	lw	r31,(r3)
	sw	(r1),r31
	sw	(r3),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertFirst
.align 2
.proc _QueueInsertLast
.global _QueueInsertLast
_QueueInsertLast:
;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	lw	r2,4(r3)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertLast
.align 2
.proc _QueueRemove
.global _QueueRemove
_QueueRemove:
;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	lw	r1,8(r31)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L44_LF9
	nop; not filled.
	lw	r1,4(r31)
	lw	r3,(r31)
	sw	(r1),r3
	lw	r1,(r31)
	lw	r3,4(r31)
	sw	4(r1),r3
	lw	r2,8(r31)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L44_LF9:
	addi	r3,r0,#0
	sw	(r31),r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueRemove
.align 2
.proc _QueueLength
.global _QueueLength
_QueueLength:
;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLength
.align 2
.proc _QueueEmpty
.global _QueueEmpty
_QueueEmpty:
;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	seqi	r1,r1,#0
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueEmpty
.global _MY_TIMER
.data
.align 2
_MY_TIMER:
.word 0
.text
.align 2
.proc _TimerSet
.global _TimerSet
_TimerSet:
;  Function 'TimerSet'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lhi	r2,((_MY_TIMER)>>16)&0xffff
	addui	r2,r2,(_MY_TIMER)&0xffff
	lw	r1,(r2)
	add	r1,r1,r3
	sw	(r2),r1
	lhi	r1,#-16
	addui	r1,r1,#16
	sw	(r1),r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _TimerSet
.align 2
.proc _TimerGet
.global _TimerGet
_TimerGet:
;  Function 'TimerGet'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lhi	r1,((_MY_TIMER)>>16)&0xffff
	addui	r1,r1,(_MY_TIMER)&0xffff
	lw	r2,(r1)
	addi	r1,r0,#1000
	movi2fp	f0,r2
	movi2fp	f1,r1
	divu	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _TimerGet
.align 2
.proc _KbdModuleInit
.global _KbdModuleInit
_KbdModuleInit:
;  Function 'KbdModuleInit'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lhi	r1,#-16
	addui	r1,r1,#448
	addi	r31,r0,#1
	sw	(r1),r31
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _KbdModuleInit
.data
.align 2
LC0_LF9:
.ascii " Invalid p_nice value! \n\000"
.align 2
LC1_LF9:
.ascii "Fatal: Cumulative length of all arguments > %d\n\000"
.text
.align 2
.proc _TrapProcessCreateHandler_LF9
_TrapProcessCreateHandler_LF9:
;  Function 'TrapProcessCreateHandler'; 1640 bytes of locals, 13 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#1704; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	sw	28(r29),r9
	sw	32(r29),r10
	sw	36(r29),r11
	sw	40(r29),r12
	sw	44(r29),r13
	sw	48(r29),r14
	lw	r4,(r30)
	lw	r6,4(r30)
	addi	r2,r30,#-1032
	addi	r3,r30,#-9
L67_LF9:
	addi	r14,r0,(#0x0)&0xff
	sb	(r2),r14
	addi	r2,r2,#1
	sle	r1,r2,r3
	bnez	r1,L67_LF9
	nop; not filled.
	addi	r5,r0,#0
	snei	r1,r6,#0
	bnez	r1,L69_LF9
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r2,((_currentPCB)>>16)&0xffff
	addui	r2,r2,(_currentPCB)&0xffff
	lw	r14,(r2)
	sw	(r29),r14
	sw	4(r29),r4
	addi	r1,r30,#-1648
	sw	8(r29),r1
	addi	r14,r0,#512
	sw	12(r29),r14
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	addi	r29,r29,#16
	addi	r4,r30,#-1137
	addi	r3,r30,#-1136
L70_LF9:
	addi	r29,r29,#-16
	lw	r14,(r2)
	sw	(r29),r14
	lw	r1,-1640(r30)
	add	r1,r1,r5
	sw	4(r29),r1
	sw	8(r29),r3
	addi	r14,r0,#1
	sw	12(r29),r14
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	addi	r4,r4,#1
	addi	r3,r3,#1
	addi	r5,r5,#1
	addi	r29,r29,#16
	sleui	r1,r5,#99
	beqz	r1,L75_LF9
	nop; not filled.
	lbu	r1,(r4)
	snei	r1,r1,#0
	beqz	r1,L75_LF9
	nop; not filled.
	j	L70_LF9
	nop; not filled.
L69_LF9:
	addi	r29,r29,#-16
	sw	(r29),r4
	addi	r1,r30,#-1648
	sw	4(r29),r1
	addi	r14,r0,#512
	sw	8(r29),r14
	jal	_bcopy
	nop; not filled.
	lw	r14,-1640(r30)
	sw	(r29),r14
	addi	r1,r30,#-1136
	sw	4(r29),r1
	addi	r14,r0,#100
	sw	8(r29),r14
	jal	_dstrncpy
	nop; not filled.
	addi	r29,r29,#16
L75_LF9:
	addi	r14,r0,(#0x0)&0xff
	sb	-1037(r30),r14
	addi	r5,r0,#0
	lw	r12,-1648(r30)
	lw	r13,-1644(r30)
	addi	r1,r12,#20
	sgtui	r1,r1,#39
	beqz	r1,L76_LF9
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r14,((LC0_LF9)>>16)&0xffff
	addui	r14,r14,(LC0_LF9)&0xffff
	sw	(r29),r14
	jal	_printf
	nop; not filled.
	jal	_exit
	nop; not filled.
L76_LF9:
	snei	r1,r6,#0
	bnez	r1,L77_LF9
	nop; not filled.
	lhi	r8,((_currentPCB)>>16)&0xffff
	addui	r8,r8,(_currentPCB)&0xffff
	addi	r11,r30,#-1032
	addi	r10,r30,#-1033
	add	r6,r0,r30
	addi	r9,r30,#500
L89_LF9:
	lw	r1,-1640(r6)
	snei	r1,r1,#0
	beqz	r1,L90_LF9
	nop; not filled.
	addi	r2,r0,#0
	add	r7,r0,r6
	add	r4,r5,r10
	add	r3,r5,r11
L84_LF9:
	addi	r29,r29,#-16
	lw	r14,(r8)
	sw	(r29),r14
	lw	r1,-1640(r7)
	add	r1,r1,r2
	sw	4(r29),r1
	sw	8(r29),r3
	addi	r14,r0,#1
	sw	12(r29),r14
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	addi	r4,r4,#1
	addi	r3,r3,#1
	addi	r5,r5,#1
	addi	r2,r2,#1
	addi	r29,r29,#16
	sleui	r1,r5,#1023
	beqz	r1,L81_LF9
	nop; not filled.
	lbu	r1,(r4)
	snei	r1,r1,#0
	bnez	r1,L84_LF9
	nop; not filled.
L81_LF9:
	addi	r6,r6,#4
	sle	r1,r6,r9
	beqz	r1,L90_LF9
	nop; not filled.
	j	L89_LF9
	nop; not filled.
L77_LF9:
	addi	r5,r30,#-1032
	add	r7,r0,r5
	addi	r3,r30,#-8
	addi	r6,r30,#32
L97_LF9:
	addi	r4,r3,#-1640
	lw	r2,(r4)
	snei	r1,r2,#0
	beqz	r1,L90_LF9
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_dstrlen
	nop; not filled.
	add	r2,r5,r1
	sub	r1,r2,r7
	addi	r29,r29,#8
	sgti	r1,r1,#1024
	beqz	r1,L96_LF9
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r14,((LC1_LF9)>>16)&0xffff
	addui	r14,r14,(LC1_LF9)&0xffff
	sw	(r29),r14
	addi	r14,r0,#1024
	sw	4(r29),r14
	jal	_printf
	nop; not filled.
	jal	_exitsim
	nop; not filled.
	addi	r29,r29,#8
L96_LF9:
	addi	r29,r29,#-8
	sw	(r29),r5
	lw	r1,(r4)
	sw	4(r29),r1
	jal	_dstrcpy
	nop; not filled.
	addi	r14,r0,(#0x0)&0xff
	sb	(r2),r14
	addi	r29,r29,#8
	addi	r3,r3,#4
	sle	r1,r3,r6
	bnez	r1,L97_LF9
	nop; not filled.
L90_LF9:
	addi	r14,r0,(#0x0)&0xff
	sb	-9(r30),r14
	addi	r29,r29,#-24
	addi	r14,r0,#0
	sw	(r29),r14
	addi	r1,r30,#-1032
	sw	4(r29),r1
	sw	8(r29),r12
	sw	12(r29),r13
	addi	r1,r30,#-1136
	sw	16(r29),r1
	addi	r14,r0,#1
	sw	20(r29),r14
	jal	_ProcessFork
	nop; not filled.
	addi	r29,r29,#24
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r9,28(r29)
	lw	r10,32(r29)
	lw	r11,36(r29)
	lw	r12,40(r29)
	lw	r13,44(r29)
	lw	r14,48(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _TrapProcessCreateHandler_LF9
.align 2
.proc _TrapPrintfHandler_LF9
_TrapPrintfHandler_LF9:
;  Function 'TrapPrintfHandler'; 160 bytes of locals, 10 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#208; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	sw	28(r29),r9
	sw	32(r29),r10
	sw	36(r29),r11
	lw	r4,(r30)
	lw	r1,4(r30)
	addi	r8,r0,#0
	add	r3,r0,r8
	snei	r1,r1,#0
	bnez	r1,L99_LF9
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r2,((_currentPCB)>>16)&0xffff
	addui	r2,r2,(_currentPCB)&0xffff
	lw	r11,(r2)
	sw	(r29),r11
	sw	4(r29),r4
	addi	r1,r30,#-168
	sw	8(r29),r1
	addi	r11,r0,#40
	sw	12(r29),r11
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	addi	r29,r29,#16
	addi	r5,r30,#-89
	addi	r4,r30,#-88
L100_LF9:
	addi	r29,r29,#-16
	lw	r11,(r2)
	sw	(r29),r11
	lw	r1,-168(r30)
	add	r1,r1,r3
	sw	4(r29),r1
	sw	8(r29),r4
	addi	r11,r0,#1
	sw	12(r29),r11
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	addi	r5,r5,#1
	addi	r4,r4,#1
	addi	r3,r3,#1
	addi	r29,r29,#16
	sleui	r1,r3,#79
	beqz	r1,L105_LF9
	nop; not filled.
	lbu	r1,(r5)
	snei	r1,r1,#0
	beqz	r1,L105_LF9
	nop; not filled.
	j	L100_LF9
	nop; not filled.
L99_LF9:
	addi	r29,r29,#-16
	sw	(r29),r4
	addi	r1,r30,#-168
	sw	4(r29),r1
	addi	r11,r0,#40
	sw	8(r29),r11
	jal	_bcopy
	nop; not filled.
	lw	r11,-168(r30)
	sw	(r29),r11
	addi	r1,r30,#-88
	sw	4(r29),r1
	addi	r11,r0,#80
	sw	8(r29),r11
	jal	_dstrncpy
	nop; not filled.
	addi	r29,r29,#16
L105_LF9:
	addi	r11,r0,(#0x0)&0xff
	sb	-9(r30),r11
	addi	r3,r30,#-88
	lb	r2,(r3)
	andi	r1,r2,#0x00ff
	snei	r1,r1,#0
	beqz	r1,L107_LF9
	nop; not filled.
	addi	r10,r30,#-8
	addi	r9,r30,#-164
	slli	r1,r8,#0x2
	add	r7,r1,r9
	add	r6,r1,r10
L109_LF9:
	andi	r1,r2,#0x00ff
	seqi	r1,r1,#37
	beqz	r1,L108_LF9
	nop; not filled.
	lbu	r1,1(r3)
	seqi	r1,r1,#37
	beqz	r1,L111_LF9
	nop; not filled.
	addi	r3,r3,#1
	j	L108_LF9
	nop; not filled.
L111_LF9:
	lw	r11,(r7)
	sw	-120(r6),r11
	slli	r1,r8,#0x2
	add	r5,r1,r9
	add	r4,r1,r10
L114_LF9:
	addi	r3,r3,#1
	lb	r31,(r3)
	andi	r2,r31,#0x00ff
	seqi	r1,r2,#115
	bnez	r1,L113_LF9
	nop; not filled.
	seqi	r1,r2,#108
	bnez	r1,L114_LF9
	nop; not filled.
	addi	r1,r31,#-102
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#1
	bnez	r1,L120_LF9
	nop; not filled.
	seqi	r1,r2,#101
	beqz	r1,L119_LF9
	nop; not filled.
L120_LF9:
	addi	r7,r7,#4
	addi	r6,r6,#4
	addi	r8,r8,#1
	lw	r5,4(r5)
	sw	-116(r4),r5
	j	L113_LF9
	nop; not filled.
L119_LF9:
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#25
	beqz	r1,L114_LF9
	nop; not filled.
L113_LF9:
	addi	r7,r7,#4
	addi	r6,r6,#4
	addi	r8,r8,#1
L108_LF9:
	addi	r3,r3,#1
	lb	r2,(r3)
	andi	r1,r2,#0x00ff
	snei	r1,r1,#0
	bnez	r1,L109_LF9
	nop; not filled.
L107_LF9:
	addi	r29,r29,#-40
	addi	r1,r30,#-88
	sw	(r29),r1
	lw	r1,-128(r30)
	sw	4(r29),r1
	lw	r11,-124(r30)
	sw	8(r29),r11
	lw	r11,-120(r30)
	sw	12(r29),r11
	lw	r11,-116(r30)
	sw	16(r29),r11
	lw	r11,-112(r30)
	sw	20(r29),r11
	lw	r11,-108(r30)
	sw	24(r29),r11
	lw	r11,-104(r30)
	sw	28(r29),r11
	lw	r11,-100(r30)
	sw	32(r29),r11
	jal	_printf
	nop; not filled.
	addi	r29,r29,#40
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r9,28(r29)
	lw	r10,32(r29)
	lw	r11,36(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _TrapPrintfHandler_LF9
.data
.align 2
LC2_LF9:
.ascii "Interrupt cause=0x%x iar=0x%x isr=0x%x args=0x%08x.\n\000"
.align 2
LC3_LF9:
.ascii "Got a context switch trap!\n\000"
.align 2
LC4_LF9:
.ascii "Got an exit trap!\n\000"
.align 2
LC5_LF9:
.ascii "Got a fork trap!\n\000"
.align 2
LC6_LF9:
.ascii "Got a process sleep trap!\n\000"
.align 2
LC7_LF9:
.ascii "Got a printf trap!\n\000"
.align 2
LC8_LF9:
.ascii "Got an open with parameters (\'%s\',0x%x)\n\000"
.align 2
LC9_LF9:
.ascii "Got an unrecognized trap (0x%x) - exiting!\n\000"
.align 2
LC10_LF9:
.ascii "Got a timer interrupt!\n\000"
.align 2
LC11_LF9:
.ascii "Got a keyboard interrupt (char=0x%x(%c), nleft=%d)!\n\000"
.align 2
LC12_LF9:
.ascii "Exiting after illegal access at iar=0x%x, isr=0x%x\n\000"
.align 2
LC13_LF9:
.ascii "Exiting after illegal address at iar=0x%x, isr=0x%x\n\000"
.align 2
LC14_LF9:
.ascii "Exiting after illegal instruction at iar=0x%x, isr=0x%x\n\000"
.align 2
LC15_LF9:
.ascii "Exiting after page fault at iar=0x%x, isr=0x%x\n\000"
.align 2
LC16_LF9:
.ascii "Got an unrecognized system interrupt (0x%x) - exiting!\n\000"
.align 2
LC17_LF9:
.ascii "About to return from dointerrupt.\n\000"
.text
.align 2
.proc _dointerrupt
.global _dointerrupt
_dointerrupt:
;  Function 'dointerrupt'; 56 bytes of locals, 6 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#88; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	lw	r2,(r30)
	lw	r6,4(r30)
	lw	r4,8(r30)
	lw	r3,12(r30)
	addi	r29,r29,#-8
	lhi	r5,((_debugstr)>>16)&0xffff
	addui	r5,r5,(_debugstr)&0xffff
	sw	(r29),r5
	addi	r7,r0,#116
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L128_LF9
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r5
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L127_LF9
	nop; not filled.
L128_LF9:
	addi	r29,r29,#-24
	lhi	r7,((LC2_LF9)>>16)&0xffff
	addui	r7,r7,(LC2_LF9)&0xffff
	sw	(r29),r7
	sw	4(r29),r2
	sw	8(r29),r6
	sw	12(r29),r4
	sw	16(r29),r3
	jal	_printf
	nop; not filled.
	addi	r29,r29,#24
L127_LF9:
	lhi	r7,#2048
	addui	r7,r7,#0
	and	r1,r2,r7
	snei	r1,r1,#0
	beqz	r1,L129_LF9
	nop; not filled.
	lhi	r7,#-2049
	addui	r7,r7,#65535
	and	r2,r2,r7
	seqi	r1,r2,#1075
	bnez	r1,L223_LF9
	nop; not filled.
	sgtui	r1,r2,#1075
	bnez	r1,L215_LF9
	nop; not filled.
	seqi	r1,r2,#531
	bnez	r1,L146_LF9
	nop; not filled.
	sgtui	r1,r2,#531
	bnez	r1,L216_LF9
	nop; not filled.
	seqi	r1,r2,#528
	bnez	r1,L154_LF9
	nop; not filled.
	sgtui	r1,r2,#528
	bnez	r1,L217_LF9
	nop; not filled.
	seqi	r1,r2,#80
	bnez	r1,L207_LF9
	nop; not filled.
	seqi	r1,r2,#513
	beqz	r1,L213_LF9
	nop; not filled.
	j	L143_LF9
	nop; not filled.
L217_LF9:
	seqi	r1,r2,#529
	bnez	r1,L157_LF9
	nop; not filled.
	seqi	r1,r2,#530
	beqz	r1,L213_LF9
	nop; not filled.
	j	L163_LF9
	nop; not filled.
L216_LF9:
	seqi	r1,r2,#1024
	bnez	r1,L131_LF9
	nop; not filled.
	sgtui	r1,r2,#1024
	bnez	r1,L218_LF9
	nop; not filled.
	seqi	r1,r2,#532
	bnez	r1,L151_LF9
	nop; not filled.
	seqi	r1,r2,#768
	beqz	r1,L213_LF9
	nop; not filled.
	j	L134_LF9
	nop; not filled.
L218_LF9:
	seqi	r1,r2,#1072
	bnez	r1,L137_LF9
	nop; not filled.
	sgtui	r1,r2,#1072
	bnez	r1,L219_LF9
	nop; not filled.
	seqi	r1,r2,#1040
	beqz	r1,L213_LF9
	nop; not filled.
	j	L140_LF9
	nop; not filled.
L219_LF9:
	seqi	r1,r2,#1074
	beqz	r1,L213_LF9
	nop; not filled.
	j	L166_LF9
	nop; not filled.
L215_LF9:
	seqi	r1,r2,#1108
	bnez	r1,L187_LF9
	nop; not filled.
	sgtui	r1,r2,#1108
	bnez	r1,L220_LF9
	nop; not filled.
	seqi	r1,r2,#1104
	bnez	r1,L174_LF9
	nop; not filled.
	sgtui	r1,r2,#1104
	bnez	r1,L221_LF9
	nop; not filled.
	seqi	r1,r2,#1088
	bnez	r1,L169_LF9
	nop; not filled.
	seqi	r1,r2,#1089
	beqz	r1,L213_LF9
	nop; not filled.
	j	L170_LF9
	nop; not filled.
L221_LF9:
	seqi	r1,r2,#1106
	bnez	r1,L182_LF9
	nop; not filled.
	sgtui	r1,r2,#1106
	beqz	r1,L178_LF9
	nop; not filled.
	j	L186_LF9
	nop; not filled.
L220_LF9:
	seqi	r1,r2,#1111
	bnez	r1,L199_LF9
	nop; not filled.
	sgtui	r1,r2,#1111
	bnez	r1,L222_LF9
	nop; not filled.
	seqi	r1,r2,#1109
	bnez	r1,L191_LF9
	nop; not filled.
	seqi	r1,r2,#1110
	beqz	r1,L213_LF9
	nop; not filled.
	j	L195_LF9
	nop; not filled.
L222_LF9:
	seqi	r1,r2,#1113
	bnez	r1,L209_LF9
	nop; not filled.
	sltui	r1,r2,#1113
	bnez	r1,L203_LF9
	nop; not filled.
	seqi	r1,r2,#1408
	beqz	r1,L213_LF9
	nop; not filled.
	j	L160_LF9
	nop; not filled.
L131_LF9:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r7,r0,#116
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L133_LF9
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L226_LF9
	nop; not filled.
L133_LF9:
	addi	r29,r29,#-8
	lhi	r7,((LC3_LF9)>>16)&0xffff
	addui	r7,r7,(LC3_LF9)&0xffff
	j	L256_LF9
	nop; not filled.
L134_LF9:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r7,r0,#116
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L136_LF9
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L135_LF9
	nop; not filled.
L136_LF9:
	addi	r29,r29,#-8
	lhi	r7,((LC4_LF9)>>16)&0xffff
	addui	r7,r7,(LC4_LF9)&0xffff
	sw	(r29),r7
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L135_LF9:
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	jal	_ProcessDestroy
	nop; not filled.
	jal	_ProcessSchedule
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L137_LF9:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r7,r0,#116
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L139_LF9
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L223_LF9
	nop; not filled.
L139_LF9:
	addi	r29,r29,#-8
	lhi	r7,((LC5_LF9)>>16)&0xffff
	addui	r7,r7,(LC5_LF9)&0xffff
	sw	(r29),r7
	jal	_printf
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L140_LF9:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r7,r0,#116
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L142_LF9
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L141_LF9
	nop; not filled.
L142_LF9:
	addi	r29,r29,#-8
	lhi	r7,((LC6_LF9)>>16)&0xffff
	addui	r7,r7,(LC6_LF9)&0xffff
	sw	(r29),r7
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L141_LF9:
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	jal	_ProcessSuspend
	nop; not filled.
	jal	_ProcessSchedule
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L143_LF9:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r7,r0,#116
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L145_LF9
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L144_LF9
	nop; not filled.
L145_LF9:
	addi	r29,r29,#-8
	lhi	r7,((LC7_LF9)>>16)&0xffff
	addui	r7,r7,(LC7_LF9)&0xffff
	sw	(r29),r7
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L144_LF9:
	addi	r29,r29,#-8
	sw	(r29),r3
	andi	r1,r4,#64
	sw	4(r29),r1
	jal	_TrapPrintfHandler_LF9
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L146_LF9:
	andi	r1,r4,#64
	snei	r1,r1,#0
	beqz	r1,L147_LF9
	nop; not filled.
	lw	r7,(r3)
	sw	-24(r30),r7
	lw	r3,4(r3)
	sw	-20(r30),r3
	j	L148_LF9
	nop; not filled.
L147_LF9:
	addi	r29,r29,#-16
	lhi	r2,((_currentPCB)>>16)&0xffff
	addui	r2,r2,(_currentPCB)&0xffff
	lw	r7,(r2)
	sw	(r29),r7
	sw	4(r29),r3
	addi	r1,r30,#-24
	sw	8(r29),r1
	addi	r7,r0,#8
	sw	12(r29),r7
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	lw	r2,(r2)
	sw	(r29),r2
	lw	r1,-24(r30)
	sw	4(r29),r1
	addi	r2,r30,#-56
	sw	8(r29),r2
	addi	r7,r0,#31
	sw	12(r29),r7
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	addi	r7,r0,(#0x0)&0xff
	sb	-25(r30),r7
	sw	-24(r30),r2
	addi	r29,r29,#16
L148_LF9:
	addi	r29,r29,#-8
	addi	r7,r0,#0
	sw	(r29),r7
	jal	_SetIntrs
	nop; not filled.
	add	r2,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	lw	r1,-20(r30)
	lhi	r7,#1
	addui	r7,r7,#0
	add	r1,r1,r7
	sw	4(r29),r1
	jal	_ProcessSetResult
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r7,((LC8_LF9)>>16)&0xffff
	addui	r7,r7,(LC8_LF9)&0xffff
	sw	(r29),r7
	lw	r1,-24(r30)
	sw	4(r29),r1
	lw	r7,-20(r30)
	sw	8(r29),r7
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L151_LF9:
	addi	r29,r29,#-8
	addi	r7,r0,#0
	sw	(r29),r7
	jal	_SetIntrs
	nop; not filled.
	add	r2,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	addi	r7,r0,#-1
	sw	4(r29),r7
	jal	_ProcessSetResult
	nop; not filled.
	addi	r29,r29,#8
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L154_LF9:
	addi	r29,r29,#-8
	addi	r7,r0,#0
	sw	(r29),r7
	jal	_SetIntrs
	nop; not filled.
	add	r2,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	addi	r7,r0,#-1
	sw	4(r29),r7
	jal	_ProcessSetResult
	nop; not filled.
	addi	r29,r29,#8
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L157_LF9:
	addi	r29,r29,#-8
	addi	r7,r0,#0
	sw	(r29),r7
	jal	_SetIntrs
	nop; not filled.
	add	r2,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	addi	r7,r0,#-1
	sw	4(r29),r7
	jal	_ProcessSetResult
	nop; not filled.
	addi	r29,r29,#8
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L160_LF9:
	addi	r29,r29,#-8
	addi	r7,r0,#0
	sw	(r29),r7
	jal	_SetIntrs
	nop; not filled.
	add	r2,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	addi	r7,r0,#-1
	sw	4(r29),r7
	jal	_ProcessSetResult
	nop; not filled.
	addi	r29,r29,#8
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L163_LF9:
	addi	r29,r29,#-8
	addi	r7,r0,#0
	sw	(r29),r7
	jal	_SetIntrs
	nop; not filled.
	add	r2,r0,r1
	addi	r29,r29,#8
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	addi	r7,r0,#-1
	sw	4(r29),r7
	jal	_ProcessSetResult
	nop; not filled.
	addi	r29,r29,#8
	addi	r29,r29,#-8
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L166_LF9:
	addi	r29,r29,#-8
	sw	(r29),r3
	andi	r1,r4,#64
	sw	4(r29),r1
	jal	_TrapProcessCreateHandler_LF9
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L169_LF9:
	addi	r29,r29,#-8
	lhi	r2,((_currentPCB)>>16)&0xffff
	addui	r2,r2,(_currentPCB)&0xffff
	lw	r7,(r2)
	sw	(r29),r7
	jal	_MemoryCreateSharedPage
	nop; not filled.
	add	r31,r0,r1
	lw	r2,(r2)
	sw	(r29),r2
	sw	4(r29),r31
	jal	_ProcessSetResult
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L170_LF9:
	andi	r1,r4,#64
	snei	r1,r1,#0
	bnez	r1,L172_LF9
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r3
	addi	r1,r30,#-60
	sw	8(r29),r1
	addi	r7,r0,#4
	sw	12(r29),r7
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	j	L244_LF9
	nop; not filled.
L172_LF9:
	addi	r29,r29,#-16
	sw	(r29),r3
	addi	r1,r30,#-60
	sw	4(r29),r1
	addi	r7,r0,#4
	sw	8(r29),r7
	jal	_bcopy
	nop; not filled.
L244_LF9:
	addi	r29,r29,#16
	lw	r31,-60(r30)
	addi	r29,r29,#-8
	lhi	r2,((_currentPCB)>>16)&0xffff
	addui	r2,r2,(_currentPCB)&0xffff
	lw	r7,(r2)
	sw	(r29),r7
	sw	4(r29),r31
	jal	_mmap
	nop; not filled.
	add	r31,r0,r1
	lw	r2,(r2)
	sw	(r29),r2
	sw	4(r29),r31
	jal	_ProcessSetResult
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L174_LF9:
	andi	r1,r4,#64
	snei	r1,r1,#0
	bnez	r1,L176_LF9
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r3
	addi	r1,r30,#-60
	sw	8(r29),r1
	addi	r7,r0,#4
	sw	12(r29),r7
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	j	L245_LF9
	nop; not filled.
L176_LF9:
	addi	r29,r29,#-16
	sw	(r29),r3
	addi	r1,r30,#-60
	sw	4(r29),r1
	addi	r7,r0,#4
	sw	8(r29),r7
	jal	_bcopy
	nop; not filled.
L245_LF9:
	addi	r29,r29,#16
	addi	r29,r29,#-8
	lw	r7,-60(r30)
	sw	(r29),r7
	jal	_SemCreate
	nop; not filled.
	add	r2,r0,r1
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r2
	jal	_ProcessSetResult
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L178_LF9:
	andi	r1,r4,#64
	snei	r1,r1,#0
	bnez	r1,L180_LF9
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r3
	addi	r1,r30,#-60
	sw	8(r29),r1
	addi	r7,r0,#4
	sw	12(r29),r7
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	j	L246_LF9
	nop; not filled.
L180_LF9:
	addi	r29,r29,#-16
	sw	(r29),r3
	addi	r1,r30,#-60
	sw	4(r29),r1
	addi	r7,r0,#4
	sw	8(r29),r7
	jal	_bcopy
	nop; not filled.
L246_LF9:
	addi	r29,r29,#16
	addi	r29,r29,#-8
	lw	r7,-60(r30)
	sw	(r29),r7
	jal	_SemHandleWait
	nop; not filled.
	add	r31,r0,r1
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r31
	jal	_ProcessSetResult
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L182_LF9:
	andi	r1,r4,#64
	snei	r1,r1,#0
	bnez	r1,L184_LF9
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r3
	addi	r1,r30,#-60
	sw	8(r29),r1
	addi	r7,r0,#4
	sw	12(r29),r7
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	j	L247_LF9
	nop; not filled.
L184_LF9:
	addi	r29,r29,#-16
	sw	(r29),r3
	addi	r1,r30,#-60
	sw	4(r29),r1
	addi	r7,r0,#4
	sw	8(r29),r7
	jal	_bcopy
	nop; not filled.
L247_LF9:
	addi	r29,r29,#16
	addi	r29,r29,#-8
	lw	r7,-60(r30)
	sw	(r29),r7
	jal	_SemHandleSignal
	nop; not filled.
	add	r31,r0,r1
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r31
	jal	_ProcessSetResult
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L186_LF9:
	jal	_LockCreate
	nop; not filled.
	add	r2,r0,r1
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r2
	jal	_ProcessSetResult
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L187_LF9:
	andi	r1,r4,#64
	snei	r1,r1,#0
	bnez	r1,L189_LF9
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r3
	addi	r1,r30,#-60
	sw	8(r29),r1
	addi	r7,r0,#4
	sw	12(r29),r7
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	j	L248_LF9
	nop; not filled.
L189_LF9:
	addi	r29,r29,#-16
	sw	(r29),r3
	addi	r1,r30,#-60
	sw	4(r29),r1
	addi	r7,r0,#4
	sw	8(r29),r7
	jal	_bcopy
	nop; not filled.
L248_LF9:
	addi	r29,r29,#16
	addi	r29,r29,#-8
	lw	r7,-60(r30)
	sw	(r29),r7
	jal	_LockHandleAcquire
	nop; not filled.
	add	r31,r0,r1
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r31
	jal	_ProcessSetResult
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L191_LF9:
	andi	r1,r4,#64
	snei	r1,r1,#0
	bnez	r1,L193_LF9
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r3
	addi	r1,r30,#-60
	sw	8(r29),r1
	addi	r7,r0,#4
	sw	12(r29),r7
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	j	L249_LF9
	nop; not filled.
L193_LF9:
	addi	r29,r29,#-16
	sw	(r29),r3
	addi	r1,r30,#-60
	sw	4(r29),r1
	addi	r7,r0,#4
	sw	8(r29),r7
	jal	_bcopy
	nop; not filled.
L249_LF9:
	addi	r29,r29,#16
	addi	r29,r29,#-8
	lw	r7,-60(r30)
	sw	(r29),r7
	jal	_LockHandleRelease
	nop; not filled.
	add	r31,r0,r1
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r31
	jal	_ProcessSetResult
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L195_LF9:
	andi	r1,r4,#64
	snei	r1,r1,#0
	bnez	r1,L197_LF9
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r3
	addi	r1,r30,#-60
	sw	8(r29),r1
	addi	r7,r0,#4
	sw	12(r29),r7
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	j	L250_LF9
	nop; not filled.
L197_LF9:
	addi	r29,r29,#-16
	sw	(r29),r3
	addi	r1,r30,#-60
	sw	4(r29),r1
	addi	r7,r0,#4
	sw	8(r29),r7
	jal	_bcopy
	nop; not filled.
L250_LF9:
	addi	r29,r29,#16
	addi	r29,r29,#-8
	lw	r7,-60(r30)
	sw	(r29),r7
	jal	_CondCreate
	nop; not filled.
	add	r2,r0,r1
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r2
	jal	_ProcessSetResult
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L199_LF9:
	andi	r1,r4,#64
	snei	r1,r1,#0
	bnez	r1,L201_LF9
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r3
	addi	r1,r30,#-60
	sw	8(r29),r1
	addi	r7,r0,#4
	sw	12(r29),r7
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	j	L251_LF9
	nop; not filled.
L201_LF9:
	addi	r29,r29,#-16
	sw	(r29),r3
	addi	r1,r30,#-60
	sw	4(r29),r1
	addi	r7,r0,#4
	sw	8(r29),r7
	jal	_bcopy
	nop; not filled.
L251_LF9:
	addi	r29,r29,#16
	addi	r29,r29,#-8
	lw	r7,-60(r30)
	sw	(r29),r7
	jal	_CondHandleWait
	nop; not filled.
	add	r2,r0,r1
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r2
	jal	_ProcessSetResult
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L203_LF9:
	andi	r1,r4,#64
	snei	r1,r1,#0
	bnez	r1,L205_LF9
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r3
	addi	r1,r30,#-60
	sw	8(r29),r1
	addi	r7,r0,#4
	sw	12(r29),r7
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	j	L252_LF9
	nop; not filled.
L205_LF9:
	addi	r29,r29,#-16
	sw	(r29),r3
	addi	r1,r30,#-60
	sw	4(r29),r1
	addi	r7,r0,#4
	sw	8(r29),r7
	jal	_bcopy
	nop; not filled.
L252_LF9:
	addi	r29,r29,#16
	addi	r29,r29,#-8
	lw	r7,-60(r30)
	sw	(r29),r7
	jal	_CondHandleSignal
	nop; not filled.
	add	r2,r0,r1
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r2
	jal	_ProcessSetResult
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L207_LF9:
	lhi	r1,((_MY_TIMER)>>16)&0xffff
	addui	r1,r1,(_MY_TIMER)&0xffff
	lw	r2,(r1)
	addi	r1,r0,#1000
	movi2fp	f0,r2
	movi2fp	f1,r1
	divu	f0,f0,f1
	movfp2i	r2,f0
	addi	r29,r29,#-8
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r2
	jal	_ProcessSetResult
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L209_LF9:
	andi	r1,r4,#64
	snei	r1,r1,#0
	bnez	r1,L211_LF9
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r3
	addi	r1,r30,#-60
	sw	8(r29),r1
	addi	r7,r0,#4
	sw	12(r29),r7
	jal	_MemoryCopyUserToSystem
	nop; not filled.
	j	L253_LF9
	nop; not filled.
L211_LF9:
	addi	r29,r29,#-16
	sw	(r29),r3
	addi	r1,r30,#-60
	sw	4(r29),r1
	addi	r7,r0,#4
	sw	8(r29),r7
	jal	_bcopy
	nop; not filled.
L253_LF9:
	addi	r29,r29,#16
	addi	r29,r29,#-8
	lw	r7,-60(r30)
	sw	(r29),r7
	jal	_CondHandleBroadcast
	nop; not filled.
	add	r2,r0,r1
	lhi	r1,((_currentPCB)>>16)&0xffff
	addui	r1,r1,(_currentPCB)&0xffff
	lw	r1,(r1)
	sw	(r29),r1
	sw	4(r29),r2
	jal	_ProcessSetResult
	nop; not filled.
	j	L243_LF9
	nop; not filled.
L213_LF9:
	addi	r29,r29,#-8
	lhi	r7,((LC9_LF9)>>16)&0xffff
	addui	r7,r7,(LC9_LF9)&0xffff
	j	L254_LF9
	nop; not filled.
L129_LF9:
	seqi	r1,r2,#3
	bnez	r1,L233_LF9
	nop; not filled.
	sgtui	r1,r2,#3
	bnez	r1,L239_LF9
	nop; not filled.
	seqi	r1,r2,#1
	bnez	r1,L235_LF9
	nop; not filled.
	seqi	r1,r2,#2
	beqz	r1,L237_LF9
	nop; not filled.
	j	L234_LF9
	nop; not filled.
L239_LF9:
	seqi	r1,r2,#64
	bnez	r1,L225_LF9
	nop; not filled.
	sgtui	r1,r2,#64
	bnez	r1,L240_LF9
	nop; not filled.
	seqi	r1,r2,#32
	beqz	r1,L237_LF9
	nop; not filled.
	j	L236_LF9
	nop; not filled.
L240_LF9:
	seqi	r1,r2,#72
	beqz	r1,L237_LF9
	nop; not filled.
	j	L228_LF9
	nop; not filled.
L225_LF9:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r7,r0,#116
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L227_LF9
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L226_LF9
	nop; not filled.
L227_LF9:
	addi	r29,r29,#-8
	lhi	r7,((LC10_LF9)>>16)&0xffff
	addui	r7,r7,(LC10_LF9)&0xffff
L256_LF9:
	sw	(r29),r7
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L226_LF9:
	jal	_ProcessSchedule
	nop; not filled.
	j	L223_LF9
	nop; not filled.
L228_LF9:
	lhi	r4,#-16
	addui	r4,r4,#416
	lhi	r3,#-16
	addui	r3,r3,#384
L229_LF9:
	lw	r2,(r4)
	lw	r1,(r3)
	addi	r29,r29,#-16
	lhi	r7,((LC11_LF9)>>16)&0xffff
	addui	r7,r7,(LC11_LF9)&0xffff
	sw	(r29),r7
	sw	4(r29),r1
	sw	8(r29),r1
	sw	12(r29),r2
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
	sgti	r1,r2,#1
	beqz	r1,L223_LF9
	nop; not filled.
	j	L229_LF9
	nop; not filled.
L233_LF9:
	addi	r29,r29,#-16
	lhi	r7,((LC12_LF9)>>16)&0xffff
	addui	r7,r7,(LC12_LF9)&0xffff
	j	L255_LF9
	nop; not filled.
L234_LF9:
	addi	r29,r29,#-16
	lhi	r7,((LC13_LF9)>>16)&0xffff
	addui	r7,r7,(LC13_LF9)&0xffff
	j	L255_LF9
	nop; not filled.
L235_LF9:
	addi	r29,r29,#-16
	lhi	r7,((LC14_LF9)>>16)&0xffff
	addui	r7,r7,(LC14_LF9)&0xffff
	j	L255_LF9
	nop; not filled.
L236_LF9:
	addi	r29,r29,#-16
	lhi	r7,((LC15_LF9)>>16)&0xffff
	addui	r7,r7,(LC15_LF9)&0xffff
L255_LF9:
	sw	(r29),r7
	sw	4(r29),r6
	sw	8(r29),r4
	jal	_printf
	nop; not filled.
	jal	_exitsim
	nop; not filled.
	addi	r29,r29,#16
	j	L223_LF9
	nop; not filled.
L237_LF9:
	addi	r29,r29,#-8
	lhi	r7,((LC16_LF9)>>16)&0xffff
	addui	r7,r7,(LC16_LF9)&0xffff
L254_LF9:
	sw	(r29),r7
	sw	4(r29),r2
	jal	_printf
	nop; not filled.
	jal	_exitsim
	nop; not filled.
L243_LF9:
	addi	r29,r29,#8
L223_LF9:
	addi	r29,r29,#-8
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r29),r2
	addi	r7,r0,#116
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	bnez	r1,L242_LF9
	nop; not filled.
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r7,r0,#43
	sw	4(r29),r7
	jal	_dindex
	nop; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#0
	beqz	r1,L241_LF9
	nop; not filled.
L242_LF9:
	addi	r29,r29,#-8
	lhi	r7,((LC17_LF9)>>16)&0xffff
	addui	r7,r7,(LC17_LF9)&0xffff
	sw	(r29),r7
	jal	_printf
	nop; not filled.
	addi	r29,r29,#8
L241_LF9:
	jal	_intrreturn
	nop; not filled.
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _dointerrupt
; Compiled by GCC

.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r2,3(r30)
	addi	r31,r0,#0
	andi	r1,r2,#0x00ff
	seqi	r1,r1,#32
	bnez	r1,L6_LF10
	nop; not filled.
	addi	r1,r2,#-9
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#1
	beqz	r1,L5_LF10
	nop; not filled.
L6_LF10:
	addi	r31,r0,#1
L5_LF10:
	add	r1,r0,r31
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lb	r31,3(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	bnez	r1,L12_LF10
	nop; not filled.
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#5
	bnez	r1,L12_LF10
	nop; not filled.
	andi	r1,r31,#0x00ff
	snei	r1,r1,#65
	bnez	r1,L11_LF10
	nop; not filled.
L12_LF10:
	addi	r2,r0,#1
L11_LF10:
	add	r1,r0,r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#15
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	addi	r2,r0,#0
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	lw	r2,(r30)
	sw	(r29),r2
	jal	_SetIntrs
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.align 2
.proc _QueueLinkInit
.global _QueueLinkInit
_QueueLinkInit:
;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	lw	r2,4(r30)
	addi	r31,r0,#0
	sw	(r1),r31
	sw	12(r1),r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLinkInit
.align 2
.proc _QueueNext
.global _QueueNext
_QueueNext:
;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueNext
.align 2
.proc _QueuePrev
.global _QueuePrev
_QueuePrev:
;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueuePrev
.align 2
.proc _QueueFirst
.global _QueueFirst
_QueueFirst:
;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueFirst
.align 2
.proc _QueueLast
.global _QueueLast
_QueueLast:
;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,4(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLast
.align 2
.proc _QueueInsertAfter
.global _QueueInsertAfter
_QueueInsertAfter:
;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r2,4(r30)
	lw	r1,8(r30)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertAfter
.align 2
.proc _QueueInsertFirst
.global _QueueInsertFirst
_QueueInsertFirst:
;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	sw	8(r1),r3
	sw	4(r1),r3
	lw	r31,(r3)
	sw	(r1),r31
	sw	(r3),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertFirst
.align 2
.proc _QueueInsertLast
.global _QueueInsertLast
_QueueInsertLast:
;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r1,4(r30)
	lw	r2,4(r3)
	sw	8(r1),r3
	sw	4(r1),r2
	lw	r31,(r2)
	sw	(r1),r31
	sw	(r2),r1
	lw	r2,(r1)
	sw	4(r2),r1
	lw	r1,8(r3)
	addi	r1,r1,#1
	sw	8(r3),r1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueInsertLast
.align 2
.proc _QueueRemove
.global _QueueRemove
_QueueRemove:
;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r31,(r30)
	lw	r1,8(r31)
	lw	r1,8(r1)
	sgti	r1,r1,#0
	beqz	r1,L44_LF10
	nop; not filled.
	lw	r1,4(r31)
	lw	r3,(r31)
	sw	(r1),r3
	lw	r1,(r31)
	lw	r3,4(r31)
	sw	4(r1),r3
	lw	r2,8(r31)
	lw	r1,8(r2)
	addi	r1,r1,#-1
	sw	8(r2),r1
L44_LF10:
	addi	r3,r0,#0
	sw	(r31),r3
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueRemove
.align 2
.proc _QueueLength
.global _QueueLength
_QueueLength:
;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueLength
.align 2
.proc _QueueEmpty
.global _QueueEmpty
_QueueEmpty:
;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#8; alloc local storage
	lw	r1,(r30)
	lw	r1,8(r1)
	seqi	r1,r1,#0
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _QueueEmpty
.data
.align 2
LC0_LF10:
.ascii "Process #\000"
.align 2
LC1_LF10:
.ascii "Running process %d (iteration %d)!\n\000"
.text
.align 2
.proc _doSomething_LF10
_doSomething_LF10:
;  Function 'doSomething'; 80 bytes of locals, 7 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#120; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	sw	24(r29),r8
	lw	r6,(r30)
	addi	r1,r0,#10
	movi2fp	f0,r6
	movi2fp	f1,r1
	div	f0,f0,f1
	movfp2i	r2,f0
	slli	r1,r2,#0x2
	add	r1,r1,r2
	slli	r1,r1,#0x1
	sub	r7,r6,r1
	slei	r1,r6,#99
	beqz	r1,L52_LF10
	nop; not filled.
	addi	r29,r29,#-8
	slli	r1,r7,#0x2
	add	r1,r1,r7
	slli	r1,r1,#0x2
	lhi	r8,((_mysems_LF10)>>16)&0xffff
	addui	r8,r8,(_mysems_LF10)&0xffff
	add	r1,r1,r8
	sw	(r29),r1
	addi	r8,r0,#1
	sw	4(r29),r8
	jal	_SemInit
	nop; not filled.
	addi	r3,r0,#1
	addi	r29,r29,#8
	addi	r4,r30,#-48
	addi	r5,r30,#-88
	add	r2,r0,r6
L56_LF10:
	addi	r29,r29,#-8
	sw	(r29),r4
	lhi	r8,((LC0_LF10)>>16)&0xffff
	addui	r8,r8,(LC0_LF10)&0xffff
	sw	4(r29),r8
	jal	_dstrcpy
	nop; not filled.
	sw	(r29),r3
	sw	4(r29),r5
	jal	_ditoa
	nop; not filled.
	sw	(r29),r4
	sw	4(r29),r5
	jal	_dstrcat
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r8,((_doSomething_LF10)>>16)&0xffff
	addui	r8,r8,(_doSomething_LF10)&0xffff
	sw	(r29),r8
	slli	r1,r2,#0x5
	sub	r1,r1,r2
	slli	r1,r1,#0x2
	add	r1,r1,r2
	slli	r1,r1,#0x3
	add	r1,r1,r6
	sw	4(r29),r1
	addi	r8,r0,#0
	sw	8(r29),r8
	sw	12(r29),r8
	sw	16(r29),r4
	sw	20(r29),r8
	jal	_ProcessFork
	nop; not filled.
	addi	r29,r29,#24
	add	r2,r2,r6
	addi	r3,r3,#1
	slei	r1,r3,#6
	bnez	r1,L56_LF10
	nop; not filled.
L52_LF10:
	addi	r29,r29,#-8
	slli	r1,r7,#0x2
	add	r1,r1,r7
	slli	r1,r1,#0x2
	lhi	r8,((_mysems_LF10)>>16)&0xffff
	addui	r8,r8,(_mysems_LF10)&0xffff
	add	r1,r1,r8
	sw	(r29),r1
	jal	_SemWait
	nop; not filled.
	addi	r3,r0,#0
	addi	r29,r29,#8
	slli	r2,r6,#0x1
	slt	r1,r3,r2
	beqz	r1,L59_LF10
	nop; not filled.
	addi	r5,r0,#1000
	add	r4,r0,r2
L61_LF10:
	movi2fp	f0,r3
	movi2fp	f1,r5
	div	f0,f0,f1
	movfp2i	r2,f0
	slli	r1,r2,#0x5
	sub	r1,r1,r2
	slli	r1,r1,#0x2
	add	r1,r1,r2
	slli	r1,r1,#0x3
	sne	r1,r3,r1
	bnez	r1,L62_LF10
	nop; not filled.
	addi	r29,r29,#-16
	lhi	r8,((LC1_LF10)>>16)&0xffff
	addui	r8,r8,(LC1_LF10)&0xffff
	sw	(r29),r8
	sw	4(r29),r6
	sw	8(r29),r3
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
L62_LF10:
	addi	r3,r3,#1
	slt	r1,r3,r4
	bnez	r1,L61_LF10
	nop; not filled.
L59_LF10:
	addi	r29,r29,#-8
	slli	r1,r7,#0x2
	add	r1,r1,r7
	slli	r1,r1,#0x2
	lhi	r8,((_mysems_LF10)>>16)&0xffff
	addui	r8,r8,(_mysems_LF10)&0xffff
	add	r1,r1,r8
	sw	(r29),r1
	jal	_SemSignal
	nop; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r8,24(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _doSomething_LF10
.data
.align 2
LC2_LF10:
.ascii "chasetail\000"
.align 2
LC3_LF10:
.ascii "Chasing tail %d.\n\000"
.align 2
LC4_LF10:
.ascii "Open of (%s,0x%x) returns 0x%x.\n\000"
.align 2
LC5_LF10:
.ascii "ChaseTail\000"
.text
.align 2
.proc _chaseTail_LF10
_chaseTail_LF10:
;  Function 'chaseTail'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r4,(r30)
	lhi	r3,((LC2_LF10)>>16)&0xffff
	addui	r3,r3,(LC2_LF10)&0xffff
	addi	r29,r29,#-8
	lhi	r5,((LC3_LF10)>>16)&0xffff
	addui	r5,r5,(LC3_LF10)&0xffff
	sw	(r29),r5
	sw	4(r29),r4
	jal	_printf
	nop; not filled.
	sw	(r29),r3
	addi	r2,r4,#8192
	sw	4(r29),r2
	jal	_Open
	nop; not filled.
	addi	r29,r29,#-8
	lhi	r5,((LC4_LF10)>>16)&0xffff
	addui	r5,r5,(LC4_LF10)&0xffff
	sw	(r29),r5
	sw	4(r29),r3
	sw	8(r29),r2
	sw	12(r29),r1
	jal	_printf
	nop; not filled.
	addi	r29,r29,#16
	slei	r1,r4,#39
	beqz	r1,L67_LF10
	nop; not filled.
	addi	r29,r29,#-24
	lhi	r5,((_chaseTail_LF10)>>16)&0xffff
	addui	r5,r5,(_chaseTail_LF10)&0xffff
	sw	(r29),r5
	addi	r1,r4,#1
	sw	4(r29),r1
	addi	r5,r0,#0
	sw	8(r29),r5
	sw	12(r29),r5
	lhi	r5,((LC5_LF10)>>16)&0xffff
	addui	r5,r5,(LC5_LF10)&0xffff
	sw	16(r29),r5
	addi	r5,r0,#0
	sw	20(r29),r5
	jal	_ProcessFork
	nop; not filled.
	addi	r29,r29,#24
L67_LF10:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _chaseTail_LF10
.data
.align 2
LC6_LF10:
.ascii "%d \000"
.align 2
LC7_LF10:
.ascii "Random number %02i is 0x%08x.\n\000"
.text
.align 2
.proc _SysprocCreateProcesses
.global _SysprocCreateProcesses
_SysprocCreateProcesses:
;  Function 'SysprocCreateProcesses'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,#24; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lhi	r2,((_mysems_LF10)>>16)&0xffff
	addui	r2,r2,(_mysems_LF10)&0xffff
	addi	r3,r2,#180
L90_LF10:
	addi	r29,r29,#-8
	sw	(r29),r2
	addi	r4,r0,#1
	sw	4(r29),r4
	jal	_SemInit
	nop; not filled.
	addi	r29,r29,#8
	addi	r2,r2,#20
	sle	r1,r2,r3
	bnez	r1,L90_LF10
	nop; not filled.
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SysprocCreateProcesses
.data
.align 2
_mysems_LF10:
.space 200
;;; This file just includes a single variable that contains the last address
;;; in the operating system.  The rest of memory is available for use by
;;; processes.

.align 2
.global _lastosaddress
_lastosaddress:
.word _lastosaddress+8
;;; Ethan L. Miller, 1999.  Released to the public domain
;;;
;;; Most of the traps are called in files from libtraps.

.text
.align 2
.proc _exit
.global _exit
_exit:
	trap	#0x300
	jr	r31
	nop
.endproc _exit

; for the benefit of gcc.
.proc ___main
.global ___main
___main:
	jr	r31
	nop
.endproc ___main
;;;
;;; Stub functions for DLX traps.
;;;
;;; Ethan L. Miller, 1999.  Released to the public domain.
;;;
;;; There are two sets of traps here.  The traps such as Open and Close
;;; (note the capital letters) are for use by user programs.  The traps
;;; with names such as open and close (lower case) are for use by the OS.
;;;


.align 2
.proc _open
.global _open
_open:
	trap	#0x2013
	jr	r31
	nop
.endproc _open

.proc _close
.global _close
_close:
	trap	#0x2014
	jr	r31
	nop
.endproc _close

.proc _read
.global _read
_read:
	trap	#0x2010
	jr	r31
	nop
.endproc _read

.proc _write
.global _write
_write:
	trap	#0x2011
	jr	r31
	nop
.endproc _write

.proc _lseek
.global _lseek
_lseek:
	trap	#0x2012
	jr	r31
	nop
.endproc _lseek

;;; The following are the traps to be used by user-level programs
;;;

.align 2
.proc _Open
.global _Open
_Open:
	trap	#0x213
	jr	r31
	nop
.endproc _Open

.proc _Close
.global _Close
_Close:
	trap	#0x214
	jr	r31
	nop
.endproc _Close

.proc _Read
.global _Read
_Read:
	trap	#0x210
	jr	r31
	nop
.endproc _Read

.proc _Write
.global _Write
_Write:
	trap	#0x211
	jr	r31
	nop
.endproc _Write

.proc _Lseek
.global _Lseek
_Lseek:
	trap	#0x212
	jr	r31
	nop
.endproc _Lseek

;;;
;;; Stub functions for DLX traps.
;;;
;;; Ethan L. Miller, 1999.  Released to the public domain.
;;;
;;; There are two exit traps.  The first, _exitsim, actually exits the
;;; simulator.  The second, _exit, simply calls a regular trap in the
;;; DLX simulator, and would be suitable for a user program that wants
;;; to signal the OS that it's exiting.
;;;
;;; IMPORTANT: all code that's run "native" on the simulator - OS code and
;;; programs run without an OS - should call exitsim() rather than just
;;; falling through to exit.
;;;


.align 2
.proc _exitsim
.global _exitsim
_exitsim:
	trap	#0x2f00
	jr	r31
	nop
.endproc _exitsim

.proc _exit
.global _exit
_exit:
	trap	#0x300
	jr	r31
	nop
.endproc _exit

;
; Stub functions for DLX traps.
;
; Aaron Sawdey 1996; released to the Public Domain.
;

.proc _printf
.global _printf
_printf:
	trap	#0x2001
	jr	r31
	nop
.endproc _printf

.text
.global _etext
_etext:
.align 3
.data
.global _edata
_edata:
